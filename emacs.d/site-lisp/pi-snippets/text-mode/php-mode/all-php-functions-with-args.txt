abs(mixed number)
   Absolute value --returns number--
acos(float arg)
   Arc cosine --returns float--
acosh(float arg)
   Inverse hyperbolic cosine --returns float--
addcslashes(string str, string charlist)
   Quote string with slashes in a C style --returns string--
addslashes(string str)
   Quote string with slashes --returns string--
aggregate_info(object object)
   Gets aggregation information for a given object --returns array--
aggregate_methods_by_list(object object, string class_name, array methods_list [, bool exclude ])
   Selective dynamic class methods aggregation to an object --returns void--
aggregate_methods_by_regexp(object object, string class_name, string regexp [, bool exclude ])
   Selective class methods aggregation to an object using a regular expression --returns void--
aggregate_methods(object object, string class_name)
   Dynamic class and object aggregation of methods --returns void--
aggregate_properties_by_list(object object, string class_name, array properties_list [, bool exclude ])
   Selective dynamic class properties aggregation to an object --returns void--
aggregate_properties_by_regexp(object object, string class_name, string regexp [, bool exclude ])
   Selective class properties aggregation to an object using a regular expression --returns void--
aggregate_properties(object object, string class_name)
   Dynamic aggregation of class properties to an object --returns void--
aggregate(object object, string class_name)
   Dynamic class and object aggregation of methods and properties --returns void--
aggregation_info
   Alias of aggregate_info() --returns ?--
apache_child_terminate(void)
   Terminate apache process after this request --returns bool--
apache_get_modules(void)
   Get a list of loaded Apache modules --returns array--
apache_get_version(void)
   Fetch Apache version --returns string--
apache_getenv(string variable [, bool walk_to_top ])
   Get an Apache subprocess_env variable --returns string--
apache_lookup_uri(string filename)
   Perform a partial request for the specified URI and return all info about it --returns object--
apache_note(string note_name [, string note_value ])
   Get and set apache request notes --returns string--
apache_request_headers(void)
   Fetch all HTTP request headers --returns array--
apache_reset_timeout(void)
   Reset the Apache write timer --returns bool--
apache_response_headers(void)
   Fetch all HTTP response headers --returns array--
apache_setenv(string variable, string value [, bool walk_to_top ])
   Set an Apache subprocess_env variable --returns bool--
apc_add(string key, mixed var [, int ttl ])
   Cache a variable in the data store --returns bool--
apc_cache_info ([ string cache_type [, bool limited ]])
   Retrieves cached information from APC's data store --returns array--
apc_clear_cache ([ string cache_type ])
   Clears the APC cache --returns bool--
apc_compile_file(string filename)
   Stores a file in the bytecode cache, bypassing all filters. --returns bool--
apc_define_constants(string key, array constants [, bool case_sensitive ])
   Defines a set of constants for retrieval and mass-definition --returns bool--
apc_delete(string key)
   Removes a stored variable from the cache --returns bool--
apc_fetch(string key)
   Fetch a stored variable from the cache --returns mixed--
apc_load_constants(string key [, bool case_sensitive ])
   Loads a set of constants from the cache --returns bool--
apc_sma_info ([ bool limited ])
   Retrieves APC's Shared Memory Allocation information --returns array--
apc_store(string key, mixed var [, int ttl ])
   Cache a variable in the data store --returns bool--
apd_breakpoint(int debug_level)
   Stops the interpreter and waits on a CR from the socket --returns bool--
apd_callstack(void)
   Returns the current call stack as an array --returns array--
apd_clunk(string warning [, string delimiter ])
   Throw a warning and a callstack --returns void--
apd_continue(int debug_level)
   Restarts the interpreter --returns bool--
apd_croak(string warning [, string delimiter ])
   Throw an error, a callstack and then exit --returns void--
apd_dump_function_table(void)
   Outputs the current function table --returns void--
apd_dump_persistent_resources(void)
   Return all persistent resources as an array --returns array--
apd_dump_regular_resources(void)
   Return all current regular resources as an array --returns array--
apd_echo(string output)
   Echo to the debugging socket --returns bool--
apd_get_active_symbols(void)
   Get an array of the current variables names in the local scope --returns array--
apd_set_pprof_trace ([ string dump_directory [, string fragment ]])
   Starts the session debugging --returns string--
apd_set_session_trace(int debug_level [, string dump_directory ])
   Starts the session debugging --returns void--
apd_set_session(int debug_level)
   Changes or sets the current debugging level --returns void--
apd_set_socket_session_trace(string tcp_server, int socket_type, int port, int debug_level)
   Starts the remote session debugging --returns bool--
array_change_key_case(array input [, int case ])
   Changes all keys in an array --returns array--
array_chunk(array input, int size [, bool preserve_keys ])
   Split an array into chunks --returns array--
array_combine(array keys, array values)
   Creates an array by using one array for keys and another for its values --returns array--
array_count_values(array input)
   Counts all the values of an array --returns array--
array_diff_assoc(array array1, array array2 [, array ... ])
   Computes the difference of arrays with additional index check --returns array--
array_diff_key(array array1, array array2 [, array ... ])
   Computes the difference of arrays using keys for comparison --returns array--
array_diff_uassoc(array array1, array array2 [, array ... ], callback key_compare_func)
   Computes the difference of arrays with additional index check which is performed by a user supplied callback function --returns array--
array_diff_ukey(array array1, array array2 [, array ... ], callback key_compare_func)
   Computes the difference of arrays using a callback function on the keys for comparison --returns array--
array_diff(array array1, array array2 [, array ... ])
   Computes the difference of arrays --returns array--
array_fill_keys(array keys, mixed value)
   Fill an array with values, specifying keys --returns array--
array_fill(int start_index, int num, mixed value)
   Fill an array with values --returns array--
array_filter(array input [, callback callback ])
   Filters elements of an array using a callback function --returns array--
array_flip(array trans)
   Exchanges all keys with their associated values in an array --returns array--
array_intersect_assoc(array array1, array array2 [, array ... ])
   Computes the intersection of arrays with additional index check --returns array--
array_intersect_key(array array1, array array2 [, array ... ])
   Computes the intersection of arrays using keys for comparison --returns array--
array_intersect_uassoc(array array1, array array2 [, array ... ], callback key_compare_func)
   Computes the intersection of arrays with additional index check, compares indexes by a callback function --returns array--
array_intersect_ukey(array array1, array array2 [, array ... ], callback key_compare_func)
   Computes the intersection of arrays using a callback function on the keys for comparison --returns array--
array_intersect(array array1, array array2 [, array ... ])
   Computes the intersection of arrays --returns array--
array_key_exists(mixed key, array search)
   Checks if the given key or index exists in the array --returns bool--
array_keys(array input [, mixed search_value [, bool strict ]])
   Return all the keys of an array --returns array--
array_map(callback callback, array arr1 [, array ... ])
   Applies the callback to the elements of the given arrays --returns array--
array_merge_recursive(array array1 [, array ... ])
   Merge two or more arrays recursively --returns array--
array_merge(array array1 [, array array2 [, array ... ]])
   Merge one or more arrays --returns array--
array_multisort(array arr [, mixed arg [, mixed ... ]])
   Sort multiple or multi-dimensional arrays --returns bool--
array_pad(array input, int pad_size, mixed pad_value)
   Pad array to the specified length with a value --returns array--
array_pop(array &array)
   Pop the element off the end of array --returns mixed--
array_product(array array)
   Calculate the product of values in an array --returns number--
array_push(array &array, mixed var [, mixed ... ])
   Push one or more elements onto the end of array --returns int--
array_rand(array input [, int num_req ])
   Pick one or more random entries out of an array --returns mixed--
array_reduce(array input, callback function [, int initial ])
   Iteratively reduce the array to a single value using a callback function --returns mixed--
array_reverse(array array [, bool preserve_keys ])
   Return an array with elements in reverse order --returns array--
array_search(mixed needle, array haystack [, bool strict ])
   Searches the array for a given value and returns the corresponding key if successful --returns mixed--
array_shift(array &array)
   Shift an element off the beginning of array --returns mixed--
array_slice(array array, int offset [, int length [, bool preserve_keys ]])
   Extract a slice of the array --returns array--
array_splice(array &input, int offset [, int length [, mixed replacement ]])
   Remove a portion of the array and replace it with something else --returns array--
array_sum(array array)
   Calculate the sum of values in an array --returns number--
array_udiff_assoc(array array1, array array2 [, array ... ], callback data_compare_func)
   Computes the difference of arrays with additional index check, compares data by a callback function --returns array--
array_udiff_uassoc(array array1, array array2 [, array ... ], callback data_compare_func, callback key_compare_func)
   Computes the difference of arrays with additional index check, compares data and indexes by a callback function --returns array--
array_udiff(array array1, array array2 [, array ... ], callback data_compare_func)
   Computes the difference of arrays by using a callback function for data comparison --returns array--
array_uintersect_assoc(array array1, array array2 [, array ... ], callback data_compare_func)
   Computes the intersection of arrays with additional index check, compares data by a callback function --returns array--
array_uintersect_uassoc(array array1, array array2 [, array ... ], callback data_compare_func, callback key_compare_func)
   Computes the intersection of arrays with additional index check, compares data and indexes by a callback functions --returns array--
array_uintersect(array array1, array array2 [, array ... ], callback data_compare_func)
   Computes the intersection of arrays, compares data by a callback function --returns array--
array_unique(array array)
   Removes duplicate values from an array --returns array--
array_unshift(array &array, mixed var [, mixed ... ])
   Prepend one or more elements to the beginning of an array --returns int--
array_values(array input)
   Return all the values of an array --returns array--
array_walk_recursive(array &input, callback funcname [, mixed userdata ])
   Apply a user function recursively to every member of an array --returns bool--
array_walk(array &array, callback funcname [, mixed userdata ])
   Apply a user function to every member of an array --returns bool--
array ([ mixed ... ])
   Create an array --returns array--
arsort(array &array [, int sort_flags ])
   Sort an array in reverse order and maintain index association --returns bool--
ascii2ebcdic(string ascii_str)
   Translate string from ASCII to EBCDIC --returns int--
asin(float arg)
   Arc sine --returns float--
asinh(float arg)
   Inverse hyperbolic sine --returns float--
asort(array &array [, int sort_flags ])
   Sort an array and maintain index association --returns bool--
assert_options(int what [, mixed value ])
   Set/get the various assert flags --returns mixed--
assert(mixed assertion)
   Checks if assertion is FALSE --returns bool--
atan(float arg)
   Arc tangent --returns float--
atan2(float y, float x)
   Arc tangent of two variables --returns float--
atanh(float arg)
   Inverse hyperbolic tangent --returns float--
base_convert(string number, int frombase, int tobase)
   Convert a number between arbitrary bases --returns string--
base64_decode(string data [, bool strict ])
   Decodes data encoded with MIME base64 --returns string--
base64_encode(string data)
   Encodes data with MIME base64 --returns string--
basename(string path [, string suffix ])
   Returns filename component of path --returns string--
bbcode_add_element(resource bbcode_container, string tag_name, array tag_rules)
   Adds a bbcode element --returns bool--
bbcode_add_smiley(resource bbcode_container, string smiley, string replace_by)
   Adds a smiley to the parser --returns bool--
bbcode_create ([ array bbcode_initial_tags ])
   Create a BBCode Resource --returns resource--
bbcode_destroy(resource bbcode_container)
   Close BBCode_container resource --returns bool--
bbcode_parse(resource bbcode_container, string to_parse)
   Parse a string following a given rule set --returns string--
bbcode_set_arg_parser(resource bbcode_container, resource bbcode_arg_parser)
   Attach another parser in order to use another rule set for argument parsing --returns bool--
bbcode_set_flags(resource bbcode_container, int flags [, int mode ])
   Set or alter parser options --returns bool--
bcadd(string left_operand, string right_operand [, int scale ])
   Add two arbitrary precision numbers --returns string--
bccomp(string left_operand, string right_operand [, int scale ])
   Compare two arbitrary precision numbers --returns int--
bcdiv(string left_operand, string right_operand [, int scale ])
   Divide two arbitrary precision numbers --returns string--
bcmod(string left_operand, string modulus)
   Get modulus of an arbitrary precision number --returns string--
bcmul(string left_operand, string right_operand [, int scale ])
   Multiply two arbitrary precision number --returns string--
bcompiler_load_exe(string filename)
   Reads and creates classes from a bcompiler exe file --returns bool--
bcompiler_load(string filename)
   Reads and creates classes from a bz compressed file --returns bool--
bcompiler_parse_class(string class, string callback)
   Reads the bytecodes of a class and calls back to a user function --returns bool--
bcompiler_read(resource filehandle)
   Reads and creates classes from a filehandle --returns bool--
bcompiler_write_class(resource filehandle, string className [, string extends ])
   Writes an defined class as bytecodes --returns bool--
bcompiler_write_constant(resource filehandle, string constantName)
   Writes a defined constant as bytecodes --returns bool--
bcompiler_write_exe_footer(resource filehandle, int startpos)
   Writes the start pos, and sig to the end of a exe type file --returns bool--
bcompiler_write_file(resource filehandle, string filename)
   Writes a php source file as bytecodes --returns bool--
bcompiler_write_footer(resource filehandle)
   Writes the single character \x00 to indicate End of compiled data --returns bool--
bcompiler_write_function(resource filehandle, string functionName)
   Writes an defined function as bytecodes --returns bool--
bcompiler_write_functions_from_file(resource filehandle, string fileName)
   Writes all functions defined in a file as bytecodes --returns bool--
bcompiler_write_header(resource filehandle [, string write_ver ])
   Writes the bcompiler header --returns bool--
bcompiler_write_included_filename(resource filehandle, string filename)
   Writes an included file as bytecodes --returns bool--
bcpow(string left_operand, string right_operand [, int scale ])
   Raise an arbitrary precision number to another --returns string--
bcpowmod(string left_operand, string right_operand, string modulus [, int scale ])
   Raise an arbitrary precision number to another, reduced by a specified modulus --returns string--
bcscale(int scale)
   Set default scale parameter for all bc math functions --returns bool--
bcsqrt(string operand [, int scale ])
   Get the square root of an arbitrary precision number --returns string--
bcsub(string left_operand, string right_operand [, int scale ])
   Subtract one arbitrary precision number from another --returns string--
bin2hex(string str)
   Convert binary data into hexadecimal representation --returns string--
bind_textdomain_codeset(string domain, string codeset)
   Specify the character encoding in which the messages from the DOMAIN message catalog will be returned --returns string--
bindec(string binary_string)
   Binary to decimal --returns number--
bindtextdomain(string domain, string directory)
   Sets the path for a domain --returns string--
bzclose(resource bz)
   Close a bzip2 file --returns int--
bzcompress(string source [, int blocksize [, int workfactor ]])
   Compress a string into bzip2 encoded data --returns mixed--
bzdecompress(string source [, int small ])
   Decompresses bzip2 encoded data --returns mixed--
bzerrno(resource bz)
   Returns a bzip2 error number --returns int--
bzerror(resource bz)
   Returns the bzip2 error number and error string in an array --returns array--
bzerrstr(resource bz)
   Returns a bzip2 error string --returns string--
bzflush(resource bz)
   Force a write of all buffered data --returns int--
bzopen(string filename, string mode)
   Opens a bzip2 compressed file --returns resource--
bzread(resource bz [, int length ])
   Binary safe bzip2 file read --returns string--
bzwrite(resource bz, string data [, int length ])
   Binary safe bzip2 file write --returns int--
cal_days_in_month(int calendar, int month, int year)
   Return the number of days in a month for a given year and calendar --returns int--
cal_from_jd(int jd, int calendar)
   Converts from Julian Day Count to a supported calendar --returns array--
cal_info ([ int calendar ])
   Returns information about a particular calendar --returns array--
cal_to_jd(int calendar, int month, int day, int year)
   Converts from a supported calendar to Julian Day Count --returns int--
calcul_hmac(string clent, string siretcode, string price, string reference, string validity, string taxation, string devise, string language)
   Obtain a hmac key (needs 8 arguments) --returns string--
calculhmac(string clent, string data)
   Obtain a hmac key (needs 2 arguments) --returns string--
call_user_func_array(callback function, array param_arr)
   Call a user function given with an array of parameters --returns mixed--
call_user_func(callback function [, mixed parameter [, mixed ... ]])
   Call a user function given by the first parameter --returns mixed--
call_user_method_array(string method_name, object &obj, array params)
   Call a user method given with an array of parameters [deprecated] --returns mixed--
call_user_method(string method_name, object &obj [, mixed parameter [, mixed ... ]])
   Call a user method on an specific object [deprecated] --returns mixed--
ceil(float value)
   Round fractions up --returns float--
chdir(string directory)
   Change directory --returns bool--
checkdate(int month, int day, int year)
   Validate a Gregorian date --returns bool--
checkdnsrr(string host [, string type ])
   Check DNS records corresponding to a given Internet host name or IP address --returns bool--
chgrp(string filename, mixed group)
   Changes file group --returns bool--
chmod(string filename, int mode)
   Changes file mode --returns bool--
chop
   Alias of rtrim() --returns ?--
chown(string filename, mixed user)
   Changes file owner --returns bool--
chr(int ascii)
   Return a specific character --returns string--
chroot(string directory)
   Change the root directory --returns bool--
chunk_split(string body [, int chunklen [, string end ]])
   Split a string into smaller chunks --returns string--
class_exists(string class_name [, bool autoload ])
   Checks if the class has been defined --returns bool--
class_implements(mixed class [, bool autoload ])
   Return the interfaces which are implemented by the given class --returns array--
class_parents(mixed class [, bool autoload ])
   Return the parent classes of the given class --returns array--
classkit_import(string filename)
   Import new class method definitions from a file --returns array--
classkit_method_add(string classname, string methodname, string args, string code [, int flags ])
   Dynamically adds a new method to a given class --returns bool--
classkit_method_copy(string dClass, string dMethod, string sClass [, string sMethod ])
   Copies a method from class to another --returns bool--
classkit_method_redefine(string classname, string methodname, string args, string code [, int flags ])
   Dynamically changes the code of the given method --returns bool--
classkit_method_remove(string classname, string methodname)
   Dynamically removes the given method --returns bool--
classkit_method_rename(string classname, string methodname, string newname)
   Dynamically changes the name of the given method --returns bool--
clearstatcache(void)
   Clears file status cache --returns void--
closedir ([ resource dir_handle ])
   Close directory handle --returns void--
closelog(void)
   Close connection to system logger --returns bool--
com_addref(void)
   Increases the components reference counter [deprecated] --returns void--
com_create_guid(void)
   Generate a globally unique identifier (GUID) --returns string--
com_event_sink(variant comobject, object sinkobject [, mixed sinkinterface ])
   Connect events from a COM object to a PHP object --returns bool--
com_get_active_object(string progid [, int code_page ])
   Returns a handle to an already running instance of a COM object --returns variant--
com_get
   Gets the value of a COM Component's property [deprecated] --returns ?--
com_invoke(resource com_object, string function_name [, mixed function_parameters ])
   Calls a COM component's method [deprecated] --returns mixed--
com_isenum(variant com_module)
   Indicates if a COM object has an IEnumVariant interface for iteration [deprecated] --returns bool--
com_load_typelib(string typelib_name [, bool case_insensitive ])
   Loads a Typelib --returns bool--
com_load
   Creates a new reference to a COM component [deprecated] --returns ?--
com_message_pump ([ int timeoutms ])
   Process COM messages, sleeping for up to timeoutms milliseconds --returns bool--
com_print_typeinfo(object comobject [, string dispinterface [, bool wantsink ]])
   Print out a PHP class definition for a dispatchable interface --returns bool--
com_propget
   Alias of com_get() --returns ?--
com_propput
   Alias of com_set() --returns ?--
com_propset
   Alias of com_set() --returns ?--
com_release(void)
   Decreases the components reference counter [deprecated] --returns void--
com_set
   Assigns a value to a COM component's property --returns ?--
compact(mixed varname [, mixed ... ])
   Create array containing variables and their values --returns array--
connection_aborted(void)
   Check whether client disconnected --returns int--
connection_status(void)
   Returns connection status bitfield --returns int--
connection_timeout(void)
   Check if the script timed out --returns int--
constant(string name)
   Returns the value of a constant --returns mixed--
convert_cyr_string(string str, string from, string to)
   Convert from one Cyrillic character set to another --returns string--
convert_uudecode(string data)
   Decode a uuencoded string --returns string--
convert_uuencode(string data)
   Uuencode a string --returns string--
copy(string source, string dest [, resource context ])
   Copies file --returns bool--
cos(float arg)
   Cosine --returns float--
cosh(float arg)
   Hyperbolic cosine --returns float--
count_chars(string string [, int mode ])
   Return information about characters used in a string --returns mixed--
count(mixed var [, int mode ])
   Count elements in an array, or properties in an object --returns int--
crack_check(resource dictionary, string password) bool crack_check(string password)
   Performs an obscure check with the given password --returns bool--
crack_closedict ([ resource dictionary ])
   Closes an open CrackLib dictionary --returns bool--
crack_getlastmessage(void)
   Returns the message from the last obscure check --returns string--
crack_opendict(string dictionary)
   Opens a new CrackLib dictionary --returns resource--
crc32(string str)
   Calculates the crc32 polynomial of a string --returns int--
create_function(string args, string code)
   Create an anonymous (lambda-style) function --returns string--
crypt(string str [, string salt ])
   One-way string encryption (hashing) --returns string--
ctype_alnum(string text)
   Check for alphanumeric character(s) --returns bool--
ctype_alpha(string text)
   Check for alphabetic character(s) --returns bool--
ctype_cntrl(string text)
   Check for control character(s) --returns bool--
ctype_digit(string text)
   Check for numeric character(s) --returns bool--
ctype_graph(string text)
   Check for any printable character(s) except space --returns bool--
ctype_lower(string text)
   Check for lowercase character(s) --returns bool--
ctype_print(string text)
   Check for printable character(s) --returns bool--
ctype_punct(string text)
   Check for any printable character which is not whitespace or an alphanumeric character --returns bool--
ctype_space(string text)
   Check for whitespace character(s) --returns bool--
ctype_upper(string text)
   Check for uppercase character(s) --returns bool--
ctype_xdigit(string text)
   Check for character(s) representing a hexadecimal digit --returns bool--
curl_close(resource ch)
   Close a cURL session --returns void--
curl_copy_handle(resource ch)
   Copy a cURL handle along with all of its preferences --returns resource--
curl_errno(resource ch)
   Return the last error number --returns int--
curl_error(resource ch)
   Return a string containing the last error for the current session --returns string--
curl_exec(resource ch)
   Perform a cURL session --returns mixed--
curl_getinfo(resource ch [, int opt ])
   Get information regarding a specific transfer --returns mixed--
curl_init ([ string url ])
   Initialize a cURL session --returns resource--
curl_multi_add_handle(resource mh, resource ch)
   Add a normal cURL handle to a cURL multi handle --returns int--
curl_multi_close(resource mh)
   Close a set of cURL handles --returns void--
curl_multi_exec(resource mh, int &still_running)
   Run the sub-connections of the current cURL handle --returns int--
curl_multi_getcontent(resource ch)
   Return the content of a cURL handle if CURLOPT_RETURNTRANSFER is set --returns string--
curl_multi_info_read(resource mh [, int msgs_in_queue ])
   Get information about the current transfers --returns array--
curl_multi_init(void)
   Returns a new cURL multi handle --returns resource--
curl_multi_remove_handle(resource mh, resource ch)
   Remove a multi handle from a set of cURL handles --returns int--
curl_multi_select(resource mh [, float timeout ])
   Get all the sockets associated with the cURL extension, which can then be &quot;selected&quot; --returns int--
curl_setopt_array(resource ch, array options)
   Set multiple options for a cURL transfer --returns bool--
curl_setopt(resource ch, int option, mixed value)
   Set an option for a cURL transfer --returns bool--
curl_version ([ int age ])
   Gets cURL version information --returns array--
current(array &array)
   Return the current element in an array --returns mixed--
cyrus_authenticate(resource connection [, string mechlist [, string service [, string user [, int minssf [, int maxssf [, string authname [, string password ]]]]]]])
   Authenticate against a Cyrus IMAP server --returns void--
cyrus_bind(resource connection, array callbacks)
   Bind callbacks to a Cyrus IMAP connection --returns bool--
cyrus_close(resource connection)
   Close connection to a Cyrus IMAP server --returns bool--
cyrus_connect ([ string host [, string port [, int flags ]]])
   Connect to a Cyrus IMAP server --returns resource--
cyrus_query(resource connection, string query)
   Send a query to a Cyrus IMAP server --returns array--
cyrus_unbind(resource connection, string trigger_name)
   Unbind ... --returns bool--
date_add(DateTime object, DateInterval interval)
   Adds an amount of days, months, years, hours, minutes and seconds to a DateTime object --returns void--
date_create ([ string time [, DateTimeZone timezone ]]) DateTime DateTime::__construct ([ string time [, DateTimeZone timezone ]])
   Returns new DateTime object --returns DateTime--
date_date_set(DateTime object, int year, int month, int day) void DateTime::setDate(int year, int month, int day)
   Sets the date --returns void--
date_default_timezone_get(void)
   Gets the default timezone used by all date/time functions in a script --returns string--
date_default_timezone_set(string timezone_identifier)
   Sets the default timezone used by all date/time functions in a script --returns bool--
date_format(DateTime object, string format) string DateTime::format(string format)
   Returns date formatted according to given format --returns string--
date_isodate_set(DateTime object, int year, int week [, int day ]) void DateTime::setISODate(int year, int week [, int day ])
   Sets the ISO date --returns void--
date_modify(DateTime object, string modify) void DateTime::modify(string modify)
   Alters the timestamp --returns void--
date_offset_get(DateTime object) int DateTime::getOffset(void)
   Returns the daylight saving time offset --returns int--
date_parse(string date)
   Returns associative array with detailed info about given date --returns array--
date_sub(DateTime object, DateInterval interval)
   Subtracts an amount of days, months, years, hours, minutes and seconds from a DateTime object --returns void--
date_sun_info(int time, float latitude, float longitude)
   Returns an array with information about sunset/sunrise and twilight begin/end --returns array--
date_sunrise(int timestamp [, int format [, float latitude [, float longitude [, float zenith [, float gmt_offset ]]]]])
   Returns time of sunrise for a given day and location --returns mixed--
date_sunset(int timestamp [, int format [, float latitude [, float longitude [, float zenith [, float gmt_offset ]]]]])
   Returns time of sunset for a given day and location --returns mixed--
date_time_set(DateTime object, int hour, int minute [, int second ]) void DateTime::setTime(int hour, int minute [, int second ])
   Sets the time --returns void--
date_timezone_get(DateTime object) DateTimeZone DateTime::getTimezone(void)
   Return time zone relative to given DateTime --returns DateTimeZone--
date_timezone_set(DateTime object, DateTimeZone timezone) void DateTime::setTimezone(DateTimeZone timezone)
   Sets the time zone for the DateTime object --returns void--
date(string format [, int timestamp ])
   Format a local time/date --returns string--
db2_autocommit(resource connection [, bool value ])
   Returns or sets the AUTOCOMMIT state for a database connection --returns mixed--
db2_bind_param(resource stmt, int parameter-number, string variable-name [, int parameter-type [, int data-type [, int precision [, int scale ]]]])
   Binds a PHP variable to an SQL statement parameter --returns bool--
db2_client_info(resource connection)
   Returns an object with properties that describe the DB2 database client --returns object--
db2_close(resource connection)
   Closes a database connection --returns bool--
db2_column_privileges(resource connection [, string qualifier [, string schema [, string table-name [, string column-name ]]]])
   Returns a result set listing the columns and associated privileges for a table --returns resource--
db2_columns(resource connection [, string qualifier [, string schema [, string table-name [, string column-name ]]]])
   Returns a result set listing the columns and associated metadata for a table --returns resource--
db2_commit(resource connection)
   Commits a transaction --returns bool--
db2_conn_error ([ resource connection ])
   Returns a string containing the SQLSTATE returned by the last connection attempt --returns string--
db2_conn_errormsg ([ resource connection ])
   Returns the last connection error message and SQLCODE value --returns string--
db2_connect(string database, string username, string password [, array options ])
   Returns a connection to a database --returns resource--
db2_cursor_type(resource stmt)
   Returns the cursor type used by a statement resource --returns int--
db2_escape_string(string string_literal)
   Used to escape certain characters --returns string--
db2_exec(resource connection, string statement [, array options ])
   Executes an SQL statement directly --returns resource--
db2_execute(resource stmt [, array parameters ])
   Executes a prepared SQL statement --returns bool--
db2_fetch_array(resource stmt [, int row_number ])
   Returns an array, indexed by column position, representing a row in a result set --returns array--
db2_fetch_assoc(resource stmt [, int row_number ])
   Returns an array, indexed by column name, representing a row in a result set --returns array--
db2_fetch_both(resource stmt [, int row_number ])
   Returns an array, indexed by both column name and position, representing a row in a result set --returns array--
db2_fetch_object(resource stmt [, int row_number ])
   Returns an object with properties representing columns in the fetched row --returns object--
db2_fetch_row(resource stmt [, int row_number ])
   Sets the result set pointer to the next row or requested row --returns bool--
db2_field_display_size(resource stmt, mixed column)
   Returns the maximum number of bytes required to display a column --returns int--
db2_field_name(resource stmt, mixed column)
   Returns the name of the column in the result set --returns string--
db2_field_num(resource stmt, mixed column)
   Returns the position of the named column in a result set --returns int--
db2_field_precision(resource stmt, mixed column)
   Returns the precision of the indicated column in a result set --returns int--
db2_field_scale(resource stmt, mixed column)
   Returns the scale of the indicated column in a result set --returns int--
db2_field_type(resource stmt, mixed column)
   Returns the data type of the indicated column in a result set --returns string--
db2_field_width(resource stmt, mixed column)
   Returns the width of the current value of the indicated column in a result set --returns int--
db2_foreign_keys(resource connection, string qualifier, string schema, string table-name)
   Returns a result set listing the foreign keys for a table --returns resource--
db2_free_result(resource stmt)
   Frees resources associated with a result set --returns bool--
db2_free_stmt(resource stmt)
   Frees resources associated with the indicated statement resource --returns bool--
db2_get_option(resource resource, string option)
   Retrieves an option value for a statement resource or a connection resource --returns string--
db2_lob_read(resource stmt, int colnum, int length)
   Gets a user defined size of LOB files with each invocation --returns string--
db2_next_result(resource stmt)
   Requests the next result set from a stored procedure --returns resource--
db2_num_fields(resource stmt)
   Returns the number of fields contained in a result set --returns int--
db2_num_rows(resource stmt)
   Returns the number of rows affected by an SQL statement --returns int--
db2_pconnect(string database, string username, string password [, array options ])
   Returns a persistent connection to a database --returns resource--
db2_prepare(resource connection, string statement [, array options ])
   Prepares an SQL statement to be executed --returns resource--
db2_primary_keys(resource connection, string qualifier, string schema, string table-name)
   Returns a result set listing primary keys for a table --returns resource--
db2_procedure_columns(resource connection, string qualifier, string schema, string procedure, string parameter)
   Returns a result set listing stored procedure parameters --returns resource--
db2_procedures(resource connection, string qualifier, string schema, string procedure)
   Returns a result set listing the stored procedures registered in a database --returns resource--
db2_result(resource stmt, mixed column)
   Returns a single column from a row in the result set --returns mixed--
db2_rollback(resource connection)
   Rolls back a transaction --returns bool--
db2_server_info(resource connection)
   Returns an object with properties that describe the DB2 database server --returns object--
db2_set_option(resource resource, array options, int type)
   Set options for connection or statement resources --returns bool--
db2_special_columns(resource connection, string qualifier, string schema, string table_name, int scope)
   Returns a result set listing the unique row identifier columns for a table --returns resource--
db2_statistics(resource connection, string qualifier, string schema, string table-name, bool unique)
   Returns a result set listing the index and statistics for a table --returns resource--
db2_stmt_error ([ resource stmt ])
   Returns a string containing the SQLSTATE returned by an SQL statement --returns string--
db2_stmt_errormsg ([ resource stmt ])
   Returns a string containing the last SQL statement error message --returns string--
db2_table_privileges(resource connection [, string qualifier [, string schema [, string table_name ]]])
   Returns a result set listing the tables and associated privileges in a database --returns resource--
db2_tables(resource connection [, string qualifier [, string schema [, string table-name [, string table-type ]]]])
   Returns a result set listing the tables and associated metadata in a database --returns resource--
dba_close(resource handle)
   Close a DBA database --returns void--
dba_delete(string key, resource handle)
   Delete DBA entry specified by key --returns bool--
dba_exists(string key, resource handle)
   Check whether key exists --returns bool--
dba_fetch(string key, resource handle) string dba_fetch(string key, int skip, resource handle)
   Fetch data specified by key --returns string--
dba_firstkey(resource handle)
   Fetch first key --returns string--
dba_handlers ([ bool full_info ])
   List all the handlers available --returns array--
dba_insert(string key, string value, resource handle)
   Insert entry --returns bool--
dba_key_split(mixed key)
   Splits a key in string representation into array representation --returns mixed--
dba_list(void)
   List all open database files --returns array--
dba_nextkey(resource handle)
   Fetch next key --returns string--
dba_open(string path, string mode [, string handler [, mixed ... ]])
   Open database --returns resource--
dba_optimize(resource handle)
   Optimize database --returns bool--
dba_popen(string path, string mode [, string handler [, mixed ... ]])
   Open database persistently --returns resource--
dba_replace(string key, string value, resource handle)
   Replace or insert entry --returns bool--
dba_sync(resource handle)
   Synchronize database --returns bool--
dbase_add_record(int dbase_identifier, array record)
   Adds a record to a database --returns bool--
dbase_close(int dbase_identifier)
   Closes a database --returns bool--
dbase_create(string filename, array fields)
   Creates a database --returns int--
dbase_delete_record(int dbase_identifier, int record_number)
   Deletes a record from a database --returns bool--
dbase_get_header_info(int dbase_identifier)
   Gets the header info of a database --returns array--
dbase_get_record_with_names(int dbase_identifier, int record_number)
   Gets a record from a database as an associative array --returns array--
dbase_get_record(int dbase_identifier, int record_number)
   Gets a record from a database as an indexed array --returns array--
dbase_numfields(int dbase_identifier)
   Gets the number of fields of a database --returns int--
dbase_numrecords(int dbase_identifier)
   Gets the number of records in a database --returns int--
dbase_open(string filename, int mode)
   Opens a database --returns int--
dbase_pack(int dbase_identifier)
   Packs a database --returns bool--
dbase_replace_record(int dbase_identifier, array record, int record_number)
   Replaces a record in a database --returns bool--
dbplus_add(resource relation, array tuple)
   Add a tuple to a relation --returns int--
dbplus_aql(string query [, string server [, string dbpath ]])
   Perform AQL query --returns resource--
dbplus_chdir ([ string newdir ])
   Get/Set database virtual current directory --returns string--
dbplus_close(resource relation)
   Close a relation --returns mixed--
dbplus_curr(resource relation, array &tuple)
   Get current tuple from relation --returns int--
dbplus_errcode ([ int errno ])
   Get error string for given errorcode or last error --returns string--
dbplus_errno(void)
   Get error code for last operation --returns int--
dbplus_find(resource relation, array constraints, mixed tuple)
   Set a constraint on a relation --returns int--
dbplus_first(resource relation, array &tuple)
   Get first tuple from relation --returns int--
dbplus_flush(resource relation)
   Flush all changes made on a relation --returns int--
dbplus_freealllocks(void)
   Free all locks held by this client --returns int--
dbplus_freelock(resource relation, string tuple)
   Release write lock on tuple --returns int--
dbplus_freerlocks(resource relation)
   Free all tuple locks on given relation --returns int--
dbplus_getlock(resource relation, string tuple)
   Get a write lock on a tuple --returns int--
dbplus_getunique(resource relation, int uniqueid)
   Get an id number unique to a relation --returns int--
dbplus_info(resource relation, string key, array &result)
   Get information about a relation --returns int--
dbplus_last(resource relation, array &tuple)
   Get last tuple from relation --returns int--
dbplus_lockrel(resource relation)
   Request write lock on relation --returns int--
dbplus_next(resource relation, array &tuple)
   Get next tuple from relation --returns int--
dbplus_open(string name)
   Open relation file --returns resource--
dbplus_prev(resource relation, array &tuple)
   Get previous tuple from relation --returns int--
dbplus_rchperm(resource relation, int mask, string user, string group)
   Change relation permissions --returns int--
dbplus_rcreate(string name, mixed domlist [, bool overwrite ])
   Creates a new DB++ relation --returns resource--
dbplus_rcrtexact(string name, resource relation [, bool overwrite ])
   Creates an exact but empty copy of a relation including indices --returns mixed--
dbplus_rcrtlike(string name, resource relation [, int overwrite ])
   Creates an empty copy of a relation with default indices --returns mixed--
dbplus_resolve(string relation_name)
   Resolve host information for relation --returns array--
dbplus_restorepos(resource relation, array tuple)
   Restore position --returns int--
dbplus_rkeys(resource relation, mixed domlist)
   Specify new primary key for a relation --returns mixed--
dbplus_ropen(string name)
   Open relation file local --returns resource--
dbplus_rquery(string query [, string dbpath ])
   Perform local (raw) AQL query --returns resource--
dbplus_rrename(resource relation, string name)
   Rename a relation --returns int--
dbplus_rsecindex(resource relation, mixed domlist, int type)
   Create a new secondary index for a relation --returns mixed--
dbplus_runlink(resource relation)
   Remove relation from filesystem --returns int--
dbplus_rzap(resource relation)
   Remove all tuples from relation --returns int--
dbplus_savepos(resource relation)
   Save position --returns int--
dbplus_setindex(resource relation, string idx_name)
   Set index --returns int--
dbplus_setindexbynumber(resource relation, int idx_number)
   Set index by number --returns int--
dbplus_sql(string query [, string server [, string dbpath ]])
   Perform SQL query --returns resource--
dbplus_tcl(int sid, string script)
   Execute TCL code on server side --returns string--
dbplus_tremove(resource relation, array tuple [, array &current ])
   Remove tuple and return new current tuple --returns int--
dbplus_undo(resource relation)
   Undo --returns int--
dbplus_undoprepare(resource relation)
   Prepare undo --returns int--
dbplus_unlockrel(resource relation)
   Give up write lock on relation --returns int--
dbplus_unselect(resource relation)
   Remove a constraint from relation --returns int--
dbplus_update(resource relation, array old, array new)
   Update specified tuple in relation --returns int--
dbplus_xlockrel(resource relation)
   Request exclusive lock on relation --returns int--
dbplus_xunlockrel(resource relation)
   Free exclusive lock on relation --returns int--
dbx_close(object link_identifier)
   Close an open connection/database --returns int--
dbx_compare(array row_a, array row_b, string column_key [, int flags ])
   Compare two rows for sorting purposes --returns int--
dbx_connect(mixed module, string host, string database, string username, string password [, int persistent ])
   Open a connection/database --returns object--
dbx_error(object link_identifier)
   Report the error message of the latest function call in the module --returns string--
dbx_escape_string(object link_identifier, string text)
   Escape a string so it can safely be used in an sql-statement --returns string--
dbx_fetch_row(object result_identifier)
   Fetches rows from a query-result that had the DBX_RESULT_UNBUFFERED flag set --returns mixed--
dbx_query(object link_identifier, string sql_statement [, int flags ])
   Send a query and fetch all results (if any) --returns mixed--
dbx_sort(object result, string user_compare_function)
   Sort a result from a dbx_query by a custom sort function --returns bool--
dcgettext(string domain, string message, int category)
   Overrides the domain for a single lookup --returns string--
dcngettext(string domain, string msgid1, string msgid2, int n, int category)
   Plural version of dcgettext --returns string--
deaggregate(object object [, string class_name ])
   Removes the aggregated methods and properties from an object --returns void--
debug_backtrace ([ bool provide_object ])
   Generates a backtrace --returns array--
debug_print_backtrace(void)
   Prints a backtrace --returns void--
debug_zval_dump(mixed variable)
   Dumps a string representation of an internal zend value to output --returns void--
decbin(int number)
   Decimal to binary --returns string--
dechex(int number)
   Decimal to hexadecimal --returns string--
decoct(int number)
   Decimal to octal --returns string--
define_syslog_variables(void)
   Initializes all syslog related variables --returns void--
define(string name, mixed value [, bool case_insensitive ])
   Defines a named constant --returns bool--
defined(string name)
   Checks whether a given named constant exists --returns bool--
deg2rad(float number)
   Converts the number in degrees to the radian equivalent --returns float--
delete(void)
   See unlink() or unset() --returns void--
dgettext(string domain, string message)
   Override the current domain --returns string--
die
   Equivalent to exit() --returns ?--
dio_close(resource fd)
   Closes the file descriptor given by fd --returns void--
dio_fcntl(resource fd, int cmd [, mixed args ])
   Performs a c library fcntl on fd --returns mixed--
dio_open(string filename, int flags [, int mode ])
   Opens a new filename with specified permissions of flags and creation permissions of mode --returns resource--
dio_read(resource fd [, int len ])
   Reads bytes from a file descriptor --returns string--
dio_seek(resource fd, int pos [, int whence ])
   Seeks to pos on fd from whence --returns int--
dio_stat(resource fd)
   Gets stat information about the file descriptor fd --returns array--
dio_tcsetattr(resource fd, array options)
   Sets terminal attributes and baud rate for a serial port --returns bool--
dio_truncate(resource fd, int offset)
   Truncates file descriptor fd to offset bytes --returns bool--
dio_write(resource fd, string data [, int len ])
   Writes data to fd with optional truncation at length --returns int--
dirname(string path)
   Returns directory name component of path --returns string--
disk_free_space(string directory)
   Returns available space in directory --returns float--
disk_total_space(string directory)
   Returns the total size of a directory --returns float--
diskfreespace
   Alias of disk_free_space() --returns ?--
dl(string library)
   Loads a PHP extension at runtime --returns int--
dngettext(string domain, string msgid1, string msgid2, int n)
   Plural version of dgettext --returns string--
dns_check_record
   Alias of checkdnsrr() --returns ?--
dns_get_mx
   Alias of getmxrr() --returns ?--
dns_get_record(string hostname [, int type ]) array dns_get_record(string hostname, int type, array &authns, array &addtl)
   Fetch DNS Resource Records associated with a hostname --returns array--
dom_import_simplexml(SimpleXMLElement node)
   Gets a DOMElement object from a SimpleXMLElement object --returns DOMElement--
name(void)
   Returns the name of attribute --returns string--
set_value(string content)
   Sets the value of an attribute --returns bool--
specified(void)
   Checks if attribute is specified --returns bool--
value(void)
   Returns value of attribute --returns string--
DomDocument->add_root(string name)
   Adds a root node [deprecated] --returns domelement--
DomDocument->create_attribute(string name, string value)
   Create new attribute --returns domattribute--
DomDocument->create_cdata_section(string content)
   Create new cdata node --returns domcdata--
DomDocument->create_comment(string content)
   Create new comment node --returns domcomment--
DomDocument->create_element_ns(string uri, string name [, string prefix ])
   Create new element node with an associated namespace --returns domelement--
DomDocument->create_element(string name)
   Create new element node --returns domelement--
DomDocument->create_entity_reference(string content)
   Create an entity reference --returns domentityreference--
DomDocument->create_processing_instruction(string content)
   Creates new PI node --returns domprocessinginstruction--
DomDocument->create_text_node(string content)
   Create new text node --returns domtext--
DomDocument->doctype(void)
   Returns the document type --returns domdocumenttype--
DomDocument->document_element(void)
   Returns root element node --returns domelement--
DomDocument->dump_file(string filename [, bool compressionmode [, bool format ]])
   Dumps the internal XML tree back into a file --returns string--
DomDocument->dump_mem ([ bool format [, string encoding ]])
   Dumps the internal XML tree back into a string --returns string--
DomDocument->get_element_by_id(string id)
   Searches for an element with a certain id --returns domelement--
DomDocument->get_elements_by_tagname(string name)
   Returns array with nodes with given tagname in document or empty array, if not found --returns array--
DomDocument->html_dump_mem(void)
   Dumps the internal XML tree back into a string as HTML --returns string--
DomDocument->xinclude(void)
   Substitutes XIncludes in a DomDocument Object --returns int--
entities(void)
   Returns list of entities --returns array--
internal_subset(void)
   Returns internal subset --returns bool--
name(void)
   Returns name of document type --returns string--
notations(void)
   Returns list of notations --returns array--
public_id(void)
   Returns public id of document type --returns string--
system_id(void)
   Returns the system id of document type --returns string--
get_attribute_node(string name)
   Returns the node of the given attribute --returns DomAttribute--
get_attribute(string name)
   Returns the value of the given attribute --returns string--
get_elements_by_tagname(string name)
   Gets elements by tagname --returns array--
has_attribute(string name)
   Checks to see if an attribute exists in the current node --returns bool--
remove_attribute(string name)
   Removes attribute --returns bool--
set_attribute_node(DomNode attr)
   Adds new attribute --returns DomNode--
set_attribute(string name, string value)
   Sets the value of an attribute --returns DomAttribute--
tagname(void)
   Returns the name of the current element --returns string--
add_namespace(string uri, string prefix)
   Adds a namespace declaration to a node --returns bool--
append_child(DOMNode newnode)
   Adds a new child at the end of the children --returns DOMNode--
DomNode->append_sibling(domelement newnode)
   Adds new sibling to a node --returns domelement--
DomNode->attributes(void)
   Returns list of attributes --returns array--
DomNode->child_nodes(void)
   Returns children of node --returns array--
DomNode->clone_node(void)
   Clones a node --returns domelement--
DomNode->dump_node(void)
   Dumps a single node --returns string--
DomNode->first_child(void)
   Returns first child of node --returns domelement--
DomNode->get_content(void)
   Gets content of node --returns string--
DomNode->has_attributes(void)
   Checks if node has attributes --returns bool--
DomNode->has_child_nodes(void)
   Checks if node has children --returns bool--
DomNode->insert_before(domelement newnode, domelement refnode)
   Inserts new node as child --returns domelement--
DomNode->is_blank_node(void)
   Checks if node is blank --returns bool--
DomNode->last_child(void)
   Returns last child of node --returns domelement--
DomNode->next_sibling(void)
   Returns the next sibling of node --returns domelement--
DomNode->node_name(void)
   Returns name of node --returns string--
DomNode->node_type(void)
   Returns type of node --returns int--
DomNode->node_value(void)
   Returns value of a node --returns string--
DomNode->owner_document(void)
   Returns the document this node belongs to --returns domdocument--
DomNode->parent_node(void)
   Returns the parent of the node --returns domnode--
DomNode->prefix(void)
   Returns name space prefix of node --returns string--
DomNode->previous_sibling(void)
   Returns the previous sibling of node --returns domelement--
DomNode->remove_child(domtext oldchild)
   Removes child from list of children --returns domtext--
DomNode->replace_child(domelement newnode, domelement oldnode)
   Replaces a child --returns domelement--
DomNode->replace_node(domelement newnode)
   Replaces node --returns domelement--
DomNode->set_content(string content)
   Sets content of node --returns bool--
DomNode->set_name(void)
   Sets name of node --returns bool--
DomNode->set_namespace(string uri [, string prefix ])
   Sets namespace of a node --returns void--
DomNode->unlink_node(void)
   Deletes node --returns void--
data(void)
   Returns the data of ProcessingInstruction node --returns string--
target(void)
   Returns the target of a ProcessingInstruction node --returns string--
domxml_new_doc(string version)
   Creates new empty XML document --returns DomDocument--
domxml_open_file(string filename [, int mode [, array &error ]])
   Creates a DOM object from an XML file --returns DomDocument--
domxml_open_mem(string str [, int mode [, array &error ]])
   Creates a DOM object of an XML document --returns DomDocument--
domxml_version(void)
   Gets the XML library version --returns string--
domxml_xmltree(string str)
   Creates a tree of PHP objects from an XML document --returns DomDocument--
domxml_xslt_stylesheet_doc(DomDocument xsl_doc)
   Creates a DomXsltStylesheet Object from a DomDocument Object --returns DomXsltStylesheet--
domxml_xslt_stylesheet_file(string xsl_file)
   Creates a DomXsltStylesheet Object from an XSL document in a file --returns DomXsltStylesheet--
domxml_xslt_stylesheet(string xsl_buf)
   Creates a DomXsltStylesheet object from an XSL document in a string --returns DomXsltStylesheet--
domxml_xslt_version(void)
   Gets the XSLT library version --returns int--
process(DomDocument xml_doc [, array xslt_params [, bool is_xpath_param [, string profile_filename ]]])
   Applies the XSLT-Transformation on a DomDocument Object --returns DomDocument--
result_dump_file(DomDocument xmldoc, string filename)
   Dumps the result from a XSLT-Transformation into a file --returns string--
result_dump_mem(DomDocument xmldoc)
   Dumps the result from a XSLT-Transformation back into a string --returns string--
dotnet_load(string assembly_name [, string datatype_name [, int codepage ]])
   Loads a DOTNET module --returns int--
doubleval
   Alias of floatval() --returns ?--
each(array &array)
   Return the current key and value pair from an array and advance the array cursor --returns array--
easter_date ([ int year ])
   Get Unix timestamp for midnight on Easter of a given year --returns int--
easter_days ([ int year [, int method ]])
   Get number of days after March 21 on which Easter falls for a given year --returns int--
ebcdic2ascii(string ebcdic_str)
   Translate string from EBCDIC to ASCII --returns int--
echo(string arg1 [, string ... ])
   Output one or more strings --returns void--
empty(mixed var)
   Determine whether a variable is empty --returns bool--
enchant_broker_describe(resource broker)
   Enumerates the Enchant providers --returns array--
enchant_broker_dict_exists(resource broker, string tag)
   Whether a dictionary exists or not. Using non-empty tag --returns bool--
enchant_broker_free_dict(resource dict)
   Free a dictionary resource --returns bool--
enchant_broker_free(resource broker)
   Free the broker resource and its dictionnaries --returns bool--
enchant_broker_get_error(resource broker)
   Returns the last error of the broker --returns string--
enchant_broker_init(void)
   create a new broker object capable of requesting --returns resource--
enchant_broker_list_dicts(resource broker)
   Returns a list of available dictionaries --returns mixed--
enchant_broker_request_dict(resource broker, string tag)
   create a new dictionary using a tag --returns resource--
enchant_broker_request_pwl_dict(resource broker, string filename)
   creates a dictionary using a PWL file. A PWL file is personal word file one word per line. --returns resource--
enchant_broker_set_ordering(resource broker, string tag, string ordering)
   Declares a preference of dictionaries to use for the language --returns bool--
enchant_dict_add_to_personal(resource dict, string word)
   add a word to personal word list --returns void--
enchant_dict_add_to_session(resource dict, string word)
   add 'word' to this spell-checking session --returns void--
enchant_dict_check(resource dict, string word)
   Check whether a word is correctly spelled or not. --returns bool--
enchant_dict_describe(resource dict)
   Describes an individual dictionary --returns mixed--
enchant_dict_get_error(resource dict)
   Returns the last error of the current spelling-session --returns string--
enchant_dict_is_in_session(resource dict, string word)
   whether or not 'word' exists in this spelling-session --returns bool--
enchant_dict_quick_check(resource dict, string word [, array &suggestions ])
   Check the word is correctly spelled and provide suggestions --returns bool--
enchant_dict_store_replacement(resource dict, string mis, string cor)
   add a correction for a word. --returns void--
enchant_dict_suggest(resource dict, string word)
   Will return a list of values if any of those pre-conditions are not met. --returns array--
end(array &array)
   Set the internal pointer of an array to its last element --returns mixed--
ereg_replace(string pattern, string replacement, string string)
   Replace regular expression --returns string--
ereg(string pattern, string string [, array &regs ])
   Regular expression match --returns int--
eregi_replace(string pattern, string replacement, string string)
   Replace regular expression case insensitive --returns string--
eregi(string pattern, string string [, array &regs ])
   Case insensitive regular expression match --returns int--
error_get_last(void)
   Get the last occurred error --returns array--
error_log(string message [, int message_type [, string destination [, string extra_headers ]]])
   Send an error message somewhere --returns bool--
error_reporting ([ int level ])
   Sets which PHP errors are reported --returns int--
escapeshellarg(string arg)
   Escape a string to be used as a shell argument --returns string--
escapeshellcmd(string command)
   Escape shell metacharacters --returns string--
eval(string code_str)
   Evaluate a string as PHP code --returns mixed--
exec(string command [, array &output [, int &return_var ]])
   Execute an external program --returns string--
exif_imagetype(string filename)
   Determine the type of an image --returns int--
exif_read_data(string filename [, string sections [, bool arrays [, bool thumbnail ]]])
   Reads the EXIF headers from JPEG or TIFF --returns array--
exif_tagname(string index)
   Get the header name for an index --returns string--
exif_thumbnail(string filename [, int &width [, int &height [, int &imagetype ]]])
   Retrieve the embedded thumbnail of a TIFF or JPEG image --returns string--
exit ([ string status ]) void exit(int status)
   Output a message and terminate the current script --returns void--
exp(float arg)
   Calculates the exponent of e --returns float--
expect_expectl(resource expect, array cases [, array &match ])
   Waits until the output from a process matches one of the patterns, a specified time period has passed, or an EOF is seen --returns int--
expect_popen(string command)
   Execute command via Bourne shell, and open the PTY stream to the process --returns resource--
explode(string delimiter, string string [, int limit ])
   Split a string by string --returns array--
expm1(float arg)
   Returns exp(number) - 1, computed in a way that is accurate even when the value of number is close to zero --returns float--
extension_loaded(string name)
   Find out whether an extension is loaded --returns bool--
extract(array var_array [, int extract_type [, string prefix ]])
   Import variables into the current symbol table from an array --returns int--
ezmlm_hash(string addr)
   Calculate the hash value needed by EZMLM --returns int--
fam_cancel_monitor(resource fam, resource fam_monitor)
   Terminate monitoring --returns bool--
fam_close(resource fam)
   Close FAM connection --returns void--
fam_monitor_collection(resource fam, string dirname, int depth, string mask)
   Monitor a collection of files in a directory for changes --returns resource--
fam_monitor_directory(resource fam, string dirname)
   Monitor a directory for changes --returns resource--
fam_monitor_file(resource fam, string filename)
   Monitor a regular file for changes --returns resource--
fam_next_event(resource fam)
   Get next pending FAM event --returns array--
fam_open ([ string appname ])
   Open connection to FAM daemon --returns resource--
fam_pending(resource fam)
   Check for pending FAM events --returns int--
fam_resume_monitor(resource fam, resource fam_monitor)
   Resume suspended monitoring --returns bool--
fam_suspend_monitor(resource fam, resource fam_monitor)
   Temporarily suspend monitoring --returns bool--
fbsql_affected_rows ([ resource link_identifier ])
   Get number of affected rows in previous FrontBase operation --returns int--
fbsql_autocommit(resource link_identifier [, bool OnOff ])
   Enable or disable autocommit --returns bool--
fbsql_blob_size(string blob_handle [, resource link_identifier ])
   Get the size of a BLOB --returns int--
fbsql_change_user(string user, string password [, string database [, resource link_identifier ]])
   Change logged in user of the active connection --returns bool--
fbsql_clob_size(string clob_handle [, resource link_identifier ])
   Get the size of a CLOB --returns int--
fbsql_close ([ resource link_identifier ])
   Close FrontBase connection --returns bool--
fbsql_commit ([ resource link_identifier ])
   Commits a transaction to the database --returns bool--
fbsql_connect ([ string hostname [, string username [, string password ]]])
   Open a connection to a FrontBase Server --returns resource--
fbsql_create_blob(string blob_data [, resource link_identifier ])
   Create a BLOB --returns string--
fbsql_create_clob(string clob_data [, resource link_identifier ])
   Create a CLOB --returns string--
fbsql_create_db(string database_name [, resource link_identifier [, string database_options ]])
   Create a FrontBase database --returns bool--
fbsql_data_seek(resource result, int row_number)
   Move internal result pointer --returns bool--
fbsql_database_password(resource link_identifier [, string database_password ])
   Sets or retrieves the password for a FrontBase database --returns string--
fbsql_database(resource link_identifier [, string database ])
   Get or set the database name used with a connection --returns string--
fbsql_db_query(string database, string query [, resource link_identifier ])
   Send a FrontBase query --returns resource--
fbsql_db_status(string database_name [, resource link_identifier ])
   Get the status for a given database --returns int--
fbsql_drop_db(string database_name [, resource link_identifier ])
   Drop (delete) a FrontBase database --returns bool--
fbsql_errno ([ resource link_identifier ])
   Returns the error number from previous operation --returns int--
fbsql_error ([ resource link_identifier ])
   Returns the error message from previous operation --returns string--
fbsql_fetch_array(resource result [, int result_type ])
   Fetch a result row as an associative array, a numeric array, or both --returns array--
fbsql_fetch_assoc(resource result)
   Fetch a result row as an associative array --returns array--
fbsql_fetch_field(resource result [, int field_offset ])
   Get column information from a result and return as an object --returns object--
fbsql_fetch_lengths(resource result)
   Get the length of each output in a result --returns array--
fbsql_fetch_object(resource result)
   Fetch a result row as an object --returns object--
fbsql_fetch_row(resource result)
   Get a result row as an enumerated array --returns array--
fbsql_field_flags(resource result [, int field_offset ])
   Get the flags associated with the specified field in a result --returns string--
fbsql_field_len(resource result [, int field_offset ])
   Returns the length of the specified field --returns int--
fbsql_field_name(resource result [, int field_index ])
   Get the name of the specified field in a result --returns string--
fbsql_field_seek(resource result [, int field_offset ])
   Set result pointer to a specified field offset --returns bool--
fbsql_field_table(resource result [, int field_offset ])
   Get name of the table the specified field is in --returns string--
fbsql_field_type(resource result [, int field_offset ])
   Get the type of the specified field in a result --returns string--
fbsql_free_result(resource result)
   Free result memory --returns bool--
fbsql_get_autostart_info ([ resource link_identifier ])
   Description array --returns array--
fbsql_hostname(resource link_identifier [, string host_name ])
   Get or set the host name used with a connection --returns string--
fbsql_insert_id ([ resource link_identifier ])
   Get the id generated from the previous INSERT operation --returns int--
fbsql_list_dbs ([ resource link_identifier ])
   List databases available on a FrontBase server --returns resource--
fbsql_list_fields(string database_name, string table_name [, resource link_identifier ])
   List FrontBase result fields --returns resource--
fbsql_list_tables(string database [, resource link_identifier ])
   List tables in a FrontBase database --returns resource--
fbsql_next_result(resource result)
   Move the internal result pointer to the next result --returns bool--
fbsql_num_fields(resource result)
   Get number of fields in result --returns int--
fbsql_num_rows(resource result)
   Get number of rows in result --returns int--
fbsql_password(resource link_identifier [, string password ])
   Get or set the user password used with a connection --returns string--
fbsql_pconnect ([ string hostname [, string username [, string password ]]])
   Open a persistent connection to a FrontBase Server --returns resource--
fbsql_query(string query [, resource link_identifier [, int batch_size ]])
   Send a FrontBase query --returns resource--
fbsql_read_blob(string blob_handle [, resource link_identifier ])
   Read a BLOB from the database --returns string--
fbsql_read_clob(string clob_handle [, resource link_identifier ])
   Read a CLOB from the database --returns string--
fbsql_result(resource result [, int row [, mixed field ]])
   Get result data --returns mixed--
fbsql_rollback ([ resource link_identifier ])
   Rollback a transaction to the database --returns bool--
fbsql_rows_fetched(resource result)
   Get the number of rows affected by the last statement --returns int--
fbsql_select_db ([ string database_name [, resource link_identifier ]])
   Select a FrontBase database --returns bool--
fbsql_set_characterset(resource link_identifier, int characterset [, int in_out_both ])
   Change input/output character set --returns void--
fbsql_set_lob_mode(resource result, int lob_mode)
   Set the LOB retrieve mode for a FrontBase result set --returns bool--
fbsql_set_password(resource link_identifier, string user, string password, string old_password)
   Change the password for a given user --returns bool--
fbsql_set_transaction(resource link_identifier, int locking, int isolation)
   Set the transaction locking and isolation --returns void--
fbsql_start_db(string database_name [, resource link_identifier [, string database_options ]])
   Start a database on local or remote server --returns bool--
fbsql_stop_db(string database_name [, resource link_identifier ])
   Stop a database on local or remote server --returns bool--
fbsql_table_name(resource result, int index)
   Get table name of field --returns string--
fbsql_tablename
   Alias of of fbsql_table_name() --returns ?--
fbsql_username(resource link_identifier [, string username ])
   Get or set the username for the connection --returns string--
fbsql_warnings ([ bool OnOff ])
   Enable or disable FrontBase warnings --returns bool--
fclose(resource handle)
   Closes an open file pointer --returns bool--
fdf_add_doc_javascript(resource fdf_document, string script_name, string script_code)
   Adds javascript code to the FDF document --returns bool--
fdf_add_template(resource fdf_document, int newpage, string filename, string template, int rename)
   Adds a template into the FDF document --returns bool--
fdf_close(resource fdf_document)
   Close an FDF document --returns void--
fdf_create(void)
   Create a new FDF document --returns resource--
fdf_enum_values(resource fdf_document, callback function [, mixed userdata ])
   Call a user defined function for each document value --returns bool--
fdf_errno(void)
   Return error code for last fdf operation --returns int--
fdf_error ([ int error_code ])
   Return error description for FDF error code --returns string--
fdf_get_ap(resource fdf_document, string field, int face, string filename)
   Get the appearance of a field --returns bool--
fdf_get_attachment(resource fdf_document, string fieldname, string savepath)
   Extracts uploaded file embedded in the FDF --returns array--
fdf_get_encoding(resource fdf_document)
   Get the value of the /Encoding key --returns string--
fdf_get_file(resource fdf_document)
   Get the value of the /F key --returns string--
fdf_get_flags(resource fdf_document, string fieldname, int whichflags)
   Gets the flags of a field --returns int--
fdf_get_opt(resource fdf_document, string fieldname [, int element ])
   Gets a value from the opt array of a field --returns mixed--
fdf_get_status(resource fdf_document)
   Get the value of the /STATUS key --returns string--
fdf_get_value(resource fdf_document, string fieldname [, int which ])
   Get the value of a field --returns mixed--
fdf_get_version ([ resource fdf_document ])
   Gets version number for FDF API or file --returns string--
fdf_header(void)
   Sets FDF-specific output headers --returns void--
fdf_next_field_name(resource fdf_document [, string fieldname ])
   Get the next field name --returns string--
fdf_open_string(string fdf_data)
   Read a FDF document from a string --returns resource--
fdf_open(string filename)
   Open a FDF document --returns resource--
fdf_remove_item(resource fdf_document, string fieldname, int item)
   Sets target frame for form --returns bool--
fdf_save_string(resource fdf_document)
   Returns the FDF document as a string --returns string--
fdf_save(resource fdf_document [, string filename ])
   Save a FDF document --returns bool--
fdf_set_ap(resource fdf_document, string field_name, int face, string filename, int page_number)
   Set the appearance of a field --returns bool--
fdf_set_encoding(resource fdf_document, string encoding)
   Sets FDF character encoding --returns bool--
fdf_set_file(resource fdf_document, string url [, string target_frame ])
   Set PDF document to display FDF data in --returns bool--
fdf_set_flags(resource fdf_document, string fieldname, int whichFlags, int newFlags)
   Sets a flag of a field --returns bool--
fdf_set_javascript_action(resource fdf_document, string fieldname, int trigger, string script)
   Sets an javascript action of a field --returns bool--
fdf_set_on_import_javascript(resource fdf_document, string script, bool before_data_import)
   Adds javascript code to be executed when Acrobat opens the FDF --returns bool--
fdf_set_opt(resource fdf_document, string fieldname, int element, string str1, string str2)
   Sets an option of a field --returns bool--
fdf_set_status(resource fdf_document, string status)
   Set the value of the /STATUS key --returns bool--
fdf_set_submit_form_action(resource fdf_document, string fieldname, int trigger, string script, int flags)
   Sets a submit form action of a field --returns bool--
fdf_set_target_frame(resource fdf_document, string frame_name)
   Set target frame for form display --returns bool--
fdf_set_value(resource fdf_document, string fieldname, mixed value [, int isName ])
   Set the value of a field --returns bool--
fdf_set_version(resource fdf_document, string version)
   Sets version number for a FDF file --returns bool--
feof(resource handle)
   Tests for end-of-file on a file pointer --returns bool--
fflush(resource handle)
   Flushes the output to a file --returns bool--
fgetc(resource handle)
   Gets character from file pointer --returns string--
fgetcsv(resource handle [, int length [, string delimiter [, string enclosure [, string escape ]]]])
   Gets line from file pointer and parse for CSV fields --returns array--
fgets(resource handle [, int length ])
   Gets line from file pointer --returns string--
fgetss(resource handle [, int length [, string allowable_tags ]])
   Gets line from file pointer and strip HTML tags --returns string--
file_exists(string filename)
   Checks whether a file or directory exists --returns bool--
file_get_contents(string filename [, int flags [, resource context [, int offset [, int maxlen ]]]])
   Reads entire file into a string --returns string--
file_put_contents(string filename, mixed data [, int flags [, resource context ]])
   Write a string to a file --returns int--
file(string filename [, int flags [, resource context ]])
   Reads entire file into an array --returns array--
fileatime(string filename)
   Gets last access time of file --returns int--
filectime(string filename)
   Gets inode change time of file --returns int--
filegroup(string filename)
   Gets file group --returns int--
fileinode(string filename)
   Gets file inode --returns int--
filemtime(string filename)
   Gets file modification time --returns int--
fileowner(string filename)
   Gets file owner --returns int--
fileperms(string filename)
   Gets file permissions --returns int--
filepro_fieldcount(void)
   Find out how many fields are in a filePro database --returns int--
filepro_fieldname(int field_number)
   Gets the name of a field --returns string--
filepro_fieldtype(int field_number)
   Gets the type of a field --returns string--
filepro_fieldwidth(int field_number)
   Gets the width of a field --returns int--
filepro_retrieve(int row_number, int field_number)
   Retrieves data from a filePro database --returns string--
filepro_rowcount(void)
   Find out how many rows are in a filePro database --returns int--
filepro(string directory)
   Read and verify the map file --returns bool--
filesize(string filename)
   Gets file size --returns int--
filetype(string filename)
   Gets file type --returns string--
filter_has_var(int type, string variable_name)
   Checks if variable of specified type exists --returns bool--
filter_id(string filtername)
   Returns the filter ID belonging to a named filter --returns int--
filter_input_array(int type [, mixed definition ])
   Gets external variables and optionally filters them --returns mixed--
filter_input(int type, string variable_name [, int filter [, mixed options ]])
   Gets a specific external variable by name and optionally filters it --returns mixed--
filter_list(void)
   Returns a list of all supported filters --returns array--
filter_var_array(array data [, mixed definition ])
   Gets multiple variables and optionally filters them --returns mixed--
filter_var(mixed variable [, int filter [, mixed options ]])
   Filters a variable with a specified filter --returns mixed--
finfo_buffer(resource finfo, string string [, int options [, resource context ]]) string buffer(string string [, int options [, resource context ]])
   Return information about a string buffer --returns string--
finfo_close(resource finfo)
   Close fileinfo resource --returns bool--
finfo_file(resource finfo, string file_name [, int options [, resource context ]]) string file(string file_name [, int options [, resource context ]])
   Return information about a file --returns string--
finfo_open ([ int options [, string arg ]])
   Create a new fileinfo resource --returns resource--
finfo_set_flags(resource finfo, int options) bool set_flags(int options)
   Set libmagic configuration options --returns bool--
floatval(mixed var)
   Get float value of a variable --returns float--
flock(resource handle, int operation [, int &wouldblock ])
   Portable advisory file locking --returns bool--
floor(float value)
   Round fractions down --returns float--
flush(void)
   Flush the output buffer --returns void--
fmod(float x, float y)
   Returns the floating point remainder (modulo) of the division of the arguments --returns float--
fnmatch(string pattern, string string [, int flags ])
   Match filename against a pattern --returns bool--
fopen(string filename, string mode [, bool use_include_path [, resource context ]])
   Opens file or URL --returns resource--
fpassthru(resource handle)
   Output all remaining data on a file pointer --returns int--
fprintf(resource handle, string format [, mixed args [, mixed ... ]])
   Write a formatted string to a stream --returns int--
fputcsv(resource handle, array fields [, string delimiter [, string enclosure ]])
   Format line as CSV and write to file pointer --returns int--
fputs
   Alias of fwrite() --returns ?--
fread(resource handle, int length)
   Binary-safe file read --returns string--
frenchtojd(int month, int day, int year)
   Converts a date from the French Republican Calendar to a Julian Day Count --returns int--
fribidi_log2vis(string str, string direction, int charset)
   Convert a logical string to a visual one --returns string--
fscanf(resource handle, string format [, mixed &... ])
   Parses input from a file according to a format --returns mixed--
fseek(resource handle, int offset [, int whence ])
   Seeks on a file pointer --returns int--
fsockopen(string hostname [, int port [, int &errno [, string &errstr [, float timeout ]]]])
   Open Internet or Unix domain socket connection --returns resource--
fstat(resource handle)
   Gets information about a file using an open file pointer --returns array--
ftell(resource handle)
   Returns the current position of the file read/write pointer --returns int--
ftok(string pathname, string proj)
   Convert a pathname and a project identifier to a System V IPC key --returns int--
ftp_alloc(resource ftp_stream, int filesize [, string &result ])
   Allocates space for a file to be uploaded --returns bool--
ftp_cdup(resource ftp_stream)
   Changes to the parent directory --returns bool--
ftp_chdir(resource ftp_stream, string directory)
   Changes the current directory on a FTP server --returns bool--
ftp_chmod(resource ftp_stream, int mode, string filename)
   Set permissions on a file via FTP --returns int--
ftp_close(resource ftp_stream)
   Closes an FTP connection --returns bool--
ftp_connect(string host [, int port [, int timeout ]])
   Opens an FTP connection --returns resource--
ftp_delete(resource ftp_stream, string path)
   Deletes a file on the FTP server --returns bool--
ftp_exec(resource ftp_stream, string command)
   Requests execution of a command on the FTP server --returns bool--
ftp_fget(resource ftp_stream, resource handle, string remote_file, int mode [, int resumepos ])
   Downloads a file from the FTP server and saves to an open file --returns bool--
ftp_fput(resource ftp_stream, string remote_file, resource handle, int mode [, int startpos ])
   Uploads from an open file to the FTP server --returns bool--
ftp_get_option(resource ftp_stream, int option)
   Retrieves various runtime behaviours of the current FTP stream --returns mixed--
ftp_get(resource ftp_stream, string local_file, string remote_file, int mode [, int resumepos ])
   Downloads a file from the FTP server --returns bool--
ftp_login(resource ftp_stream, string username, string password)
   Logs in to an FTP connection --returns bool--
ftp_mdtm(resource ftp_stream, string remote_file)
   Returns the last modified time of the given file --returns int--
ftp_mkdir(resource ftp_stream, string directory)
   Creates a directory --returns string--
ftp_nb_continue(resource ftp_stream)
   Continues retrieving/sending a file (non-blocking) --returns int--
ftp_nb_fget(resource ftp_stream, resource handle, string remote_file, int mode [, int resumepos ])
   Retrieves a file from the FTP server and writes it to an open file (non-blocking) --returns int--
ftp_nb_fput(resource ftp_stream, string remote_file, resource handle, int mode [, int startpos ])
   Stores a file from an open file to the FTP server (non-blocking) --returns int--
ftp_nb_get(resource ftp_stream, string local_file, string remote_file, int mode [, int resumepos ])
   Retrieves a file from the FTP server and writes it to a local file (non-blocking) --returns int--
ftp_nb_put(resource ftp_stream, string remote_file, string local_file, int mode [, int startpos ])
   Stores a file on the FTP server (non-blocking) --returns int--
ftp_nlist(resource ftp_stream, string directory)
   Returns a list of files in the given directory --returns array--
ftp_pasv(resource ftp_stream, bool pasv)
   Turns passive mode on or off --returns bool--
ftp_put(resource ftp_stream, string remote_file, string local_file, int mode [, int startpos ])
   Uploads a file to the FTP server --returns bool--
ftp_pwd(resource ftp_stream)
   Returns the current directory name --returns string--
ftp_quit
   Alias of ftp_close() --returns ?--
ftp_raw(resource ftp_stream, string command)
   Sends an arbitrary command to an FTP server --returns array--
ftp_rawlist(resource ftp_stream, string directory [, bool recursive ])
   Returns a detailed list of files in the given directory --returns array--
ftp_rename(resource ftp_stream, string oldname, string newname)
   Renames a file or a directory on the FTP server --returns bool--
ftp_rmdir(resource ftp_stream, string directory)
   Removes a directory --returns bool--
ftp_set_option(resource ftp_stream, int option, mixed value)
   Set miscellaneous runtime FTP options --returns bool--
ftp_site(resource ftp_stream, string command)
   Sends a SITE command to the server --returns bool--
ftp_size(resource ftp_stream, string remote_file)
   Returns the size of the given file --returns int--
ftp_ssl_connect(string host [, int port [, int timeout ]])
   Opens an Secure SSL-FTP connection --returns resource--
ftp_systype(resource ftp_stream)
   Returns the system type identifier of the remote FTP server --returns string--
ftruncate(resource handle, int size)
   Truncates a file to a given length --returns bool--
func_get_arg(int arg_num)
   Return an item from the argument list --returns mixed--
func_get_args(void)
   Returns an array comprising a function's argument list --returns array--
func_num_args(void)
   Returns the number of arguments passed to the function --returns int--
function_exists(string function_name)
   Return TRUE if the given function has been defined --returns bool--
fwrite(resource handle, string string [, int length ])
   Binary-safe file write --returns int--
gd_info(void)
   Retrieve information about the currently installed GD library --returns array--
geoip_country_code_by_name(string hostname)
   Get the two letter country code --returns string--
geoip_country_code3_by_name(string hostname)
   Get the three letter country code --returns string--
geoip_country_name_by_name(string hostname)
   Get the full country name --returns string--
geoip_database_info ([ int database ])
   Get GeoIP Database information --returns string--
geoip_db_avail(int database)
   Determine if GeoIP Database is available --returns bool--
geoip_db_filename(int database)
   Returns the filename of the corresponding GeoIP Database --returns string--
geoip_db_get_all_info(void)
   Returns detailed informations about all GeoIP database types --returns array--
geoip_id_by_name(string hostname)
   Get the Internet connection speed --returns int--
geoip_isp_by_name(string hostname)
   Get the Internet Service Provider (ISP) name --returns string--
geoip_org_by_name(string hostname)
   Get the organization name --returns string--
geoip_record_by_name(string hostname)
   Returns the detailed City information found in the GeoIP Database --returns array--
geoip_region_by_name(string hostname)
   Get the country code and region --returns array--
get_browser ([ string user_agent [, bool return_array ]])
   Tells what the user's browser is capable of --returns mixed--
get_cfg_var(string option)
   Gets the value of a PHP configuration option --returns string--
get_class_methods(mixed class_name)
   Gets the class methods' names --returns array--
get_class_vars(string class_name)
   Get the default properties of the class --returns array--
get_class ([ object object ])
   Returns the name of the class of an object --returns string--
get_current_user(void)
   Gets the name of the owner of the current PHP script --returns string--
get_declared_classes(void)
   Returns an array with the name of the defined classes --returns array--
get_declared_interfaces(void)
   Returns an array of all declared interfaces --returns array--
get_defined_constants ([ mixed categorize ])
   Returns an associative array with the names of all the constants and their values --returns array--
get_defined_functions(void)
   Returns an array of all defined functions --returns array--
get_defined_vars(void)
   Returns an array of all defined variables --returns array--
get_extension_funcs(string module_name)
   Returns an array with the names of the functions of a module --returns array--
get_headers(string url [, int format ])
   Fetches all the headers sent by the server in response to a HTTP request --returns array--
get_html_translation_table ([ int table [, int quote_style ]])
   Returns the translation table used by htmlspecialchars() and htmlentities() --returns array--
get_include_path(void)
   Gets the current include_path configuration option --returns string--
get_included_files(void)
   Returns an array with the names of included or required files --returns array--
get_loaded_extensions ([ bool zend_extensions=FALSE ])
   Returns an array with the names of all modules compiled and loaded --returns array--
get_magic_quotes_gpc(void)
   Gets the current configuration setting of magic quotes gpc --returns int--
get_magic_quotes_runtime(void)
   Gets the current active configuration setting of magic_quotes_runtime --returns int--
get_meta_tags(string filename [, bool use_include_path ])
   Extracts all meta tag content attributes from a file and returns an array --returns array--
get_object_vars(object object)
   Gets the public properties of the given object --returns array--
get_parent_class ([ mixed object ])
   Retrieves the parent class name for object or class --returns string--
get_required_files
   Alias of get_included_files() --returns ?--
get_resource_type(resource handle)
   Returns the resource type --returns string--
getallheaders(void)
   Fetch all HTTP request headers --returns array--
getcwd(void)
   Gets the current working directory --returns string--
getdate ([ int timestamp ])
   Get date/time information --returns array--
getenv(string varname)
   Gets the value of an environment variable --returns string--
gethostbyaddr(string ip_address)
   Get the Internet host name corresponding to a given IP address --returns string--
gethostbyname(string hostname)
   Get the IP address corresponding to a given Internet host name --returns string--
gethostbynamel(string hostname)
   Get a list of IP addresses corresponding to a given Internet host name --returns array--
getimagesize(string filename [, array &imageinfo ])
   Get the size of an image --returns array--
getlastmod(void)
   Gets time of last page modification --returns int--
getmxrr(string hostname, array &mxhosts [, array &weight ])
   Get MX records corresponding to a given Internet host name --returns bool--
getmygid(void)
   Get PHP script owner's GID --returns int--
getmyinode(void)
   Gets the inode of the current script --returns int--
getmypid(void)
   Gets PHP's process ID --returns int--
getmyuid(void)
   Gets PHP script owner's UID --returns int--
getopt(string options [, array longopts ])
   Gets options from the command line argument list --returns array--
getprotobyname(string name)
   Get protocol number associated with protocol name --returns int--
getprotobynumber(int number)
   Get protocol name associated with protocol number --returns string--
getrandmax(void)
   Show largest possible random value --returns int--
getrusage ([ int who ])
   Gets the current resource usages --returns array--
getservbyname(string service, string protocol)
   Get port number associated with an Internet service and protocol --returns int--
getservbyport(int port, string protocol)
   Get Internet service which corresponds to port and protocol --returns string--
gettext(string message)
   Lookup a message in the current domain --returns string--
gettimeofday ([ bool return_float ])
   Get current time --returns mixed--
gettype(mixed var)
   Get the type of a variable --returns string--
glob(string pattern [, int flags ])
   Find pathnames matching a pattern --returns array--
gmdate(string format [, int timestamp ])
   Format a GMT/UTC date/time --returns string--
gmmktime ([ int hour [, int minute [, int second [, int month [, int day [, int year [, int is_dst ]]]]]]])
   Get Unix timestamp for a GMT date --returns int--
gmp_abs(resource a)
   Absolute value --returns resource--
gmp_add(resource a, resource b)
   Add numbers --returns resource--
gmp_and(resource a, resource b)
   Bitwise AND --returns resource--
gmp_clrbit(resource &a, int index)
   Clear bit --returns void--
gmp_cmp(resource a, resource b)
   Compare numbers --returns int--
gmp_com(resource a)
   Calculates one's complement --returns resource--
gmp_div_q(resource a, resource b [, int round ])
   Divide numbers --returns resource--
gmp_div_qr(resource n, resource d [, int round ])
   Divide numbers and get quotient and remainder --returns array--
gmp_div_r(resource n, resource d [, int round ])
   Remainder of the division of numbers --returns resource--
gmp_div
   Alias of gmp_div_q() --returns ?--
gmp_divexact(resource n, resource d)
   Exact division of numbers --returns resource--
gmp_fact(int a)
   Factorial --returns resource--
gmp_gcd(resource a, resource b)
   Calculate GCD --returns resource--
gmp_gcdext(resource a, resource b)
   Calculate GCD and multipliers --returns array--
gmp_hamdist(resource a, resource b)
   Hamming distance --returns int--
gmp_init(mixed number [, int base ])
   Create GMP number --returns resource--
gmp_intval(resource gmpnumber)
   Convert GMP number to integer --returns int--
gmp_invert(resource a, resource b)
   Inverse by modulo --returns resource--
gmp_jacobi(resource a, resource p)
   Jacobi symbol --returns int--
gmp_legendre(resource a, resource p)
   Legendre symbol --returns int--
gmp_mod(resource n, resource d)
   Modulo operation --returns resource--
gmp_mul(resource a, resource b)
   Multiply numbers --returns resource--
gmp_neg(resource a)
   Negate number --returns resource--
gmp_nextprime(int a)
   Find next prime number --returns resource--
gmp_or(resource a, resource b)
   Bitwise OR --returns resource--
gmp_perfect_square(resource a)
   Perfect square check --returns bool--
gmp_popcount(resource a)
   Population count --returns int--
gmp_pow(resource base, int exp)
   Raise number into power --returns resource--
gmp_powm(resource base, resource exp, resource mod)
   Raise number into power with modulo --returns resource--
gmp_prob_prime(resource a [, int reps ])
   Check if number is &quot;probably prime&quot; --returns int--
gmp_random(int limiter)
   Random number --returns resource--
gmp_scan0(resource a, int start)
   Scan for 0 --returns int--
gmp_scan1(resource a, int start)
   Scan for 1 --returns int--
gmp_setbit(resource &a, int index [, bool set_clear ])
   Set bit --returns void--
gmp_sign(resource a)
   Sign of number --returns int--
gmp_sqrt(resource a)
   Calculate square root --returns resource--
gmp_sqrtrem(resource a)
   Square root with remainder --returns array--
gmp_strval(resource gmpnumber [, int base ])
   Convert GMP number to string --returns string--
gmp_sub(resource a, resource b)
   Subtract numbers --returns resource--
gmp_testbit(resource a, int index)
   Tests if a bit is set --returns bool--
gmp_xor(resource a, resource b)
   Bitwise XOR --returns resource--
gmstrftime(string format [, int timestamp ])
   Format a GMT/UTC time/date according to locale settings --returns string--
gnupg_adddecryptkey(resource identifier, string fingerprint, string passphrase)
   Add a key for decryption --returns bool--
gnupg_addencryptkey(resource identifier, string fingerprint)
   Add a key for encryption --returns bool--
gnupg_addsignkey(resource identifier, string fingerprint [, string passphrase ])
   Add a key for signing --returns bool--
gnupg_cleardecryptkeys(resource identifier)
   Removes all keys which were set for decryption before --returns bool--
gnupg_clearencryptkeys(resource identifier)
   Removes all keys which were set for encryption before --returns bool--
gnupg_clearsignkeys(resource identifier)
   Removes all keys which were set for signing before --returns bool--
gnupg_decrypt(resource identifier, string text)
   Decrypts a given text --returns string--
gnupg_decryptverify(resource identifier, string text, string &plaintext)
   Decrypts and verifies a given text --returns array--
gnupg_encrypt(resource identifier, string plaintext)
   Encrypts a given text --returns string--
gnupg_encryptsign(resource identifier, string plaintext)
   Encrypts and signs a given text --returns string--
gnupg_export(resource identifier, string fingerprint)
   Exports a key --returns string--
gnupg_geterror(resource identifier)
   Returns the errortext, if a function fails --returns string--
gnupg_getprotocol(resource identifier)
   Returns the currently active protocol for all operations --returns int--
gnupg_import(resource identifier, string keydata)
   Imports a key --returns array--
gnupg_init(void)
   Initialize a connection --returns resource--
gnupg_keyinfo(resource identifier, string pattern)
   Returns an array with information about all keys that matches the given pattern --returns array--
gnupg_setarmor(resource identifier, int armor)
   Toggle armored output --returns bool--
gnupg_seterrormode(resource identifier, int errormode)
   Sets the mode for error_reporting --returns void--
gnupg_setsignmode(resource identifier, int signmode)
   Sets the mode for signing --returns bool--
gnupg_sign(resource identifier, string plaintext)
   Signs a given text --returns string--
gnupg_verify(resource identifier, string signed_text, string signature [, string &plaintext ])
   Verifies a signed text --returns array--
gopher_parsedir(string dirent)
   Translate a gopher formatted directory entry into an associative array. --returns array--
grapheme_extract(string haystack, int size [, int extract_type [, int start [, int &next ]]])
   Function to extract a sequence of default grapheme clusters from a text buffer, which must be encoded in UTF-8. --returns string--
grapheme_stripos(string haystack, string needle [, int offset ])
   Find position (in grapheme units) of first occurrence of a case-insensitive string --returns int--
grapheme_stristr(string haystack, string needle [, boolean before_needle ])
   Returns part of haystack string from the first occurrence of case-insensitive needle to the end of haystack. --returns string--
grapheme_strlen(string input)
   Get string length in grapheme units --returns int--
grapheme_strpos(string haystack, string needle [, int offset ])
   Find position (in grapheme units) of first occurrence of a string --returns int--
grapheme_strripos(string haystack, string needle [, int offset ])
   Find position (in grapheme units) of last occurrence of a case-insensitive string --returns int--
grapheme_strrpos(string haystack, string needle [, int offset ])
   Find position (in grapheme units) of last occurrence of a string --returns int--
grapheme_strstr(string haystack, string needle [, boolean before_needle ])
   Returns part of haystack string from the first occurrence of needle to the end of haystack. --returns string--
grapheme_substr(string string, int start [, int length ])
   Return part of a string --returns int--
gregoriantojd(int month, int day, int year)
   Converts a Gregorian date to Julian Day Count --returns int--
gzclose(resource zp)
   Close an open gz-file pointer --returns bool--
gzcompress(string data [, int level ])
   Compress a string --returns string--
gzdecode(string data [, int length ])
   Decodes a gzip compressed string --returns string--
gzdeflate(string data [, int level ])
   Deflate a string --returns string--
gzencode(string data [, int level [, int encoding_mode ]])
   Create a gzip compressed string --returns string--
gzeof(resource zp)
   Test for end-of-file on a gz-file pointer --returns int--
gzfile(string filename [, int use_include_path ])
   Read entire gz-file into an array --returns array--
gzgetc(resource zp)
   Get character from gz-file pointer --returns string--
gzgets(resource zp, int length)
   Get line from file pointer --returns string--
gzgetss(resource zp, int length [, string allowable_tags ])
   Get line from gz-file pointer and strip HTML tags --returns string--
gzinflate(string data [, int length ])
   Inflate a deflated string --returns string--
gzopen(string filename, string mode [, int use_include_path ])
   Open gz-file --returns resource--
gzpassthru(resource zp)
   Output all remaining data on a gz-file pointer --returns int--
gzputs
   Alias of gzwrite() --returns ?--
gzread(resource zp, int length)
   Binary-safe gz-file read --returns string--
gzrewind(resource zp)
   Rewind the position of a gz-file pointer --returns bool--
gzseek(resource zp, int offset)
   Seek on a gz-file pointer --returns int--
gztell(resource zp)
   Tell gz-file pointer read/write position --returns int--
gzuncompress(string data [, int length ])
   Uncompress a compressed string --returns string--
gzwrite(resource zp, string string [, int length ])
   Binary-safe gz-file write --returns int--
__halt_compiler(void)
   Halts the compiler execution --returns void--
HaruAnnotation::setBorderStyle(float width, int dash_on, int dash_off)
   Set the border style of the annotation --returns bool--
HaruAnnotation::setHighlightMode(int mode)
   Set the highlighting mode of the annotation --returns bool--
HaruAnnotation::setIcon(int icon)
   Set the icon style of the annotation --returns bool--
HaruAnnotation::setOpened(bool opened)
   Set the initial state of the annotation --returns bool--
HaruDestination::setFit(void)
   Set the appearance of the page to fit the window --returns bool--
HaruDestination::setFitB(void)
   Set the appearance of the page to fit the bounding box of the page within the window --returns bool--
HaruDestination::setFitBH(float top)
   Set the appearance of the page to fit the width of the bounding box --returns bool--
HaruDestination::setFitBV(float left)
   Set the appearance of the page to fit the height of the boudning box --returns bool--
HaruDestination::setFitH(float top)
   Set the appearance of the page to fit the window width --returns bool--
HaruDestination::setFitR(float left, float bottom, float right, float top)
   Set the appearance of the page to fit the specified rectangle --returns bool--
HaruDestination::setFitV(float left)
   Set the appearance of the page to fit the window height --returns bool--
HaruDestination::setXYZ(float left, float top, float zoom)
   Set the appearance of the page --returns bool--
HaruDoc::addPage(void)
   Add new page to the document --returns object--
HaruDoc::addPageLabel(int first_page, int style, int first_num [, string prefix ])
   Set the numbering style for the specified range of pages --returns bool--
HaruDoc::__construct(void)
   Construct new HaruDoc instance --returns void--
HaruDoc::createOutline(string title [, object parent_outline [, object encoder ]])
   Create a HaruOutline instance --returns object--
HaruDoc::getCurrentEncoder(void)
   Get HaruEncoder currently used in the document --returns object--
HaruDoc::getCurrentPage(void)
   Return current page of the document --returns object--
HaruDoc::getEncoder(string encoding)
   Get HaruEncoder instance for the specified encoding --returns object--
HaruDoc::getFont(string fontname [, string encoding ])
   Get HaruFont instance --returns object--
HaruDoc::getInfoAttr(int type)
   Get current value of the specified document attribute --returns string--
HaruDoc::getPageLayout(void)
   Get current page layout --returns int--
HaruDoc::getPageMode(void)
   Get current page mode --returns int--
HaruDoc::getStreamSize(void)
   Get the size of the temporary stream --returns int--
HaruDoc::insertPage(object page)
   Insert new page just before the specified page --returns object--
HaruDoc::loadJPEG(string filename)
   Load a JPEG image. --returns object--
HaruDoc::loadPNG(string filename [, bool deferred ])
   Load PNG image and return HaruImage instance --returns object--
HaruDoc::loadRaw(string filename, int width, int height, int color_space)
   Load a RAW image --returns object--
HaruDoc::loadTTC(string fontfile, int index [, bool embed ])
   Load the font with the specified index from TTC file --returns string--
HaruDoc::loadTTF(string fontfile [, bool embed ])
   Load TTF font file --returns string--
HaruDoc::loadType1(string afmfile [, string pfmfile ])
   Load Type1 font --returns string--
HaruDoc::output(void)
   Write the document data to the output buffer --returns bool--
HaruDoc::readFromStream(int bytes)
   Read data from the temporary stream --returns string--
HaruDoc::resetError(void)
   Reset error state of the document handle --returns bool--
HaruDoc::resetStream(void)
   Rewind the temporary stream --returns bool--
HaruDoc::save(string file)
   Save the document into the specified file --returns bool--
HaruDoc::saveToStream(void)
   Save the document into a temporary stream --returns bool--
HaruDoc::setCompressionMode(int mode)
   Set compression mode for the document --returns bool--
HaruDoc::setCurrentEncoder(string encoding)
   Set the current encoder for the document --returns bool--
HaruDoc::setEncryptionMode(int mode [, int key_len ])
   Set encryption mode for the document --returns bool--
HaruDoc::setInfoAttr(int type, string info)
   Set the info attribute of the document --returns bool--
HaruDoc::setInfoDateAttr(int type, int year, int month, int day, int hour, int min, int sec, string ind, int off_hour, int off_min)
   Set the datetime info attributes of the document --returns bool--
HaruDoc::setOpenAction(object destination)
   Define which page is shown when the document is opened --returns bool--
HaruDoc::setPageLayout(int layout)
   Set how pages should be displayed --returns bool--
HaruDoc::setPageMode(int mode)
   Set how the document should be displayed --returns bool--
HaruDoc::setPagesConfiguration(int page_per_pages)
   Set the number of pages per set of pages --returns bool--
HaruDoc::setPassword(string owner_password, string user_password)
   Set owner and user passwords for the document --returns bool--
HaruDoc::setPermission(int permission)
   Set permissions for the document --returns bool--
HaruDoc::useCNSEncodings(void)
   Enable Chinese simplified encodings --returns bool--
HaruDoc::useCNSFonts(void)
   Enable builtin Chinese simplified fonts --returns bool--
HaruDoc::useCNTEncodings(void)
   Enable Chinese traditional encodings --returns bool--
HaruDoc::useCNTFonts(void)
   Enable builtin Chinese traditional fonts --returns bool--
HaruDoc::useJPEncodings(void)
   Enable Japanese encodings --returns bool--
HaruDoc::useJPFonts(void)
   Enable builtin Japanese fonts --returns bool--
HaruDoc::useKREncodings(void)
   Enable Korean encodings --returns bool--
HaruDoc::useKRFonts(void)
   Enable builtin Korean fonts --returns bool--
HaruEncoder::getByteType(string text, int index)
   Get the type of the byte in the text --returns int--
HaruEncoder::getType(void)
   Get the type of the encoder --returns int--
HaruEncoder::getUnicode(int character)
   Convert the specified character to unicode --returns int--
HaruEncoder::getWritingMode(void)
   Get the writing mode of the encoder --returns int--
HaruFont::getAscent(void)
   Get the vertical ascent of the font --returns int--
HaruFont::getCapHeight(void)
   Get the distance from the baseline of uppercase letters --returns int--
HaruFont::getDescent(void)
   Get the vertical descent of the font --returns int--
HaruFont::getEncodingName(void)
   Get the name of the encoding --returns string--
HaruFont::getFontName(void)
   Get the name of the font --returns string--
HaruFont::getTextWidth(string text)
   Get the total width of the text, number of characters, number of words and number of spaces --returns array--
HaruFont::getUnicodeWidth(int character)
   Get the width of the character in the font --returns int--
HaruFont::getXHeight(void)
   Get the distance from the baseline of lowercase letters --returns int--
HaruFont::measureText(string text, float width, float font_size, float char_space, float word_space [, bool word_wrap ])
   Calculate the number of characters which can be included within the specified width --returns int--
HaruImage::getBitsPerComponent(void)
   Get the number of bits used to describe each color component of the image --returns int--
HaruImage::getColorSpace(void)
   Get the name of the color space --returns string--
HaruImage::getHeight(void)
   Get the height of the image --returns int--
HaruImage::getSize(void)
   Get size of the image --returns array--
HaruImage::getWidth(void)
   Get the width of the image --returns int--
HaruImage::setColorMask(int rmin, int rmax, int gmin, int gmax, int bmin, int bmax)
   Set the color mask of the image --returns bool--
HaruImage::setMaskImage(object mask_image)
   Set the image mask --returns bool--
HaruOutline::setDestination(object destination)
   Set the destination for the outline --returns bool--
HaruOutline::setOpened(bool opened)
   Set the initial state of the outline --returns bool--
HaruPage::arc(float x, float y, float ray, float ang1, float ang2)
   Append an arc to the current path --returns bool--
HaruPage::beginText(void)
   Begin a text object and set the current text position to (0,0) --returns bool--
HaruPage::circle(float x, float y, float ray)
   Append a circle to the current path --returns bool--
HaruPage::closePath(void)
   Append a straight line from the current point to the start point of the path --returns bool--
HaruPage::concat(float a, float b, float c, float d, float x, float y)
   Concatenate current transformation matrix of the page and the specified matrix --returns bool--
HaruPage::createDestination(void)
   Create new HaruDestination instance --returns object--
HaruPage::createLinkAnnotation(array rectangle, object destination)
   Create new HaruAnnotation instance --returns object--
HaruPage::createTextAnnotation(array rectangle, string text [, object encoder ])
   Create new HaruAnnotation instance --returns object--
HaruPage::createURLAnnotation(array rectangle, string url)
   Create and return new HaruAnnotation instance --returns object--
HaruPage::curveTo(float x1, float y1, float x2, float y2, float x3, float y3)
   Append a Bezier curve to the current path --returns bool--
HaruPage::curveTo2(float x2, float y2, float x3, float y3)
   Append a Bezier curve to the current path --returns bool--
HaruPage::curveTo3(float x1, float y1, float x3, float y3)
   Append a Bezier curve to the current path --returns bool--
HaruPage::drawImage(object image, float x, float y, float width, float height)
   Show image at the page --returns bool--
HaruPage::ellipse(float x, float y, float xray, float yray)
   Append an ellipse to the current path --returns bool--
HaruPage::endPath(void)
   End current path object without filling and painting operations --returns bool--
HaruPage::endText(void)
   End current text object --returns bool--
HaruPage::eofill(void)
   Fill current path using even-odd rule --returns bool--
HaruPage::eoFillStroke ([ bool close_path ])
   Fill current path using even-odd rule, then paint the path --returns bool--
HaruPage::fill(void)
   Fill current path using nonzero winding number rule --returns bool--
HaruPage::fillStroke ([ bool close_path ])
   Fill current path using nonzero winding number rule, then paint the path --returns bool--
HaruPage::getCharSpace(void)
   Get the current value of character spacing --returns float--
HaruPage::getCMYKFill(void)
   Get the current filling color --returns array--
HaruPage::getCMYKStroke(void)
   Get the current stroking color --returns array--
HaruPage::getCurrentFont(void)
   Get the currently used font --returns object--
HaruPage::getCurrentFontSize(void)
   Get the current font size --returns float--
HaruPage::getCurrentPos(void)
   Get the current position for path painting --returns array--
HaruPage::getCurrentTextPos(void)
   Get the current position for text printing --returns array--
HaruPage::getDash(void)
   Get the current dash pattern --returns array--
HaruPage::getFillingColorSpace(void)
   Get the current filling color space --returns int--
HaruPage::getFlatness(void)
   Get the flatness of the page --returns float--
HaruPage::getGMode(void)
   Get the current graphics mode --returns int--
HaruPage::getGrayFill(void)
   Get the current filling color --returns float--
HaruPage::getGrayStroke(void)
   Get the current stroking color --returns float--
HaruPage::getHeight(void)
   Get the height of the page --returns float--
HaruPage::getHorizontalScaling(void)
   Get the current value of horizontal scaling --returns float--
HaruPage::getLineCap(void)
   Get the current line cap style --returns int--
HaruPage::getLineJoin(void)
   Get the current line join style --returns int--
HaruPage::getLineWidth(void)
   Get the current line width --returns float--
HaruPage::getMiterLimit(void)
   Get the value of miter limit --returns float--
HaruPage::getRGBFill(void)
   Get the current filling color --returns array--
HaruPage::getRGBStroke(void)
   Get the current stroking color --returns array--
HaruPage::getStrokingColorSpace(void)
   Get the current stroking color space --returns int--
HaruPage::getTextLeading(void)
   Get the current value of line spacing --returns float--
HaruPage::getTextMatrix(void)
   Get the current text transformation matrix of the page --returns array--
HaruPage::getTextRenderingMode(void)
   Get the current text rendering mode --returns int--
HaruPage::getTextRise(void)
   Get the current value of text rising --returns float--
HaruPage::getTextWidth(string text)
   Get the width of the text using current fontsize, character spacing and word spacing --returns float--
HaruPage::getTransMatrix(void)
   Get the current transformation matrix of the page --returns array--
HaruPage::getWidth(void)
   Get the width of the page --returns float--
HaruPage::getWordSpace(void)
   Get the current value of word spacing --returns float--
HaruPage::lineTo(float x, float y)
   Draw a line from the current point to the specified point --returns bool--
HaruPage::measureText(string text, float width [, bool wordwrap ])
   Calculate the number of characters which can be included within the specified width --returns int--
HaruPage::moveTextPos(float x, float y [, bool set_leading ])
   Move text position to the specified offset --returns bool--
HaruPage::moveTo(float x, float y)
   Set starting point for new drawing path --returns bool--
HaruPage::moveToNextLine(void)
   Move text position to the start of the next line --returns bool--
HaruPage::rectangle(float x, float y, float width, float height)
   Append a rectangle to the current path --returns bool--
HaruPage::setCharSpace(float char_space)
   Set character spacing for the page --returns bool--
HaruPage::setCMYKFill(float c, float m, float y, float k)
   Set filling color for the page --returns bool--
HaruPage::setCMYKStroke(float c, float m, float y, float k)
   Set stroking color for the page --returns bool--
HaruPage::setDash(array pattern, int phase)
   Set the dash pattern for the page --returns bool--
HaruPage::setFlatness(float flatness)
   Set flatness for the page --returns bool--
HaruPage::setFontAndSize(object font, float size)
   Set font and fontsize for the page --returns bool--
HaruPage::setGrayFill(float value)
   Set filling color for the page --returns bool--
HaruPage::setGrayStroke(float value)
   Sets stroking color for the page --returns bool--
HaruPage::setHeight(float height)
   Set height of the page --returns bool--
HaruPage::setHorizontalScaling(float scaling)
   Set horizontal scaling for the page --returns bool--
HaruPage::setLineCap(int cap)
   Set the shape to be used at the ends of lines --returns bool--
HaruPage::setLineJoin(int join)
   Set line join style for the page --returns bool--
HaruPage::setLineWidth(float width)
   Set line width for the page --returns bool--
HaruPage::setMiterLimit(float limit)
   Set the current value of the miter limit of the page --returns bool--
HaruPage::setRGBFill(float r, float g, float b)
   Set filling color for the page --returns bool--
HaruPage::setRGBStroke(float r, float g, float b)
   Set stroking color for the page --returns bool--
HaruPage::setRotate(int angle)
   Set rotation angle of the page --returns bool--
HaruPage::setSize(int size, int direction)
   Set size and direction of the page --returns bool--
HaruPage::setSlideShow(int type, float disp_time, float trans_time)
   Set transition style for the page --returns bool--
HaruPage::setTextLeading(float text_leading)
   Set text leading (line spacing) for the page --returns bool--
HaruPage::setTextMatrix(float a, float b, float c, float d, float x, float y)
   Set the current text transformation matrix of the page --returns bool--
HaruPage::setTextRenderingMode(int mode)
   Set text rendering mode for the page --returns bool--
HaruPage::setTextRise(float rise)
   Set the current value of text rising --returns bool--
HaruPage::setWidth(float width)
   Set width of the page --returns bool--
HaruPage::setWordSpace(float word_space)
   Set word spacing for the page --returns bool--
HaruPage::showText(string text)
   Print text at the current position of the page --returns bool--
HaruPage::showTextNextLine(string text [, float word_space [, float char_space ]])
   Move the current position to the start of the next line and print the text --returns bool--
HaruPage::stroke ([ bool close_path ])
   Paint current path --returns bool--
HaruPage::textOut(float x, float y, string text)
   Print the text on the specified position --returns bool--
HaruPage::textRect(float left, float top, float right, float bottom, string text [, int align ])
   Print the text inside the specified region --returns bool--
hash_algos(void)
   Return a list of registered hashing algorithms --returns array--
hash_copy(resource context)
   Copy hashing context --returns resource--
hash_file(string algo, string filename [, bool raw_output ])
   Generate a hash value using the contents of a given file --returns string--
hash_final(resource context [, bool raw_output ])
   Finalize an incremental hash and return resulting digest --returns string--
hash_hmac_file(string algo, string filename, string key [, bool raw_output ])
   Generate a keyed hash value using the HMAC method and the contents of a given file --returns string--
hash_hmac(string algo, string data, string key [, bool raw_output ])
   Generate a keyed hash value using the HMAC method --returns string--
hash_init(string algo [, int options [, string key ]])
   Initialize an incremental hashing context --returns resource--
hash_update_file(resource context, string filename [, resource context ])
   Pump data into an active hashing context from a file --returns bool--
hash_update_stream(resource context, resource handle [, int length ])
   Pump data into an active hashing context from an open stream --returns int--
hash_update(resource context, string data)
   Pump data into an active hashing context --returns bool--
hash(string algo, string data [, bool raw_output ])
   Generate a hash value (message digest) --returns string--
header(string string [, bool replace [, int http_response_code ]])
   Send a raw HTTP header --returns void--
headers_list(void)
   Returns a list of response headers sent (or ready to send) --returns array--
headers_sent ([ string &file [, int &line ]])
   Checks if or where headers have been sent --returns bool--
hebrev(string hebrew_text [, int max_chars_per_line ])
   Convert logical Hebrew text to visual text --returns string--
hebrevc(string hebrew_text [, int max_chars_per_line ])
   Convert logical Hebrew text to visual text with newline conversion --returns string--
hexdec(string hex_string)
   Hexadecimal to decimal --returns number--
highlight_file(string filename [, bool return ])
   Syntax highlighting of a file --returns mixed--
highlight_string(string str [, bool return ])
   Syntax highlighting of a string --returns mixed--
html_entity_decode(string string [, int quote_style [, string charset ]])
   Convert all HTML entities to their applicable characters --returns string--
htmlentities(string string [, int quote_style [, string charset [, bool double_encode ]]])
   Convert all applicable characters to HTML entities --returns string--
htmlspecialchars_decode(string string [, int quote_style ])
   Convert special HTML entities back to characters --returns string--
htmlspecialchars(string string [, int quote_style [, string charset [, bool double_encode ]]])
   Convert special characters to HTML entities --returns string--
http_build_cookie(array cookie)
   Build cookie string --returns string--
http_build_query(array formdata [, string numeric_prefix [, string arg_separator ]])
   Generate URL-encoded query string --returns string--
http_build_str(array query [, string prefix [, string arg_separator ]])
   Build query string --returns string--
http_build_url ([ mixed url [, mixed parts [, int flags = HTTP_URL_REPLACE [, array &new_url ]]]])
   Build an URL --returns string--
http_cache_etag ([ string etag ])
   Caching by ETag --returns bool--
http_cache_last_modified ([ int timestamp_or_expires ])
   Caching by last modification --returns bool--
http_chunked_decode(string encoded)
   Decode chunked-encoded data --returns string--
http_date ([ int timestamp ])
   Compose HTTP RFC compliant date --returns string--
http_deflate(string data [, int flags = 0 ])
   Deflate data --returns string--
http_get_request_body_stream(void)
   Get request body as stream --returns resource--
http_get_request_body(void)
   Get request body as string --returns string--
http_get_request_headers(void)
   Get request headers as array --returns array--
http_get(string url [, array options [, array &info ]])
   Perform GET request --returns string--
http_head ([ string url [, array options [, array &info ]]])
   Perform HEAD request --returns string--
http_inflate(string data)
   Inflate data --returns string--
http_match_etag(string etag [, bool for_range = FALSE ])
   Match ETag --returns bool--
http_match_modified ([ int timestamp [, bool for_range = FALSE ]])
   Match last modification --returns bool--
http_match_request_header(string header, string value [, bool match_case = FALSE ])
   Match any header --returns bool--
http_negotiate_charset(array supported [, array &result ])
   Negotiate clients preferred character set --returns string--
http_negotiate_content_type(array supported [, array &result ])
   Negotiate clients preferred content type --returns string--
http_negotiate_language(array supported [, array &result ])
   Negotiate clients preferred language --returns string--
http_parse_cookie(string cookie [, int flags [, array allowed_extras ]])
   Parse HTTP cookie --returns object--
http_parse_headers(string header)
   Parse HTTP headers --returns array--
http_parse_message(string message)
   Parse HTTP messages --returns object--
http_parse_params(string param [, int flags = HTTP_PARAMS_DEFAULT ])
   Parse parameter list --returns object--
http_persistent_handles_clean ([ string ident ])
   Clean up persistent handles --returns string--
http_persistent_handles_count(void)
   Stat persistent handles --returns object--
http_persistent_handles_ident(string ident)
   Get/set ident of persistent handles --returns string--
http_post_data(string url [, string data [, array options [, array &info ]]])
   Perform POST request with pre-encoded data --returns string--
http_post_fields(string url [, array data [, array files [, array options [, array &info ]]]])
   Perform POST request with data to be encoded --returns string--
http_put_data(string url [, string data [, array options [, array &info ]]])
   Perform PUT request with data --returns string--
http_put_file(string url [, string file [, array options [, array &info ]]])
   Perform PUT request with file --returns string--
http_put_stream(string url [, resource stream [, array options [, array &info ]]])
   Perform PUT request with stream --returns string--
http_redirect ([ string url [, array params [, bool session = FALSE [, int status ]]]])
   Issue HTTP redirect --returns void--
http_request_body_encode(array fields, array files)
   Encode request body --returns string--
http_request_method_exists(mixed method)
   Check whether request method exists --returns int--
http_request_method_name(int method)
   Get request method name --returns string--
http_request_method_register(string method)
   Register request method --returns int--
http_request_method_unregister(mixed method)
   Unregister request method --returns bool--
http_request(int method [, string url [, string body [, array options [, array &info ]]]])
   Perform custom request --returns string--
http_send_content_disposition(string filename [, bool inline = FALSE ])
   Send Content-Disposition --returns bool--
http_send_content_type ([ string content_type = &#039;application/x-octetstream&#039; ])
   Send Content-Type --returns bool--
http_send_data(string data)
   Send arbitrary data --returns bool--
http_send_file(string file)
   Send file --returns bool--
http_send_last_modified ([ int timestamp ])
   Send Last-Modified --returns bool--
http_send_status(int status)
   Send HTTP response status --returns bool--
http_send_stream(resource stream)
   Send stream --returns bool--
http_support ([ int feature = 0 ])
   Check built-in HTTP support --returns int--
http_throttle ([ float sec [, int bytes = 40960 ]])
   HTTP throttling --returns void--
void HttpDeflateStream::__construct ([ int flags = 0 ])
   HttpDeflateStream class constructor --returns public--
HttpDeflateStream HttpDeflateStream::factory ([ int flags = 0 [, string class_name = &#039;HttpDeflateStream&#039; ]])
   HttpDeflateStream class factory --returns public--
string HttpDeflateStream::finish ([ string data ])
   Finalize deflate stream --returns public--
string HttpDeflateStream::flush ([ string data ])
   Flush deflate stream --returns public--
string HttpDeflateStream::update(string data)
   Update deflate stream --returns public--
void HttpInflateStream::__construct ([ int flags = 0 ])
   HttpInflateStream class constructor --returns public--
HttpInflateStream HttpInflateStream::factory ([ int flags = 0 [, string class_name = &#039;HttpInflateStream&#039; ]])
   HttpInflateStream class factory --returns public--
string HttpInflateStream::finish ([ string data ])
   Finalize inflate stream --returns public--
string HttpInflateStream::flush ([ string data ])
   Flush inflate stream --returns public--
string HttpInflateStream::update(string data)
   Update inflate stream --returns public--
void HttpMessage::addHeaders(array headers [, bool append = FALSE ])
   Add headers --returns public--
void HttpMessage::__construct ([ string message ])
   HttpMessage constructor --returns public--
HttpMessage HttpMessage::detach(void)
   Detach HttpMessage --returns public--
public HttpMessage HttpMessage::factory ([ string raw_message [, string class_name = &#039;HttpMessage&#039; ]])
   Create HttpMessage from string --returns static--
public HttpMessage HttpMessage::fromEnv(int message_type [, string class_name = &#039;HttpMessage&#039; ])
   Create HttpMessage from environment --returns static--
public HttpMessage HttpMessage::fromString ([ string raw_message [, string class_name = &#039;HttpMessage&#039; ]])
   Create HttpMessage from string --returns static--
string HttpMessage::getBody(void)
   Get message body --returns public--
string HttpMessage::getHeader(string header)
   Get header --returns public--
array HttpMessage::getHeaders(void)
   Get message headers --returns public--
string HttpMessage::getHttpVersion(void)
   Get HTTP version --returns public--
HttpMessage HttpMessage::getParentMessage(void)
   Get parent message --returns public--
string HttpMessage::getRequestMethod(void)
   Get request method --returns public--
string HttpMessage::getRequestUrl(void)
   Get request URL --returns public--
int HttpMessage::getResponseCode(void)
   Get response code --returns public--
string HttpMessage::getResponseStatus(void)
   Get response status --returns public--
int HttpMessage::getType(void)
   Get message type --returns public--
string HttpMessage::guessContentType(string magic_file [, int magic_mode = MAGIC_MIME ])
   Guess content type --returns public--
void HttpMessage::prepend(HttpMessage message [, bool top = TRUE ])
   Prepend message(s) --returns public--
HttpMessage HttpMessage::reverse(void)
   Reverse message chain --returns public--
bool HttpMessage::send(void)
   Send message --returns public--
void HttpMessage::setBody(string body)
   Set message body --returns public--
void HttpMessage::setHeaders(array headers)
   Set headers --returns public--
bool HttpMessage::setHttpVersion(string version)
   Set HTTP version --returns public--
bool HttpMessage::setRequestMethod(string method)
   Set request method --returns public--
bool HttpMessage::setRequestUrl(string url)
   Set request URL --returns public--
bool HttpMessage::setResponseCode(int code)
   Set response code --returns public--
bool HttpMessage::setResponseStatus(string status)
   Set response status --returns public--
void HttpMessage::setType(int type)
   Set message type --returns public--
HttpRequest|HttpResponse HttpMessage::toMessageTypeObject(void)
   Create HTTP object regarding message type --returns public--
string HttpMessage::toString ([ bool include_parent = FALSE ])
   Get string representation --returns public--
public void HttpQueryString::__construct ([ bool global = TRUE [, mixed add ]])
   HttpQueryString constructor --returns final--
mixed HttpQueryString::get ([ string key [, mixed type = 0 [, mixed defval = NULL [, bool delete = FALSE ]]]])
   Get (part of) query string --returns public--
HttpQueryString HttpQueryString::mod(mixed params)
   Modifiy query string copy --returns public--
string HttpQueryString::set(mixed params)
   Set query string params --returns public--
public HttpQueryString HttpQueryString::singleton ([ bool global = TRUE ])
   HttpQueryString singleton --returns static--
array HttpQueryString::toArray(void)
   Get query string as array --returns public--
string HttpQueryString::toString(void)
   Get query string --returns public--
bool HttpQueryString::xlate(string ie, string oe)
   Change query strings charset --returns public--
bool HttpRequest::addCookies(array cookies)
   Add cookies --returns public--
bool HttpRequest::addHeaders(array headers)
   Add headers --returns public--
bool HttpRequest::addPostFields(array post_data)
   Add post fields --returns public--
bool HttpRequest::addPostFile(string name, string file [, string content_type = &#039;application/x-octetstream&#039; ])
   Add post file --returns public--
bool HttpRequest::addPutData(string put_data)
   Add put data --returns public--
bool HttpRequest::addQueryData(array query_params)
   Add query data --returns public--
bool HttpRequest::addRawPostData(string raw_post_data)
   Add raw post data --returns public--
bool HttpRequest::addSslOptions(array options)
   Add ssl options --returns public--
void HttpRequest::clearHistory(void)
   Clear history --returns public--
void HttpRequest::__construct ([ string url [, int request_method = HTTP_METH_GET [, array options ]]])
   HttpRequest constructor --returns public--
bool HttpRequest::enableCookies(void)
   Enable cookies --returns public--
string HttpRequest::getContentType(void)
   Get content type --returns public--
array HttpRequest::getCookies(void)
   Get cookies --returns public--
array HttpRequest::getHeaders(void)
   Get headers --returns public--
HttpMessage HttpRequest::getHistory(void)
   Get history --returns public--
int HttpRequest::getMethod(void)
   Get method --returns public--
array HttpRequest::getOptions(void)
   Get options --returns public--
array HttpRequest::getPostFields(void)
   Get post fields --returns public--
array HttpRequest::getPostFiles(void)
   Get post files --returns public--
string HttpRequest::getPutData(void)
   Get put data --returns public--
string HttpRequest::getPutFile(void)
   Get put file --returns public--
string HttpRequest::getQueryData(void)
   Get query data --returns public--
string HttpRequest::getRawPostData(void)
   Get raw post data --returns public--
string HttpRequest::getRawRequestMessage(void)
   Get raw request message --returns public--
string HttpRequest::getRawResponseMessage(void)
   Get raw response message --returns public--
HttpMessage HttpRequest::getRequestMessage(void)
   Get request message --returns public--
string HttpRequest::getResponseBody(void)
   Get response body --returns public--
int HttpRequest::getResponseCode(void)
   Get response code --returns public--
array HttpRequest::getResponseCookies ([ int flags [, array allowed_extras ]])
   Get response cookie(s) --returns public--
array HttpRequest::getResponseData(void)
   Get response data --returns public--
mixed HttpRequest::getResponseHeader ([ string name ])
   Get response header(s) --returns public--
mixed HttpRequest::getResponseInfo ([ string name ])
   Get response info --returns public--
HttpMessage HttpRequest::getResponseMessage(void)
   Get response message --returns public--
string HttpRequest::getResponseStatus(void)
   Get response status --returns public--
array HttpRequest::getSslOptions(void)
   Get ssl options --returns public--
string HttpRequest::getUrl(void)
   Get url --returns public--
bool HttpRequest::resetCookies ([ bool session_only = FALSE ])
   Reset cookies --returns public--
HttpMessage HttpRequest::send(void)
   Send request --returns public--
bool HttpRequest::setContentType(string content_type)
   Set content type --returns public--
bool HttpRequest::setCookies ([ array cookies ])
   Set cookies --returns public--
bool HttpRequest::setHeaders ([ array headers ])
   Set headers --returns public--
bool HttpRequest::setMethod(int request_method)
   Set method --returns public--
bool HttpRequest::setOptions ([ array options ])
   Set options --returns public--
bool HttpRequest::setPostFields(array post_data)
   Set post fields --returns public--
bool HttpRequest::setPostFiles(array post_files)
   Set post files --returns public--
bool HttpRequest::setPutData ([ string put_data ])
   Set put data --returns public--
bool HttpRequest::setPutFile ([ string file ])
   Set put file --returns public--
bool HttpRequest::setQueryData(mixed query_data)
   Set query data --returns public--
bool HttpRequest::setRawPostData ([ string raw_post_data ])
   Set raw post data --returns public--
bool HttpRequest::setSslOptions ([ array options ])
   Set ssl options --returns public--
bool HttpRequest::setUrl(string url)
   Set URL --returns public--
bool HttpRequestPool::attach(HttpRequest request)
   Attach HttpRequest --returns public--
HttpRequestPool::__construct ([ HttpRequest request ])
   HttpRequestPool constructor --returns void--
HttpRequestPool::__destruct(void)
   HttpRequestPool destructor --returns void--
HttpRequestPool::detach(HttpRequest request)
   Detach HttpRequest --returns bool--
HttpRequestPool::getAttachedRequests(void)
   Get attached requests --returns array--
HttpRequestPool::getFinishedRequests(void)
   Get finished requests --returns array--
HttpRequestPool::reset(void)
   Reset request pool --returns void--
HttpRequestPool::send(void)
   Send all requests --returns bool--
bool HttpRequestPool::socketPerform(void)
   Perform socket actions --returns protected--
bool HttpRequestPool::socketSelect(void)
   Perform socket select --returns protected--
void HttpResponse::capture(void)
   Capture script output --returns static--
int HttpResponse::getBufferSize(void)
   Get buffer size --returns static--
bool HttpResponse::getCache(void)
   Get cache --returns static--
string HttpResponse::getCacheControl(void)
   Get cache control --returns static--
string HttpResponse::getContentDisposition(void)
   Get content disposition --returns static--
string HttpResponse::getContentType(void)
   Get content type --returns static--
string HttpResponse::getData(void)
   Get data --returns static--
string HttpResponse::getETag(void)
   Get ETag --returns static--
string HttpResponse::getFile(void)
   Get file --returns static--
bool HttpResponse::getGzip(void)
   Get gzip --returns static--
mixed HttpResponse::getHeader ([ string name ])
   Get header --returns static--
int HttpResponse::getLastModified(void)
   Get last modified --returns static--
string HttpResponse::getRequestBody(void)
   Get request body --returns static--
resource HttpResponse::getRequestBodyStream(void)
   Get request body stream --returns static--
array HttpResponse::getRequestHeaders(void)
   Get request headers --returns static--
resource HttpResponse::getStream(void)
   Get Stream --returns static--
double HttpResponse::getThrottleDelay(void)
   Get throttle delay --returns static--
string HttpResponse::guessContentType(string magic_file [, int magic_mode=MAGIC_MIME ])
   Guess content type --returns static--
void HttpResponse::redirect ([ string url [, array params [, bool session = FALSE [, int status ]]]])
   Redirect --returns static--
bool HttpResponse::send ([ bool clean_ob = TRUE ])
   Send response --returns static--
bool HttpResponse::setBufferSize(int bytes)
   Set buffer size --returns static--
bool HttpResponse::setCache(bool cache)
   Set cache --returns static--
bool HttpResponse::setCacheControl(string control [, int max_age = 0 [, bool must_revalidate = TRUE ]])
   Set cache control --returns static--
bool HttpResponse::setContentDisposition(string filename [, bool inline = FALSE ])
   Set content disposition --returns static--
bool HttpResponse::setContentType(string content_type)
   Set content type --returns static--
bool HttpResponse::setData(mixed data)
   Set data --returns static--
bool HttpResponse::setETag(string etag)
   Set ETag --returns static--
bool HttpResponse::setFile(string file)
   Set file --returns static--
bool HttpResponse::setGzip(bool gzip)
   Set gzip --returns static--
bool HttpResponse::setHeader(string name [, mixed value [, bool replace = TRUE ]])
   Set header --returns static--
bool HttpResponse::setLastModified(int timestamp)
   Set last modified --returns static--
bool HttpResponse::setStream(resource stream)
   Set stream --returns static--
bool HttpResponse::setThrottleDelay(float seconds)
   Set throttle delay --returns static--
bool HttpResponse::status(int status)
   Send HTTP response status --returns static--
hw_array2objrec(array object_array)
   Convert attributes from object array to object record --returns string--
hw_changeobject(int link, int objid, array attributes)
   Changes attributes of an object (obsolete) --returns bool--
hw_children(int connection, int objectID)
   Object ids of children --returns array--
hw_childrenobj(int connection, int objectID)
   Object records of children --returns array--
hw_close(int connection)
   Closes the Hyperwave connection --returns bool--
hw_connect(string host, int port [, string username ], string password)
   Opens a connection --returns int--
hw_connection_info(int link)
   Prints information about the connection to Hyperwave server --returns void--
hw_cp(int connection, array object_id_array, int destination_id)
   Copies objects --returns int--
hw_deleteobject(int connection, int object_to_delete)
   Deletes object --returns bool--
hw_docbyanchor(int connection, int anchorID)
   Object id object belonging to anchor --returns int--
hw_docbyanchorobj(int connection, int anchorID)
   Object record object belonging to anchor --returns string--
hw_document_attributes(int hw_document)
   Object record of hw_document --returns string--
hw_document_bodytag(int hw_document [, string prefix ])
   Body tag of hw_document --returns string--
hw_document_content(int hw_document)
   Returns content of hw_document --returns string--
hw_document_setcontent(int hw_document, string content)
   Sets/replaces content of hw_document --returns bool--
hw_document_size(int hw_document)
   Size of hw_document --returns int--
hw_dummy(int link, int id, int msgid)
   Hyperwave dummy function --returns string--
hw_edittext(int connection, int hw_document)
   Retrieve text document --returns bool--
hw_error(int connection)
   Error number --returns int--
hw_errormsg(int connection)
   Returns error message --returns string--
hw_free_document(int hw_document)
   Frees hw_document --returns bool--
hw_getanchors(int connection, int objectID)
   Object ids of anchors of document --returns array--
hw_getanchorsobj(int connection, int objectID)
   Object records of anchors of document --returns array--
hw_getandlock(int connection, int objectID)
   Return object record and lock object --returns string--
hw_getchildcoll(int connection, int objectID)
   Object ids of child collections --returns array--
hw_getchildcollobj(int connection, int objectID)
   Object records of child collections --returns array--
hw_getchilddoccoll(int connection, int objectID)
   Object ids of child documents of collection --returns array--
hw_getchilddoccollobj(int connection, int objectID)
   Object records of child documents of collection --returns array--
hw_getobject(int connection, mixed objectID [, string query ])
   Object record --returns mixed--
hw_getobjectbyquery(int connection, string query, int max_hits)
   Search object --returns array--
hw_getobjectbyquerycoll(int connection, int objectID, string query, int max_hits)
   Search object in collection --returns array--
hw_getobjectbyquerycollobj(int connection, int objectID, string query, int max_hits)
   Search object in collection --returns array--
hw_getobjectbyqueryobj(int connection, string query, int max_hits)
   Search object --returns array--
hw_getparents(int connection, int objectID)
   Object ids of parents --returns array--
hw_getparentsobj(int connection, int objectID)
   Object records of parents --returns array--
hw_getrellink(int link, int rootid, int sourceid, int destid)
   Get link from source to dest relative to rootid --returns string--
hw_getremote(int connection, int objectID)
   Gets a remote document --returns int--
hw_getremotechildren(int connection, string object_record)
   Gets children of remote document --returns mixed--
hw_getsrcbydestobj(int connection, int objectID)
   Returns anchors pointing at object --returns array--
hw_gettext(int connection, int objectID [, mixed rootID/prefix ])
   Retrieve text document --returns int--
hw_getusername(int connection)
   Name of currently logged in user --returns string--
hw_identify(int link, string username, string password)
   Identifies as user --returns string--
hw_incollections(int connection, array object_id_array, array collection_id_array, int return_collections)
   Check if object ids in collections --returns array--
hw_info(int connection)
   Info about connection --returns string--
hw_inscoll(int connection, int objectID, array object_array)
   Insert collection --returns int--
hw_insdoc(resource connection, int parentID, string object_record [, string text ])
   Insert document --returns int--
hw_insertanchors(int hwdoc, array anchorecs, array dest [, array urlprefixes ])
   Inserts only anchors into text --returns bool--
hw_insertdocument(int connection, int parent_id, int hw_document)
   Upload any document --returns int--
hw_insertobject(int connection, string object_rec, string parameter)
   Inserts an object record --returns int--
hw_mapid(int connection, int server_id, int object_id)
   Maps global id on virtual local id --returns int--
hw_modifyobject(int connection, int object_to_change, array remove, array add [, int mode ])
   Modifies object record --returns bool--
hw_mv(int connection, array object_id_array, int source_id, int destination_id)
   Moves objects --returns int--
hw_new_document(string object_record, string document_data, int document_size)
   Create new document --returns int--
hw_objrec2array(string object_record [, array format ])
   Convert attributes from object record to object array --returns array--
hw_output_document(int hw_document)
   Prints hw_document --returns bool--
hw_pconnect(string host, int port [, string username ], string password)
   Make a persistent database connection --returns int--
hw_pipedocument(int connection, int objectID [, array url_prefixes ])
   Retrieve any document --returns int--
hw_root(void)
   Root object id --returns int--
hw_setlinkroot(int link, int rootid)
   Set the id to which links are calculated --returns int--
hw_stat(int link)
   Returns status string --returns string--
hw_unlock(int connection, int objectID)
   Unlock object --returns bool--
hw_who(int connection)
   List of currently logged in users --returns array--
key(void)
   Returns key of the attribute --returns string--
langdepvalue(string language)
   Returns value for a given language --returns string--
value(void)
   Returns value of the attribute --returns string--
values(void)
   Returns all values of the attribute --returns array--
hw_api_attribute ([ string name [, string value ]])
   Creates instance of class hw_api_attribute --returns HW_API_Attribute--
checkin(array parameter)
   Checks in an object --returns bool--
checkout(array parameter)
   Checks out an object --returns bool--
children(array parameter)
   Returns children of an object --returns array--
mimetype(void)
   Returns mimetype --returns string--
read(string buffer, int len)
   Read content --returns string--
content(array parameter)
   Returns content of an object --returns HW_API_Content--
copy(array parameter)
   Copies physically --returns hw_api_content--
dbstat(array parameter)
   Returns statistics about database server --returns hw_api_object--
dcstat(array parameter)
   Returns statistics about document cache server --returns hw_api_object--
dstanchors(array parameter)
   Returns a list of all destination anchors --returns array--
dstofsrcanchor(array parameter)
   Returns destination of a source anchor --returns hw_api_object--
count(void)
   Returns number of reasons --returns int--
reason(void)
   Returns reason of error --returns HW_API_Reason--
find(array parameter)
   Search for objects --returns array--
ftstat(array parameter)
   Returns statistics about fulltext server --returns hw_api_object--
hwapi_hgcsp(string hostname [, int port ])
   Returns object of class hw_api --returns HW_API--
hwstat(array parameter)
   Returns statistics about Hyperwave server --returns hw_api_object--
identify(array parameter)
   Log into Hyperwave Server --returns bool--
info(array parameter)
   Returns information about server configuration --returns array--
insert(array parameter)
   Inserts a new object --returns hw_api_object--
insertanchor(array parameter)
   Inserts a new object of type anchor --returns hw_api_object--
insertcollection(array parameter)
   Inserts a new object of type collection --returns hw_api_object--
insertdocument(array parameter)
   Inserts a new object of type document --returns hw_api_object--
link(array parameter)
   Creates a link to an object --returns bool--
lock(array parameter)
   Locks an object --returns bool--
move(array parameter)
   Moves object between collections --returns bool--
hw_api_content(string content, string mimetype)
   Create new instance of class hw_api_content --returns HW_API_Content--
assign(array parameter)
   Clones object --returns bool--
attreditable(array parameter)
   Checks whether an attribute is editable --returns bool--
count(array parameter)
   Returns number of attributes --returns int--
insert(HW_API_Attribute attribute)
   Inserts new attribute --returns bool--
hw_api_object(array parameter)
   Creates a new instance of class hw_api_object --returns hw_api_object--
remove(string name)
   Removes attribute --returns bool--
title(array parameter)
   Returns the title attribute --returns string--
value(string name)
   Returns value of attribute --returns string--
object(array parameter)
   Retrieve attribute information --returns hw_api_object--
objectbyanchor(array parameter)
   Returns the object an anchor belongs to --returns hw_api_object--
parents(array parameter)
   Returns parents of an object --returns array--
description(void)
   Returns description of reason --returns string--
type(void)
   Returns type of reason --returns HW_API_Reason--
remove(array parameter)
   Delete an object --returns bool--
replace(array parameter)
   Replaces an object --returns hw_api_object--
setcommittedversion(array parameter)
   Commits version other than last version --returns hw_api_object--
srcanchors(array parameter)
   Returns a list of all source anchors --returns array--
srcsofdst(array parameter)
   Returns source of a destination object --returns array--
unlock(array parameter)
   Unlocks a locked object --returns bool--
user(array parameter)
   Returns the own user object --returns hw_api_object--
userlist(array parameter)
   Returns a list of all logged in users --returns array--
hypot(float x, float y)
   Calculate the length of the hypotenuse of a right-angle triangle --returns float--
ibase_add_user(resource service_handle, string user_name, string password [, string first_name [, string middle_name [, string last_name ]]])
   Add a user to a security database (only for IB6 or later) --returns bool--
ibase_affected_rows ([ resource link_identifier ])
   Return the number of rows that were affected by the previous query --returns int--
ibase_backup(resource service_handle, string source_db, string dest_file [, int options [, bool verbose ]])
   Initiates a backup task in the service manager and returns immediately --returns mixed--
ibase_blob_add(resource blob_handle, string data)
   Add data into a newly created blob --returns void--
ibase_blob_cancel(resource blob_handle)
   Cancel creating blob --returns bool--
ibase_blob_close(resource blob_handle)
   Close blob --returns mixed--
ibase_blob_create ([ resource link_identifier ])
   Create a new blob for adding data --returns resource--
ibase_blob_echo ([ resource link_identifier ], string blob_id)
   Output blob contents to browser --returns bool--
ibase_blob_get(resource blob_handle, int len)
   Get len bytes data from open blob --returns string--
ibase_blob_import(resource link_identifier, resource file_handle) string ibase_blob_import(resource file_handle)
   Create blob, copy file in it, and close it --returns string--
ibase_blob_info(resource link_identifier, string blob_id) array ibase_blob_info(string blob_id)
   Return blob length and other useful info --returns array--
ibase_blob_open(resource link_identifier, string blob_id) resource ibase_blob_open(string blob_id)
   Open blob for retrieving data parts --returns resource--
ibase_close ([ resource connection_id ])
   Close a connection to an InterBase database --returns bool--
ibase_commit_ret ([ resource link_or_trans_identifier ])
   Commit a transaction without closing it --returns bool--
ibase_commit ([ resource link_or_trans_identifier ])
   Commit a transaction --returns bool--
ibase_connect ([ string database [, string username [, string password [, string charset [, int buffers [, int dialect [, string role [, int sync ]]]]]]]])
   Open a connection to an InterBase database --returns resource--
ibase_db_info(resource service_handle, string db, int action [, int argument ])
   Request statistics about a database --returns string--
ibase_delete_user(resource service_handle, string user_name)
   Delete a user from a security database (only for IB6 or later) --returns bool--
ibase_drop_db ([ resource connection ])
   Drops a database --returns bool--
ibase_errcode(void)
   Return an error code --returns int--
ibase_errmsg(void)
   Return error messages --returns string--
ibase_execute(resource query [, mixed bind_arg [, mixed ... ]])
   Execute a previously prepared query --returns resource--
ibase_fetch_assoc(resource result [, int fetch_flag ])
   Fetch a result row from a query as an associative array --returns array--
ibase_fetch_object(resource result_id [, int fetch_flag ])
   Get an object from a InterBase database --returns object--
ibase_fetch_row(resource result_identifier [, int fetch_flag ])
   Fetch a row from an InterBase database --returns array--
ibase_field_info(resource result, int field_number)
   Get information about a field --returns array--
ibase_free_event_handler(resource event)
   Cancels a registered event handler --returns bool--
ibase_free_query(resource query)
   Free memory allocated by a prepared query --returns bool--
ibase_free_result(resource result_identifier)
   Free a result set --returns bool--
ibase_gen_id(string generator [, int increment [, resource link_identifier ]])
   Increments the named generator and returns its new value --returns mixed--
ibase_maintain_db(resource service_handle, string db, int action [, int argument ])
   Execute a maintenance command on the database server --returns bool--
ibase_modify_user(resource service_handle, string user_name, string password [, string first_name [, string middle_name [, string last_name ]]])
   Modify a user to a security database (only for IB6 or later) --returns bool--
ibase_name_result(resource result, string name)
   Assigns a name to a result set --returns bool--
ibase_num_fields(resource result_id)
   Get the number of fields in a result set --returns int--
ibase_num_params(resource query)
   Return the number of parameters in a prepared query --returns int--
ibase_param_info(resource query, int param_number)
   Return information about a parameter in a prepared query --returns array--
ibase_pconnect ([ string database [, string username [, string password [, string charset [, int buffers [, int dialect [, string role [, int sync ]]]]]]]])
   Open a persistent connection to an InterBase database --returns resource--
ibase_prepare(string query) resource ibase_prepare(resource link_identifier, string query) resource ibase_prepare(resource link_identifier, string trans, string query)
   Prepare a query for later binding of parameter placeholders and execution --returns resource--
ibase_query ([ resource link_identifier ], string query [, int bind_args ])
   Execute a query on an InterBase database --returns resource--
ibase_restore(resource service_handle, string source_file, string dest_db [, int options [, bool verbose ]])
   Initiates a restore task in the service manager and returns immediately --returns mixed--
ibase_rollback_ret ([ resource link_or_trans_identifier ])
   Roll back a transaction without closing it --returns bool--
ibase_rollback ([ resource link_or_trans_identifier ])
   Roll back a transaction --returns bool--
ibase_server_info(resource service_handle, int action)
   Request information about a database server --returns string--
ibase_service_attach(string host, string dba_username, string dba_password)
   Connect to the service manager --returns resource--
ibase_service_detach(resource service_handle)
   Disconnect from the service manager --returns bool--
ibase_set_event_handler(callback event_handler, string event_name1 [, string event_name2 [, string ... ]]) resource ibase_set_event_handler(resource connection, callback event_handler, string event_name1 [, string event_name2 [, string ... ]])
   Register a callback function to be called when events are posted --returns resource--
ibase_timefmt(string format [, int columntype ])
   Sets the format of timestamp, date and time type columns returned from queries --returns bool--
ibase_trans ([ int trans_args [, resource link_identifier ]])
   Begin a transaction --returns resource--
ibase_wait_event(string event_name1 [, string event_name2 [, string ... ]]) string ibase_wait_event(resource connection, string event_name1 [, string event_name2 [, string ... ]])
   Wait for an event to be posted by the database --returns string--
iconv_get_encoding ([ string type ])
   Retrieve internal configuration variables of iconv extension --returns mixed--
iconv_mime_decode_headers(string encoded_headers [, int mode [, string charset ]])
   Decodes multiple MIME header fields at once --returns array--
iconv_mime_decode(string encoded_header [, int mode [, string charset ]])
   Decodes a MIME header field --returns string--
iconv_mime_encode(string field_name, string field_value [, array preferences ])
   Composes a MIME header field --returns string--
iconv_set_encoding(string type, string charset)
   Set current setting for character encoding conversion --returns bool--
iconv_strlen(string str [, string charset ])
   Returns the character count of string --returns int--
iconv_strpos(string haystack, string needle [, int offset [, string charset ]])
   Finds position of first occurrence of a needle within a haystack --returns int--
iconv_strrpos(string haystack, string needle [, string charset ])
   Finds the last occurrence of a needle within a haystack --returns int--
iconv_substr(string str, int offset) string iconv_substr(string str, int offset, int length, string charset)
   Cut out part of a string --returns string--
iconv(string in_charset, string out_charset, string str)
   Convert string to requested character encoding --returns string--
id3_get_frame_long_name(string frameId)
   Get the long name of an ID3v2 frame --returns string--
id3_get_frame_short_name(string frameId)
   Get the short name of an ID3v2 frame --returns string--
id3_get_genre_id(string genre)
   Get the id for a genre --returns int--
id3_get_genre_list(void)
   Get all possible genre values --returns array--
id3_get_genre_name(int genre_id)
   Get the name for a genre id --returns string--
id3_get_tag(string filename [, int version ])
   Get all information stored in an ID3 tag --returns array--
id3_get_version(string filename)
   Get version of an ID3 tag --returns int--
id3_remove_tag(string filename [, int version ])
   Remove an existing ID3 tag --returns bool--
id3_set_tag(string filename, array tag [, int version ])
   Update information stored in an ID3 tag --returns bool--
idate(string format [, int timestamp ])
   Format a local time/date as integer --returns int--
ifx_affected_rows(resource result_id)
   Get number of rows affected by a query --returns int--
ifx_blobinfile_mode(int mode)
   Set the default blob mode for all select queries --returns bool--
ifx_byteasvarchar(int mode)
   Set the default byte mode --returns bool--
ifx_close ([ resource link_identifier ])
   Close Informix connection --returns bool--
ifx_connect ([ string database [, string userid [, string password ]]])
   Open Informix server connection --returns resource--
ifx_copy_blob(int bid)
   Duplicates the given blob object --returns int--
ifx_create_blob(int type, int mode, string param)
   Creates an blob object --returns int--
ifx_create_char(string param)
   Creates an char object --returns int--
ifx_do(resource result_id)
   Execute a previously prepared SQL-statement --returns bool--
ifx_error ([ resource link_identifier ])
   Returns error code of last Informix call --returns string--
ifx_errormsg ([ int errorcode ])
   Returns error message of last Informix call --returns string--
ifx_fetch_row(resource result_id [, mixed position ])
   Get row as an associative array --returns array--
ifx_fieldproperties(resource result_id)
   List of SQL fieldproperties --returns array--
ifx_fieldtypes(resource result_id)
   List of Informix SQL fields --returns array--
ifx_free_blob(int bid)
   Deletes the blob object --returns bool--
ifx_free_char(int bid)
   Deletes the char object --returns bool--
ifx_free_result(resource result_id)
   Releases resources for the query --returns bool--
ifx_get_blob(int bid)
   Return the content of a blob object --returns string--
ifx_get_char(int bid)
   Return the content of the char object --returns string--
ifx_getsqlca(resource result_id)
   Get the contents of sqlca.sqlerrd[0..5] after a query --returns array--
ifx_htmltbl_result(resource result_id [, string html_table_options ])
   Formats all rows of a query into a HTML table --returns int--
ifx_nullformat(int mode)
   Sets the default return value on a fetch row --returns bool--
ifx_num_fields(resource result_id)
   Returns the number of columns in the query --returns int--
ifx_num_rows(resource result_id)
   Count the rows already fetched from a query --returns int--
ifx_pconnect ([ string database [, string userid [, string password ]]])
   Open persistent Informix connection --returns resource--
ifx_prepare(string query, resource link_identifier [, int cursor_def ], mixed blobidarray)
   Prepare an SQL-statement for execution --returns resource--
ifx_query(string query, resource link_identifier [, int cursor_type [, mixed blobidarray ]])
   Send Informix query --returns resource--
ifx_textasvarchar(int mode)
   Set the default text mode --returns bool--
ifx_update_blob(int bid, string content)
   Updates the content of the blob object --returns bool--
ifx_update_char(int bid, string content)
   Updates the content of the char object --returns bool--
ifxus_close_slob(int bid)
   Deletes the slob object --returns bool--
ifxus_create_slob(int mode)
   Creates an slob object and opens it --returns int--
ifxus_free_slob(int bid)
   Deletes the slob object --returns bool--
ifxus_open_slob(int bid, int mode)
   Opens an slob object --returns int--
ifxus_read_slob(int bid, int nbytes)
   Reads nbytes of the slob object --returns string--
ifxus_seek_slob(int bid, int mode, int offset)
   Sets the current file or seek position --returns int--
ifxus_tell_slob(int bid)
   Returns the current file or seek position --returns int--
ifxus_write_slob(int bid, string content)
   Writes a string into the slob object --returns int--
ignore_user_abort ([ bool setting ])
   Set whether a client disconnect should abort script execution --returns int--
iis_add_server(string path, string comment, string server_ip, int port, string host_name, int rights, int start_server)
   Creates a new virtual web server --returns int--
iis_get_dir_security(int server_instance, string virtual_path)
   Gets Directory Security --returns int--
iis_get_script_map(int server_instance, string virtual_path, string script_extension)
   Gets script mapping on a virtual directory for a specific extension --returns string--
iis_get_server_by_comment(string comment)
   Return the instance number associated with the Comment --returns int--
iis_get_server_by_path(string path)
   Return the instance number associated with the Path --returns int--
iis_get_server_rights(int server_instance, string virtual_path)
   Gets server rights --returns int--
iis_get_service_state(string service_id)
   Returns the state for the service defined by ServiceId --returns int--
iis_remove_server(int server_instance)
   Removes the virtual web server indicated by ServerInstance --returns int--
iis_set_app_settings(int server_instance, string virtual_path, string application_scope)
   Creates application scope for a virtual directory --returns int--
iis_set_dir_security(int server_instance, string virtual_path, int directory_flags)
   Sets Directory Security --returns int--
iis_set_script_map(int server_instance, string virtual_path, string script_extension, string engine_path, int allow_scripting)
   Sets script mapping on a virtual directory --returns int--
iis_set_server_rights(int server_instance, string virtual_path, int directory_flags)
   Sets server rights --returns int--
iis_start_server(int server_instance)
   Starts the virtual web server --returns int--
iis_start_service(string service_id)
   Starts the service defined by ServiceId --returns int--
iis_stop_server(int server_instance)
   Stops the virtual web server --returns int--
iis_stop_service(string service_id)
   Stops the service defined by ServiceId --returns int--
image_type_to_extension(int imagetype [, bool include_dot ])
   Get file extension for image type --returns string--
image_type_to_mime_type(int imagetype)
   Get Mime-Type for image-type returned by getimagesize, exif_read_data, exif_thumbnail, exif_imagetype --returns string--
image2wbmp(resource image [, string filename [, int threshold ]])
   Output image to browser or file --returns bool--
imagealphablending(resource image, bool blendmode)
   Set the blending mode for an image --returns bool--
imageantialias(resource image, bool enabled)
   Should antialias functions be used or not --returns bool--
imagearc(resource image, int cx, int cy, int width, int height, int start, int end, int color)
   Draws an arc --returns bool--
imagechar(resource image, int font, int x, int y, string c, int color)
   Draw a character horizontally --returns bool--
imagecharup(resource image, int font, int x, int y, string c, int color)
   Draw a character vertically --returns bool--
imagecolorallocate(resource image, int red, int green, int blue)
   Allocate a color for an image --returns int--
imagecolorallocatealpha(resource image, int red, int green, int blue, int alpha)
   Allocate a color for an image --returns int--
imagecolorat(resource image, int x, int y)
   Get the index of the color of a pixel --returns int--
imagecolorclosest(resource image, int red, int green, int blue)
   Get the index of the closest color to the specified color --returns int--
imagecolorclosestalpha(resource image, int red, int green, int blue, int alpha)
   Get the index of the closest color to the specified color + alpha --returns int--
imagecolorclosesthwb(resource image, int red, int green, int blue)
   Get the index of the color which has the hue, white and blackness --returns int--
imagecolordeallocate(resource image, int color)
   De-allocate a color for an image --returns bool--
imagecolorexact(resource image, int red, int green, int blue)
   Get the index of the specified color --returns int--
imagecolorexactalpha(resource image, int red, int green, int blue, int alpha)
   Get the index of the specified color + alpha --returns int--
imagecolormatch(resource image1, resource image2)
   Makes the colors of the palette version of an image more closely match the true color version --returns bool--
imagecolorresolve(resource image, int red, int green, int blue)
   Get the index of the specified color or its closest possible alternative --returns int--
imagecolorresolvealpha(resource image, int red, int green, int blue, int alpha)
   Get the index of the specified color + alpha or its closest possible alternative --returns int--
imagecolorset(resource image, int index, int red, int green, int blue)
   Set the color for the specified palette index --returns void--
imagecolorsforindex(resource image, int index)
   Get the colors for an index --returns array--
imagecolorstotal(resource image)
   Find out the number of colors in an image's palette --returns int--
imagecolortransparent(resource image [, int color ])
   Define a color as transparent --returns int--
imageconvolution(resource image, array matrix, float div, float offset)
   Apply a 3x3 convolution matrix, using coefficient and offset --returns bool--
imagecopy(resource dst_im, resource src_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h)
   Copy part of an image --returns bool--
imagecopymerge(resource dst_im, resource src_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h, int pct)
   Copy and merge part of an image --returns bool--
imagecopymergegray(resource dst_im, resource src_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h, int pct)
   Copy and merge part of an image with gray scale --returns bool--
imagecopyresampled(resource dst_image, resource src_image, int dst_x, int dst_y, int src_x, int src_y, int dst_w, int dst_h, int src_w, int src_h)
   Copy and resize part of an image with resampling --returns bool--
imagecopyresized(resource dst_image, resource src_image, int dst_x, int dst_y, int src_x, int src_y, int dst_w, int dst_h, int src_w, int src_h)
   Copy and resize part of an image --returns bool--
imagecreate(int width, int height)
   Create a new palette based image --returns resource--
imagecreatefromgd(string filename)
   Create a new image from GD file or URL --returns resource--
imagecreatefromgd2(string filename)
   Create a new image from GD2 file or URL --returns resource--
imagecreatefromgd2part(string filename, int srcX, int srcY, int width, int height)
   Create a new image from a given part of GD2 file or URL --returns resource--
imagecreatefromgif(string filename)
   Create a new image from file or URL --returns resource--
imagecreatefromjpeg(string filename)
   Create a new image from file or URL --returns resource--
imagecreatefrompng(string filename)
   Create a new image from file or URL --returns resource--
imagecreatefromstring(string data)
   Create a new image from the image stream in the string --returns resource--
imagecreatefromwbmp(string filename)
   Create a new image from file or URL --returns resource--
imagecreatefromxbm(string filename)
   Create a new image from file or URL --returns resource--
imagecreatefromxpm(string filename)
   Create a new image from file or URL --returns resource--
imagecreatetruecolor(int width, int height)
   Create a new true color image --returns resource--
imagedashedline(resource image, int x1, int y1, int x2, int y2, int color)
   Draw a dashed line --returns bool--
imagedestroy(resource image)
   Destroy an image --returns bool--
imageellipse(resource image, int cx, int cy, int width, int height, int color)
   Draw an ellipse --returns bool--
imagefill(resource image, int x, int y, int color)
   Flood fill --returns bool--
imagefilledarc(resource image, int cx, int cy, int width, int height, int start, int end, int color, int style)
   Draw a partial arc and fill it --returns bool--
imagefilledellipse(resource image, int cx, int cy, int width, int height, int color)
   Draw a filled ellipse --returns bool--
imagefilledpolygon(resource image, array points, int num_points, int color)
   Draw a filled polygon --returns bool--
imagefilledrectangle(resource image, int x1, int y1, int x2, int y2, int color)
   Draw a filled rectangle --returns bool--
imagefilltoborder(resource image, int x, int y, int border, int color)
   Flood fill to specific color --returns bool--
imagefilter(resource image, int filtertype [, int arg1 [, int arg2 [, int arg3 [, int arg4 ]]]])
   Applies a filter to an image --returns bool--
imagefontheight(int font)
   Get font height --returns int--
imagefontwidth(int font)
   Get font width --returns int--
imageftbbox(float size, float angle, string fontfile, string text [, array extrainfo ])
   Give the bounding box of a text using fonts via freetype2 --returns array--
imagefttext(resource image, float size, float angle, int x, int y, int color, string fontfile, string text [, array extrainfo ])
   Write text to the image using fonts using FreeType 2 --returns array--
imagegammacorrect(resource image, float inputgamma, float outputgamma)
   Apply a gamma correction to a GD image --returns bool--
imagegd(resource image [, string filename ])
   Output GD image to browser or file --returns bool--
imagegd2(resource image [, string filename [, int chunk_size [, int type ]]])
   Output GD2 image to browser or file --returns bool--
imagegif(resource image [, string filename ])
   Output image to browser or file --returns bool--
imagegrabscreen(void)
   Captures the whole screen --returns resource--
imagegrabwindow(int window [, int client_area ])
   Captures a window --returns resource--
imageinterlace(resource image [, int interlace ])
   Enable or disable interlace --returns int--
imageistruecolor(resource image)
   Finds whether an image is a truecolor image --returns bool--
imagejpeg(resource image [, string filename [, int quality ]])
   Output image to browser or file --returns bool--
imagelayereffect(resource image, int effect)
   Set the alpha blending flag to use the bundled libgd layering effects --returns bool--
imageline(resource image, int x1, int y1, int x2, int y2, int color)
   Draw a line --returns bool--
imageloadfont(string file)
   Load a new font --returns int--
imagepalettecopy(resource destination, resource source)
   Copy the palette from one image to another --returns void--
imagepng(resource image [, string filename [, int quality [, int filters ]]])
   Output a PNG image to either the browser or a file --returns bool--
imagepolygon(resource image, array points, int num_points, int color)
   Draws a polygon --returns bool--
imagepsbbox(string text, resource font, int size) array imagepsbbox(string text, resource font, int size, int space, int tightness, float angle)
   Give the bounding box of a text rectangle using PostScript Type1 fonts --returns array--
imagepsencodefont(resource font_index, string encodingfile)
   Change the character encoding vector of a font --returns bool--
imagepsextendfont(int font_index, float extend)
   Extend or condense a font --returns bool--
imagepsfreefont(resource font_index)
   Free memory used by a PostScript Type 1 font --returns bool--
imagepsloadfont(string filename)
   Load a PostScript Type 1 font from file --returns resource--
imagepsslantfont(resource font_index, float slant)
   Slant a font --returns bool--
imagepstext(resource image, string text, resource font_index, int size, int foreground, int background, int x, int y [, int space [, int tightness [, float angle [, int antialias_steps ]]]])
   Draws a text over an image using PostScript Type1 fonts --returns array--
imagerectangle(resource image, int x1, int y1, int x2, int y2, int color)
   Draw a rectangle --returns bool--
imagerotate(resource image, float angle, int bgd_color [, int ignore_transparent ])
   Rotate an image with a given angle --returns resource--
imagesavealpha(resource image, bool saveflag)
   Set the flag to save full alpha channel information (as opposed to single-color transparency) when saving PNG images --returns bool--
imagesetbrush(resource image, resource brush)
   Set the brush image for line drawing --returns bool--
imagesetpixel(resource image, int x, int y, int color)
   Set a single pixel --returns bool--
imagesetstyle(resource image, array style)
   Set the style for line drawing --returns bool--
imagesetthickness(resource image, int thickness)
   Set the thickness for line drawing --returns bool--
imagesettile(resource image, resource tile)
   Set the tile image for filling --returns bool--
imagestring(resource image, int font, int x, int y, string string, int color)
   Draw a string horizontally --returns bool--
imagestringup(resource image, int font, int x, int y, string string, int color)
   Draw a string vertically --returns bool--
imagesx(resource image)
   Get image width --returns int--
imagesy(resource image)
   Get image height --returns int--
imagetruecolortopalette(resource image, bool dither, int ncolors)
   Convert a true color image to a palette image --returns bool--
imagettfbbox(float size, float angle, string fontfile, string text)
   Give the bounding box of a text using TrueType fonts --returns array--
imagettftext(resource image, float size, float angle, int x, int y, int color, string fontfile, string text)
   Write text to the image using TrueType fonts --returns array--
imagetypes(void)
   Return the image types supported by this PHP build --returns int--
imagewbmp(resource image [, string filename [, int foreground ]])
   Output image to browser or file --returns bool--
imagexbm(resource image, string filename [, int foreground ])
   Output XBM image to browser or file --returns bool--
Imagick::adaptiveBlurImage(float radius, float sigma [, int channel ])
   Adds adaptive blur filter to image --returns bool--
Imagick::adaptiveResizeImage(int columns, int rows [, bool fit ])
   Adaptively resize image with data dependent triangulation --returns bool--
Imagick::adaptiveSharpenImage(float radius, float sigma [, int channel ])
   Adaptively sharpen the image --returns bool--
Imagick::adaptiveThresholdImage(int width, int height, int offset)
   Selects a threshold for each pixel based on a range of intensity --returns bool--
Imagick::addImage(Imagick source)
   Adds new image to Imagick object image list --returns bool--
Imagick::addNoiseImage(int noise_type [, int channel ])
   Adds random noise to the image --returns bool--
Imagick::affineTransformImage(ImagickDraw matrix)
   Transforms an image --returns bool--
Imagick::annotateImage(ImagickDraw draw_settings, float x, float y, float angle, string text)
   Annotates an image with text --returns bool--
Imagick::appendImages(bool stack)
   Append a set of images --returns Imagick--
Imagick::averageImages(void)
   Average a set of images --returns Imagick--
Imagick::blackThresholdImage(mixed threshold)
   Forces all pixels below the threshold into black --returns bool--
Imagick::blurImage(float radius, float sigma [, int channel ])
   Adds blur filter to image --returns bool--
Imagick::borderImage(mixed bordercolor, int width, int height)
   Surrounds the image with a border --returns bool--
Imagick::charcoalImage(float radius, float sigma)
   Simulates a charcoal drawing --returns bool--
Imagick::chopImage(int width, int height, int x, int y)
   Removes a region of an image and trims --returns bool--
Imagick::clear(void)
   Clears all resources associated to Imagick object --returns bool--
Imagick::clipImage(void)
   Clips along the first path from the 8BIM profile --returns bool--
Imagick::clipPathImage(string pathname, bool inside)
   Clips along the named paths from the 8BIM profile --returns bool--
Imagick::clone(void)
   Makes an exact copy of the Imagick object --returns Imagick--
Imagick::clutImage(Imagick lookup_table [, int channel ])
   Replaces colors in the image from a color lookup table --returns bool--
Imagick::coalesceImages(void)
   Composites a set of images --returns Imagick--
Imagick::colorFloodfillImage(mixed fill, float fuzz, mixed bordercolor, int x, int y)
   Changes the color value of any pixel that matches target --returns bool--
Imagick::colorizeImage(mixed colorize, mixed opacity)
   Blends the fill color with the image --returns bool--
Imagick::combineImages(int channelType)
   Combines one or more images into a single image --returns Imagick--
Imagick::commentImage(string comment)
   Adds a comment to your image --returns bool--
Imagick::compareImageChannels(Imagick image, int channelType, int metricType)
   Returns the difference in one or more images --returns Imagick--
Imagick::compareImageLayers(int method)
   Returns the maximum bounding region between images --returns Imagick--
Imagick::compareImages(Imagick compare, int metric)
   Compares an image to a reconstructed image --returns array--
Imagick::compositeImage(Imagick composite_object, int composite, int x, int y [, int channel ])
   Composite one image onto another --returns bool--
Imagick::__construct ([ mixed files ])
   The Imagick constructor --returns Imagick--
Imagick::contrastImage(bool sharpen)
   Change the contrast of the image --returns bool--
Imagick::contrastStretchImage(float black_point, float white_point [, int channel ])
   Enhances the contrast of a color image --returns bool--
Imagick::convolveImage(array kernel [, int channel ])
   Applies a custom convolution kernel to the image --returns bool--
Imagick::cropImage(int width, int height, int x, int y)
   Extracts a region of the image --returns bool--
Imagick::cropThumbnailImage(int width, int height)
   Creates a crop thumbnail --returns bool--
Imagick::current(void)
   Returns a reference to the current Imagick object --returns Imagick--
Imagick::cycleColormapImage(int displace)
   Displaces an image's colormap --returns bool--
Imagick::deconstructImages(void)
   Returns certain pixel differences between images --returns bool--
Imagick::despeckleImage(void)
   Reduces the speckle noise in an image --returns bool--
Imagick::destroy(void)
   Destroys the Imagick object --returns bool--
Imagick::displayImage(string servername)
   Displays an image --returns bool--
Imagick::displayImages(string servername)
   Displays an image or image sequence --returns bool--
Imagick::distortImage(int method, array arguments, bool bestfit)
   Distorts an image using various distortion methods --returns bool--
Imagick::drawImage(ImagickDraw draw)
   Renders the ImagickDraw object on the current image --returns bool--
Imagick::edgeImage(float radius)
   Enhance edges within the image --returns bool--
Imagick::embossImage(float radius, float sigma)
   Returns a grayscale image with a three-dimensional effect --returns bool--
Imagick::enhanceImage(void)
   Improves the quality of a noisy image --returns bool--
Imagick::equalizeImage(void)
   Equalizes the image histogram --returns bool--
Imagick::evaluateImage(int op, float constant [, int channel ])
   Applies an expression to an image --returns bool--
Imagick::flattenImages(void)
   Merges a sequence of images --returns Imagick--
Imagick::flipImage(void)
   Creates a vertical mirror image --returns bool--
Imagick::flopImage(void)
   Creates a horizontal mirror image --returns bool--
Imagick::frameImage(mixed matte_color, int width, int height, int inner_bevel, int outer_bevel)
   Adds a simulated three-dimensional border --returns bool--
Imagick::fxImage(string expression [, int channel ])
   Evaluate expression for each pixel in the image --returns Imagick--
Imagick::gammaImage(float gamma [, int channel ])
   Gamma-corrects an image --returns bool--
Imagick::gaussianBlurImage(float radius, float sigma [, int channel ])
   Blurs an image --returns bool--
Imagick::getCompression(void)
   Gets the object compression type --returns int--
Imagick::getCompressionQuality(void)
   Gets the object compression quality --returns int--
Imagick::getCopyright(void)
   Returns the ImageMagick API copyright as a string --returns string--
Imagick::getFilename(void)
   The filename associated with an image sequence --returns string--
Imagick::getFormat(void)
   Returns the format of the Imagick object --returns string--
Imagick::getHomeURL(void)
   Returns the ImageMagick home URL --returns string--
Imagick::getImage(void)
   Returns a new Imagick object --returns Imagick--
Imagick::getImageBackgroundColor(void)
   Returns the image background color --returns ImagickPixel--
Imagick::getImageBlob(void)
   Returns the image sequence as a blob --returns string--
Imagick::getImageBluePrimary(float x, float y)
   Returns the chromaticy blue primary point --returns ImagickPixel--
Imagick::getImageBorderColor(void)
   Returns the image border color --returns ImagickPixel--
Imagick::getImageChannelDepth(int channelType)
   Gets the depth for a particular image channel --returns int--
Imagick::getImageChannelDistortion(Imagick reference, int channel, int metric)
   Compares image channels of an image to a reconstructed image --returns float--
Imagick::getImageChannelExtrema(int channel)
   Gets the extrema for one or more image channels --returns array--
Imagick::getImageChannelMean(int channel)
   Gets the mean and standard deviation --returns array--
Imagick::getImageChannelStatistics(void)
   Returns statistics for each channel in the image --returns array--
Imagick::getImageColormapColor(int index)
   Returns the color of the specified colormap index --returns ImagickPixel--
Imagick::getImageColors(void)
   Gets the number of unique colors in the image --returns int--
Imagick::getImageColorspace(void)
   Gets the image colorspace --returns int--
Imagick::getImageCompose(void)
   Returns the composite operator associated with the image --returns int--
Imagick::getImageDelay(void)
   Gets the image delay --returns int--
Imagick::getImageDepth(void)
   Gets the image depth --returns int--
Imagick::getImageDispose(void)
   Gets the image disposal method --returns int--
Imagick::getImageDistortion(MagickWand reference, int metric)
   Compares an image to a reconstructed image --returns float--
Imagick::getImageExtrema(void)
   Gets the extrema for the image --returns array--
Imagick::getImageFilename(void)
   Returns the filename of a particular image in a sequence --returns string--
Imagick::getImageFormat(void)
   Returns the format of a particular image in a sequence --returns string--
Imagick::getImageGamma(void)
   Gets the image gamma --returns float--
Imagick::getImageGeometry(void)
   Gets the width and height as an associative array --returns array--
Imagick::getImageGreenPrimary(void)
   Returns the chromaticy green primary point --returns array--
Imagick::getImageHeight(void)
   Returns the image height --returns int--
Imagick::getImageHistogram(void)
   Gets the image histogram --returns array--
Imagick::getImageIndex(void)
   Gets the index of the current active image --returns int--
Imagick::getImageInterlaceScheme(void)
   Gets the image interlace scheme --returns int--
Imagick::getImageInterpolateMethod(void)
   Returns the interpolation method --returns int--
Imagick::getImageIterations(void)
   Gets the image iterations --returns int--
Imagick::getImageLength(void)
   Returns the image length in bytes --returns int--
Imagick::getImageMagickLicense(void)
   Returns a string containing the ImageMagick license --returns string--
Imagick::getImageMatte(void)
   Return if the image has a matte channel --returns int--
Imagick::getImageMatteColor(void)
   Returns the image matte color --returns ImagickPixel--
Imagick::getImageOrientation(void)
   Gets the image orientation. --returns int--
Imagick::getImagePage(void)
   Returns the page geometry --returns array--
Imagick::getImagePixelColor(int x, int y)
   Returns the color of the specified pixel --returns ImagickPixel--
Imagick::getImageProfile(string name)
   Returns the named image profile --returns string--
Imagick::getImageProfiles ([ string pattern [, bool only_names ]])
   Returns the image profiles --returns array--
Imagick::getImageProperties ([ string pattern [, bool only_names ]])
   Returns the image properties --returns array--
Imagick::getImageProperty(string name)
   Returns the named image property --returns string--
Imagick::getImageRedPrimary(void)
   Returns the chromaticy red primary point --returns array--
Imagick::getImageRegion(int width, int height, int x, int y)
   Extracts a region of the image --returns Imagick--
Imagick::getImageRenderingIntent(void)
   Gets the image rendering intent --returns int--
Imagick::getImageResolution(void)
   Gets the image X and Y resolution --returns array--
Imagick::getImageScene(void)
   Gets the image scene --returns int--
Imagick::getImageSignature(void)
   Generates an SHA-256 message digest --returns string--
Imagick::getImageSize(void)
   Returns the image length in bytes --returns int--
Imagick::getImageTicksPerSecond(void)
   Gets the image ticks-per-second --returns int--
Imagick::getImageTotalInkDensity(void)
   Gets the image total ink density --returns float--
Imagick::getImageType(void)
   Gets the potential image type --returns int--
Imagick::getImageUnits(void)
   Gets the image units of resolution --returns int--
Imagick::getImageVirtualPixelMethod(void)
   Returns the virtual pixel method --returns int--
Imagick::getImageWhitePoint(void)
   Returns the chromaticy white point --returns array--
Imagick::getImageWidth(void)
   Returns the image width --returns int--
Imagick::getInterlaceScheme(void)
   Gets the object interlace scheme --returns int--
Imagick::getIteratorIndex(void)
   Gets the index of the current active image --returns int--
Imagick::getNumberImages(void)
   Returns the number of images in the object --returns int--
Imagick::getOption(string key)
   Returns a value associated with the specified key --returns string--
Imagick::getPackageName(void)
   Returns the ImageMagick package name --returns string--
Imagick::getPage(void)
   Returns the page geometry --returns array--
Imagick::getPixelIterator(void)
   Returns a MagickPixelIterator --returns ImagickPixelIterator--
Imagick::getPixelRegionIterator(int x, int y, int columns, int rows)
   Get an ImagickPixelIterator for an image section --returns ImagickPixelIterator--
Imagick::getQuantumDepth(void)
   Gets the quantum depth --returns array--
Imagick::getQuantumRange(void)
   Returns the Imagick quantum range --returns array--
Imagick::getReleaseDate(void)
   Returns the ImageMagick release date --returns string--
Imagick::getResource(int type)
   Returns the specified resource's memory usage --returns int--
Imagick::getResourceLimit(int type)
   Returns the specified resource limit --returns int--
Imagick::getSamplingFactors(void)
   Gets the horizontal and vertical sampling factor --returns array--
Imagick::getSize(void)
   Returns the size associated with the Imagick object --returns array--
Imagick::getSizeOffset(void)
   Returns the size offset --returns int--
Imagick::getVersion(void)
   Returns the ImageMagick API version --returns array--
Imagick::hasNextImage(void)
   Checks if the object has more images --returns bool--
Imagick::hasPreviousImage(void)
   Checks if the object has a previous image --returns bool--
Imagick::identifyImage ([ bool appendRawOutput ])
   Identifies an image and fetches attributes --returns array--
Imagick::implodeImage(float radius)
   Creates a new image as a copy --returns bool--
Imagick::labelImage(string label)
   Adds a label to an image --returns bool--
Imagick::levelImage(float blackPoint, float gamma, float whitePoint [, int channel ])
   Adjusts the levels of an image --returns bool--
Imagick::linearStretchImage(float blackPoint, float whitePoint)
   Stretches with saturation the image intensity --returns bool--
Imagick::magnifyImage(void)
   Scales an image proportionally 2x --returns bool--
Imagick::mapImage(Imagick map, bool dither)
   Replaces the colors of an image with the closest color from a reference image. --returns bool--
Imagick::matteFloodfillImage(float alpha, float fuzz, mixed bordercolor, int x, int y)
   Changes the transparency value of a color --returns bool--
Imagick::medianFilterImage(float radius)
   Applies a digital filter --returns bool--
Imagick::minifyImage(void)
   Scales an image proportionally to half its size --returns bool--
Imagick::modulateImage(float brightness, float saturation, float hue)
   Control the brightness, saturation, and hue --returns bool--
Imagick::montageImage(ImagickDraw draw, string tile_geometry, string thumbnail_geometry, int mode, string frame)
   Creates a composite image --returns Imagick--
Imagick::morphImages(int number_frames)
   Method morphs a set of images --returns Imagick--
Imagick::mosaicImages(void)
   Forms a mosaic from images --returns Imagick--
Imagick::motionBlurImage(float radius, float sigma, float angle)
   Simulates motion blur --returns bool--
Imagick::negateImage(bool gray [, int channel ])
   Negates the colors in the reference image --returns bool--
Imagick::newImage(int cols, int rows, mixed background [, string format ])
   Creates a new image --returns bool--
Imagick::newPseudoImage(int columns, int rows, string pseudoString)
   Creates a new image --returns bool--
Imagick::nextImage(void)
   Moves to the next image --returns bool--
Imagick::normalizeImage ([ int channel ])
   Enhances the contrast of a color image --returns bool--
Imagick::oilPaintImage(float radius)
   Simulates an oil painting --returns bool--
Imagick::optimizeImageLayers(void)
   Removes repeated portions of images to optimize --returns bool--
Imagick::paintFloodfillImage(mixed fill, float fuzz, mixed bordercolor, int x, int y)
   Changes the color value of any pixel that matches target --returns bool--
Imagick::paintOpaqueImage(mixed target, mixed fill, float fuzz [, int channel ])
   Change any pixel that matches color --returns bool--
Imagick::paintTransparentImage(mixed target, float alpha, float fuzz)
   Changes any pixel that matches color with the color defined by fill --returns bool--
Imagick::pingImage(string filename)
   Fetch basic attributes about the image --returns bool--
Imagick::pingImageBlob(string image)
   Quickly fetch attributes --returns bool--
Imagick::pingImageFile(resource filehandle [, string fileName ])
   Get basic image attributes in a lightweight manner --returns bool--
Imagick::polaroidImage(ImagickDraw properties, float angle)
   Simulates a Polaroid picture --returns bool--
Imagick::posterizeImage(int levels, bool dither)
   Reduces the image to a limited number of color level --returns bool--
Imagick::previewImages(int preview)
   Quickly pin-point appropriate parameters for image processing --returns bool--
Imagick::previousImage(void)
   Move to the previous image in the object --returns bool--
Imagick::profileImage(string name, string profile)
   Adds or removes a profile from an image --returns bool--
Imagick::quantizeImage(int numberColors, int colorspace, int treedepth, bool dither, bool measureError)
   Analyzes the colors within a reference image --returns bool--
Imagick::quantizeImages(int numberColors, int colorspace, int treedepth, bool dither, bool measureError)
   Analyzes the colors within a sequence of images --returns bool--
Imagick::queryFontMetrics(ImagickDraw properties, string text [, bool multiline ])
   Returns an array representing the font metrics --returns array--
Imagick::queryFonts ([ string pattern ])
   Returns the configured fonts --returns array--
Imagick::queryFormats ([ string pattern ])
   Returns formats supported by Imagick --returns array--
Imagick::radialBlurImage(float angle [, int channel ])
   Radial blurs an image --returns bool--
Imagick::raiseImage(int width, int height, int x, int y, bool raise)
   Creates a simulated 3d button-like effect --returns bool--
Imagick::randomThresholdImage(float low, float high [, int channel ])
   Creates a high-contrast, two-color image --returns bool--
Imagick::readImage(string filename)
   Reads image from filename --returns bool--
Imagick::readImageBlob(string image [, string filename ])
   Reads image from a binary string --returns bool--
Imagick::readImageFile(resource filehandle [, string fileName ])
   Reads image from open filehandle --returns bool--
Imagick::reduceNoiseImage(float radius)
   Smooths the contours of an image --returns bool--
Imagick::removeImage(void)
   Removes an image from the image list --returns bool--
Imagick::removeImageProfile(string name)
   Removes the named image profile and returns it --returns string--
Imagick::render(void)
   Renders all preceding drawing commands --returns bool--
Imagick::resampleImage(float x_resolution, float y_resolution, int filter, float blur)
   Resample image to desired resolution --returns bool--
Imagick::resizeImage(int columns, int rows, int filter, float blur [, bool fit ])
   Scales an image --returns bool--
Imagick::rollImage(int x, int y)
   Offsets an image --returns bool--
Imagick::rotateImage(mixed background, float degrees)
   Rotates an image --returns bool--
Imagick::roundCorners(float x_rounding, float y_rounding [, float stroke_width [, float displace [, float size_correction ]]])
   Rounds image corners --returns bool--
Imagick::sampleImage(int columns, int rows)
   Scales an image with pixel sampling --returns bool--
Imagick::scaleImage(int cols, int rows [, bool fit ])
   Scales the size of an image --returns bool--
Imagick::separateImageChannel(int channel)
   Separates a channel from the image --returns bool--
Imagick::sepiaToneImage(float threshold)
   Sepia tones an image --returns bool--
Imagick::setBackgroundColor(mixed background)
   Sets the object's default background color --returns bool--
Imagick::setCompression(int compression)
   Sets the object's default compression type --returns bool--
Imagick::setCompressionQuality(int quality)
   Sets the object's default compression quality --returns bool--
Imagick::setFilename(string filename)
   Sets the filename before you read or write the image --returns bool--
Imagick::setFirstIterator(void)
   Sets the Imagick iterator to the first image --returns bool--
Imagick::setFont(string font)
   Sets the image bias for any method that convolves an image --returns bool--
Imagick::setFormat(string format)
   Sets the format of the Imagick object --returns bool--
Imagick::setImage(Imagick replace)
   Replaces image in the object --returns bool--
Imagick::setImageBackgroundColor(mixed background)
   Sets the image background color --returns bool--
Imagick::setImageBias(float bias)
   Sets the image bias for any method that convolves an image --returns bool--
Imagick::setImageBluePrimary(float x, float y)
   Sets the image chromaticity blue primary point --returns bool--
Imagick::setImageBorderColor(mixed border)
   Sets the image border color --returns bool--
Imagick::setImageChannelDepth(int channel, int depth)
   Sets the depth of a particular image channel --returns bool--
Imagick::setImageColormapColor(int index, ImagickPixel color)
   Sets the color of the specified colormap index --returns bool--
Imagick::setImageColorspace(int colorspace)
   Sets the image colorspace --returns bool--
Imagick::setImageCompose(int compose)
   Sets the image composite operator --returns bool--
Imagick::setImageCompression(int compression)
   Sets the image compression --returns bool--
Imagick::setImageDelay(int delay)
   Sets the image delay --returns bool--
Imagick::setImageDepth(int depth)
   Sets the image depth --returns bool--
Imagick::setImageDispose(int dispose)
   Sets the image disposal method --returns bool--
Imagick::setImageExtent(int columns, int rows)
   Sets the image size --returns bool--
Imagick::setImageFilename(string filename)
   Sets the filename of a particular image --returns bool--
Imagick::setImageFormat(string format)
   Sets the format of a particular image --returns bool--
Imagick::setImageGamma(float gamma)
   Sets the image gamma --returns bool--
Imagick::setImageGreenPrimary(float x, float y)
   Sets the image chromaticity green primary point --returns bool--
Imagick::setImageIndex(int index)
   Set the iterator position --returns bool--
Imagick::setImageInterlaceScheme(int interlace_scheme)
   Sets the image compression --returns bool--
Imagick::setImageInterpolateMethod(int method)
   Sets the image interpolate pixel method --returns bool--
Imagick::setImageIterations(int iterations)
   Sets the image iterations --returns bool--
Imagick::setImageMatte(bool matte)
   Sets the image matte channel --returns bool--
Imagick::setImageMatteColor(mixed matte)
   Sets the image matte color --returns bool--
Imagick::setImageOpacity(float opacity)
   Sets the image opacity level --returns bool--
Imagick::setImageOrientation(int orientation)
   Sets the image orientation. --returns bool--
Imagick::setImagePage(int width, int height, int x, int y)
   Sets the page geometry of the image --returns bool--
Imagick::setImageProfile(string name, string profile)
   Adds a named profile to the Imagick object --returns bool--
Imagick::setImageProperty(string name, string value)
   Sets an image property --returns bool--
Imagick::setImageRedPrimary(float x, float y)
   Sets the image chromaticity red primary point --returns bool--
Imagick::setImageRenderingIntent(int rendering_intent)
   Sets the image rendering intent --returns bool--
Imagick::setImageResolution(float x_resolution, float y_resolution)
   Sets the image resolution --returns bool--
Imagick::setImageScene(int scene)
   Sets the image scene --returns bool--
Imagick::setImageTicksPerSecond(int ticks_per-second)
   Sets the image ticks-per-second --returns bool--
Imagick::setImageType(int image_type)
   Sets the image type --returns bool--
Imagick::setImageUnits(int units)
   Sets the image units of resolution --returns bool--
Imagick::setImageVirtualPixelMethod(int method)
   Sets the image virtual pixel method --returns bool--
Imagick::setImageWhitePoint(float x, float y)
   Sets the image chromaticity white point --returns bool--
Imagick::setInterlaceScheme(int interlace_scheme)
   Sets the image compression --returns bool--
Imagick::setIteratorIndex(int index)
   Set the iterator position --returns bool--
Imagick::setLastIterator(void)
   Sets the Imagick iterator to the last image --returns bool--
Imagick::setOption(string key, string value)
   Set an option --returns bool--
Imagick::setPage(int width, int height, int x, int y)
   Sets the page geometry of the Imagick object --returns bool--
Imagick::setResolution(float x_resolution, float y_resolution)
   Sets the image resolution --returns bool--
Imagick::setResourceLimit(int type, int limit)
   Sets the limit for a particular resource in megabytes --returns bool--
Imagick::setSamplingFactors(array factors)
   Sets the image sampling factors --returns bool--
Imagick::setSize(int columns, int rows)
   Sets the size of the Imagick object --returns bool--
Imagick::setSizeOffset(int columns, int rows, int offset)
   Sets the size and offset of the Imagick object --returns bool--
Imagick::setType(int image_type)
   Sets the image type attribute --returns bool--
Imagick::shadeImage(bool gray, float azimuth, float elevation)
   Creates a 3D effect --returns bool--
Imagick::shadowImage(float opacity, float sigma, int x, int y)
   Simulates an image shadow --returns bool--
Imagick::sharpenImage(float radius, float sigma [, int channel ])
   Sharpens an image --returns bool--
Imagick::shaveImage(int columns, int rows)
   Shaves pixels from the image edges --returns bool--
Imagick::shearImage(mixed background, float x_shear, float y_shear)
   Creating a parallelogram --returns bool--
Imagick::sigmoidalContrastImage(bool sharpen, float alpha, float beta [, int channel ])
   Adjusts the contrast of an image --returns bool--
Imagick::sketchImage(float radius, float sigma, float angle)
   Simulates a pencil sketch --returns bool--
Imagick::solarizeImage(int threshold)
   Applies a solarizing effect to the image --returns bool--
Imagick::spliceImage(int width, int height, int x, int y)
   Splices a solid color into the image --returns bool--
Imagick::spreadImage(float radius)
   Randomly displaces each pixel in a block --returns bool--
Imagick::steganoImage(Imagick watermark_wand, int offset)
   Hides a digital watermark within the image --returns Imagick--
Imagick::stereoImage(Imagick offset_wand)
   Composites two images --returns bool--
Imagick::stripImage(void)
   Strips an image of all profiles and comments --returns bool--
Imagick::swirlImage(float degrees)
   Swirls the pixels about the center of the image --returns bool--
Imagick::textureImage(Imagick texture_wand)
   Repeatedly tiles the texture image --returns bool--
Imagick::thresholdImage(float threshold [, int channel ])
   Changes the value of individual pixels based on a threshold --returns bool--
Imagick::thumbnailImage(int columns, int rows [, bool fit ])
   Changes the size of an image --returns bool--
Imagick::tintImage(mixed tint, mixed opacity)
   Applies a color vector to each pixel in the image --returns bool--
Imagick::transformImage(string crop, string geometry)
   Convenience method for setting crop size and the image geometry --returns Imagick--
Imagick::transverseImage(void)
   Creates a horizontal mirror image --returns bool--
Imagick::trimImage(float fuzz)
   Remove edges from the image --returns bool--
Imagick::uniqueImageColors(void)
   Discards all but one of any pixel color --returns bool--
Imagick::unsharpMaskImage(float radius, float sigma, float amount, float threshold [, int channel ])
   Sharpens an image --returns bool--
Imagick::valid(void)
   Checks if the current item is valid --returns bool--
Imagick::vignetteImage(float blackPoint, float whitePoint, int x, int y)
   Adds vignette filter to the image --returns bool--
Imagick::waveImage(float amplitude, float length)
   Adds wave filter to the image --returns bool--
Imagick::whiteThresholdImage(mixed threshold)
   Force all pixels above the threshold into white --returns bool--
Imagick::writeImage ([ string filename ])
   Writes an image to the specified filename --returns bool--
Imagick::writeImages(string filename, bool adjoin)
   Writes an image or image sequence --returns bool--
ImagickDraw::affine(array affine)
   Adjusts the current affine transformation matrix --returns bool--
ImagickDraw::annotation(float x, float y, string text)
   Draws text on the image --returns bool--
ImagickDraw::arc(float sx, float sy, float ex, float ey, float sd, float ed)
   Draws an arc --returns bool--
ImagickDraw::bezier(array coordinates)
   Draws a bezier curve --returns bool--
ImagickDraw::circle(float ox, float oy, float px, float py)
   Draws a circle --returns bool--
ImagickDraw::clear(void)
   Clears the ImagickDraw --returns bool--
ImagickDraw::clone(void)
   Makes an exact copy of the specified ImagickDraw object --returns ImagickDraw--
ImagickDraw::color(float x, float y, int paintMethod)
   Draws color on image --returns bool--
ImagickDraw::comment(string comment)
   Adds a comment --returns bool--
ImagickDraw::composite(int compose, float x, float y, float width, float height, Imagick compositeWand)
   Composites an image onto the current image --returns bool--
ImagickDraw::__construct(void)
   The ImagickDraw constructor --returns ImagickDraw--
ImagickDraw::destroy(void)
   Frees all associated resources --returns bool--
ImagickDraw::ellipse(float ox, float oy, float rx, float ry, float start, float end)
   Draws an ellipse on the image --returns bool--
ImagickDraw::getClipPath(void)
   Obtains the current clipping path ID --returns string--
ImagickDraw::getClipRule(void)
   Returns the current polygon fill rule --returns int--
ImagickDraw::getClipUnits(void)
   Returns the interpretation of clip path units --returns int--
ImagickDraw::getFillColor(void)
   Returns the fill color --returns ImagickPixel--
ImagickDraw::getFillOpacity(void)
   Returns the opacity used when drawing --returns float--
ImagickDraw::getFillRule(void)
   Returns the fill rule --returns int--
ImagickDraw::getFont(void)
   Returns the font --returns string--
ImagickDraw::getFontFamily(void)
   Returns the font family --returns string--
ImagickDraw::getFontSize(void)
   Returns the font pointsize --returns float--
ImagickDraw::getFontStyle(void)
   Returns the font style --returns int--
ImagickDraw::getFontWeight(void)
   Returns the font weight --returns int--
ImagickDraw::getGravity(void)
   Returns the text placement gravity --returns int--
ImagickDraw::getStrokeAntialias(void)
   Returns the current stroke antialias setting --returns bool--
ImagickDraw::getStrokeColor(ImagickPixel stroke_color)
   Returns the color used for stroking object outlines --returns ImagickPixel--
ImagickDraw::getStrokeDashArray(void)
   Returns an array representing the pattern of dashes and gaps used to stroke paths --returns array--
ImagickDraw::getStrokeDashOffset(void)
   Returns the offset into the dash pattern to start the dash --returns float--
ImagickDraw::getStrokeLineCap(void)
   Returns the shape to be used at the end of open subpaths when they are stroked --returns int--
ImagickDraw::getStrokeLineJoin(void)
   Returns the shape to be used at the corners of paths when they are stroked --returns int--
ImagickDraw::getStrokeMiterLimit(void)
   Returns the stroke miter limit --returns int--
ImagickDraw::getStrokeOpacity(void)
   Returns the opacity of stroked object outlines --returns float--
ImagickDraw::getStrokeWidth(void)
   Returns the width of the stroke used to draw object outlines --returns float--
ImagickDraw::getTextAlignment(void)
   Returns the text alignment --returns int--
ImagickDraw::getTextAntialias(void)
   Returns the current text antialias setting --returns bool--
ImagickDraw::getTextDecoration(void)
   Returns the text decoration --returns int--
ImagickDraw::getTextEncoding(void)
   Returns the code set used for text annotations --returns string--
ImagickDraw::getTextUnderColor(void)
   Returns the text under color --returns ImagickPixel--
ImagickDraw::getVectorGraphics(void)
   Returns a string containing vector graphics --returns string--
ImagickDraw::line(float sx, float sy, float ex, float ey)
   Draws a line --returns bool--
ImagickDraw::matte(float x, float y, int paintMethod)
   Paints on the image's opacity channel --returns bool--
ImagickDraw::pathClose(void)
   Adds a path element to the current path --returns bool--
ImagickDraw::pathCurveToAbsolute(float x1, float y1, float x2, float y2, float x, float y)
   Draws a cubic Bezier curve --returns bool--
ImagickDraw::pathCurveToQuadraticBezierAbsolute(float x1, float y1, float x, float y)
   Draws a quadratic Bezier curve --returns bool--
ImagickDraw::pathCurveToQuadraticBezierRelative(float x1, float y1, float x, float y)
   Draws a quadratic Bezier curve --returns bool--
ImagickDraw::pathCurveToQuadraticBezierSmoothAbsolute(float x, float y)
   Draws a quadratic Bezier curve --returns bool--
ImagickDraw::pathCurveToQuadraticBezierSmoothRelative(float x, float y)
   Draws a quadratic Bezier curve --returns bool--
ImagickDraw::pathCurveToRelative(float x1, float y1, float x2, float y2, float x, float y)
   Draws a cubic Bezier curve --returns bool--
ImagickDraw::pathCurveToSmoothAbsolute(float x2, float y2, float x, float y)
   Draws a cubic Bezier curve --returns bool--
ImagickDraw::pathCurveToSmoothRelative(float x2, float y2, float x, float y)
   Draws a cubic Bezier curve --returns bool--
ImagickDraw::pathEllipticArcAbsolute(float rx, float ry, float x_axis_rotation, bool large_arc_flag, bool sweep_flag, float x, float y)
   Draws an elliptical arc --returns bool--
ImagickDraw::pathEllipticArcRelative(float rx, float ry, float x_axis_rotation, bool large_arc_flag, bool sweep_flag, float x, float y)
   Draws an elliptical arc --returns bool--
ImagickDraw::pathFinish(void)
   Terminates the current path --returns bool--
ImagickDraw::pathLineToAbsolute(float x, float y)
   Draws a line path --returns bool--
ImagickDraw::pathLineToHorizontalAbsolute(float x)
   Draws a horizontal line path --returns bool--
ImagickDraw::pathLineToHorizontalRelative(float x)
   Draws a horizontal line --returns bool--
ImagickDraw::pathLineToRelative(float x, float y)
   Draws a line path --returns bool--
ImagickDraw::pathLineToVerticalAbsolute(float y)
   Draws a vertical line --returns bool--
ImagickDraw::pathLineToVerticalRelative(float y)
   Draws a vertical line path --returns bool--
ImagickDraw::pathMoveToAbsolute(float x, float y)
   Starts a new sub-path --returns bool--
ImagickDraw::pathMoveToRelative(float x, float y)
   Starts a new sub-path --returns bool--
ImagickDraw::pathStart(void)
   Declares the start of a path drawing list --returns bool--
ImagickDraw::point(float x, float y)
   Draws a point --returns bool--
ImagickDraw::polygon(array coordinates)
   Draws a polygon --returns bool--
ImagickDraw::polyline(array coordinates)
   Draws a polyline --returns bool--
ImagickDraw::pop(void)
   Destroys the current ImagickDraw in the stack, and returns to the previously pushed ImagickDraw --returns bool--
ImagickDraw::popClipPath(void)
   Terminates a clip path definition --returns bool--
ImagickDraw::popDefs(void)
   Terminates a definition list --returns bool--
ImagickDraw::popPattern(void)
   Terminates a pattern definition --returns bool--
ImagickDraw::push(void)
   Clones the current ImagickDraw and pushes it to the stack --returns bool--
ImagickDraw::pushClipPath(string clip_mask_id)
   Starts a clip path definition --returns bool--
ImagickDraw::pushDefs(void)
   Indicates that following commands create named elements for early processing --returns bool--
ImagickDraw::pushPattern(string pattern_id, float x, float y, float width, float height)
   Indicates that subsequent commands up to a ImagickDraw::opPattern() command comprise the definition of a named pattern --returns bool--
ImagickDraw::rectangle(float x1, float y1, float x2, float y2)
   Draws a rectangle --returns bool--
ImagickDraw::render(void)
   Renders all preceding drawing commands onto the image --returns bool--
ImagickDraw::rotate(float degrees)
   Applies the specified rotation to the current coordinate space --returns bool--
ImagickDraw::roundRectangle(float x1, float y1, float x2, float y2, float rx, float ry)
   Draws a rounted rectangle --returns bool--
ImagickDraw::scale(float x, float y)
   Adjusts the scaling factor --returns bool--
ImagickDraw::setClipPath(string clip_mask)
   Associates a named clipping path with the image --returns bool--
ImagickDraw::setClipRule(int fill_rule)
   Set the polygon fill rule to be used by the clipping path --returns bool--
ImagickDraw::setClipUnits(int clip_units)
   Sets the interpretation of clip path units --returns bool--
ImagickDraw::setFillAlpha(float opacity)
   Sets the opacity to use when drawing using the fill color or fill texture --returns bool--
ImagickDraw::setFillColor(ImagickPixel fill_pixel)
   Sets the fill color to be used for drawing filled objects --returns bool--
ImagickDraw::setFillOpacity(float fillOpacity)
   Sets the opacity to use when drawing using the fill color or fill texture --returns bool--
ImagickDraw::setFillPatternURL(string fill_url)
   Sets the URL to use as a fill pattern for filling objects --returns bool--
ImagickDraw::setFillRule(int fill_rule)
   Sets the fill rule to use while drawing polygons --returns bool--
ImagickDraw::setFont(string font_name)
   Sets the fully-specified font to use when annotating with text --returns bool--
ImagickDraw::setFontFamily(string font_family)
   Sets the font family to use when annotating with text --returns bool--
ImagickDraw::setFontSize(float pointsize)
   Sets the font pointsize to use when annotating with text --returns bool--
ImagickDraw::setFontStretch(int fontStretch)
   Sets the font stretch to use when annotating with text --returns bool--
ImagickDraw::setFontStyle(int style)
   Sets the font style to use when annotating with text --returns bool--
ImagickDraw::setFontWeight(int font_weight)
   Sets the font weight --returns bool--
ImagickDraw::setGravity(int gravity)
   Sets the text placement gravity --returns bool--
ImagickDraw::setStrokeAlpha(float opacity)
   Specifies the opacity of stroked object outlines --returns bool--
ImagickDraw::setStrokeAntialias(bool stroke_antialias)
   Controls whether stroked outlines are antialiased --returns bool--
ImagickDraw::setStrokeColor(ImagickPixel stroke_pixel)
   Sets the color used for stroking object outlines --returns bool--
ImagickDraw::setStrokeDashArray(array dashArray)
   Specifies the pattern of dashes and gaps used to stroke paths --returns bool--
ImagickDraw::setStrokeDashOffset(float dash_offset)
   Specifies the offset into the dash pattern to start the dash --returns bool--
ImagickDraw::setStrokeLineCap(int linecap)
   Specifies the shape to be used at the end of open subpaths when they are stroked --returns bool--
ImagickDraw::setStrokeLineJoin(int linejoin)
   Specifies the shape to be used at the corners of paths when they are stroked --returns bool--
ImagickDraw::setStrokeMiterLimit(int miterlimit)
   Specifies the miter limit --returns bool--
ImagickDraw::setStrokeOpacity(float stroke_opacity)
   Specifies the opacity of stroked object outlines --returns bool--
ImagickDraw::setStrokePatternURL(string stroke_url)
   Sets the pattern used for stroking object outlines --returns bool--
ImagickDraw::setStrokeWidth(float stroke_width)
   Sets the width of the stroke used to draw object outlines --returns bool--
ImagickDraw::setTextAlignment(int alignment)
   Specifies a text alignment --returns bool--
ImagickDraw::setTextAntialias(bool antiAlias)
   Controls whether text is antialiased --returns bool--
ImagickDraw::setTextDecoration(int decoration)
   Specifies a decoration --returns bool--
ImagickDraw::setTextEncoding(string encoding)
   Specifies specifies the text code set --returns bool--
ImagickDraw::setTextUnderColor(ImagickPixel under_color)
   Specifies the color of a background rectangle --returns bool--
ImagickDraw::setVectorGraphics(string xml)
   Sets the vector graphics --returns bool--
ImagickDraw::setViewbox(int x1, int y1, int x2, int y2)
   Sets the overall canvas size --returns bool--
ImagickDraw::skewX(float degrees)
   Skews the current coordinate system in the horizontal direction --returns bool--
ImagickDraw::skewY(float degrees)
   Skews the current coordinate system in the vertical direction --returns bool--
ImagickDraw::translate(float x, float y)
   Applies a translation to the current coordinate system --returns bool--
ImagickPixel::clear(void)
   Clears resources associated with this object --returns bool--
ImagickPixel::__construct ([ string color ])
   The ImagickPixel constructor --returns ImagickPixel--
ImagickPixel::destroy(void)
   Deallocates resources associated with this object --returns bool--
ImagickPixel::getColor ([ bool normalized ])
   Returns the color --returns array--
ImagickPixel::getColorAsString(void)
   Returns the color as a string --returns string--
ImagickPixel::getColorCount(void)
   Returns the color count associated with this color --returns int--
ImagickPixel::getColorValue(int color)
   Gets the normalized value of the provided color channel --returns float--
ImagickPixel::getHSL(void)
   Returns the normalized HSL color of the ImagickPixel object --returns array--
ImagickPixel::isSimilar(ImagickPixel color, float fuzz)
   Check the distance between this color and another --returns bool--
ImagickPixel::setColor(string color)
   Sets the color --returns bool--
ImagickPixel::setColorValue(int color, float value)
   Sets the normalized value of one of the channels --returns bool--
ImagickPixel::setHSL(float hue, float saturation, float luminosity)
   Sets the normalized HSL color --returns bool--
ImagickPixelIterator::clear(void)
   Clear resources associated with a PixelIterator --returns bool--
ImagickPixelIterator::__construct(Imagick wand)
   The ImagickPixelIterator constructor --returns ImagickPixelIterator--
ImagickPixelIterator::destroy(void)
   Deallocates resources associated with a PixelIterator --returns bool--
ImagickPixelIterator::getCurrentIteratorRow(void)
   Returns the current row of ImagickPixel objects --returns array--
ImagickPixelIterator::getIteratorRow(void)
   Returns the current pixel iterator row --returns int--
ImagickPixelIterator::getNextIteratorRow(void)
   Returns the next row of the pixel iterator --returns array--
ImagickPixelIterator::getPreviousIteratorRow(void)
   Returns the previous row --returns array--
ImagickPixelIterator::newPixelIterator(Imagick wand)
   Returns a new pixel iterator --returns bool--
ImagickPixelIterator::newPixelRegionIterator(Imagick wand, int x, int y, int columns, int rows)
   Returns a new pixel iterator --returns bool--
ImagickPixelIterator::resetIterator(void)
   Resets the pixel iterator --returns bool--
ImagickPixelIterator::setIteratorFirstRow(void)
   Sets the pixel iterator to the first pixel row --returns bool--
ImagickPixelIterator::setIteratorLastRow(void)
   Sets the pixel iterator to the last pixel row --returns bool--
ImagickPixelIterator::setIteratorRow(int row)
   Set the pixel iterator row --returns bool--
ImagickPixelIterator::syncIterator(void)
   Syncs the pixel iterator --returns bool--
imap_8bit(string string)
   Convert an 8bit string to a quoted-printable string --returns string--
imap_alerts(void)
   Returns all IMAP alert messages that have occurred --returns array--
imap_append(resource imap_stream, string mailbox, string message [, string options ])
   Append a string message to a specified mailbox --returns bool--
imap_base64(string text)
   Decode BASE64 encoded text --returns string--
imap_binary(string string)
   Convert an 8bit string to a base64 string --returns string--
imap_body(resource imap_stream, int msg_number [, int options ])
   Read the message body --returns string--
imap_bodystruct(resource imap_stream, int msg_number, string section)
   Read the structure of a specified body section of a specific message --returns object--
imap_check(resource imap_stream)
   Check current mailbox --returns object--
imap_clearflag_full(resource imap_stream, string sequence, string flag [, string options ])
   Clears flags on messages --returns bool--
imap_close(resource imap_stream [, int flag ])
   Close an IMAP stream --returns bool--
imap_createmailbox(resource imap_stream, string mailbox)
   Create a new mailbox --returns bool--
imap_delete(resource imap_stream, int msg_number [, int options ])
   Mark a message for deletion from current mailbox --returns bool--
imap_deletemailbox(resource imap_stream, string mailbox)
   Delete a mailbox --returns bool--
imap_errors(void)
   Returns all of the IMAP errors that have occured --returns array--
imap_expunge(resource imap_stream)
   Delete all messages marked for deletion --returns bool--
imap_fetch_overview(resource imap_stream, string sequence [, int options ])
   Read an overview of the information in the headers of the given message --returns array--
imap_fetchbody(resource imap_stream, int msg_number, string part_number [, int options ])
   Fetch a particular section of the body of the message --returns string--
imap_fetchheader(resource imap_stream, int msg_number [, int options ])
   Returns header for a message --returns string--
imap_fetchstructure(resource imap_stream, int msg_number [, int options ])
   Read the structure of a particular message --returns object--
imap_get_quota(resource imap_stream, string quota_root)
   Retrieve the quota level settings, and usage statics per mailbox --returns array--
imap_get_quotaroot(resource imap_stream, string quota_root)
   Retrieve the quota settings per user --returns array--
imap_getacl(resource imap_stream, string mailbox)
   Gets the ACL for a given mailbox --returns array--
imap_getmailboxes(resource imap_stream, string ref, string pattern)
   Read the list of mailboxes, returning detailed information on each one --returns array--
imap_getsubscribed(resource imap_stream, string ref, string pattern)
   List all the subscribed mailboxes --returns array--
imap_header
   Alias of imap_headerinfo() --returns ?--
imap_headerinfo(resource imap_stream, int msg_number [, int fromlength [, int subjectlength [, string defaulthost ]]])
   Read the header of the message --returns object--
imap_headers(resource imap_stream)
   Returns headers for all messages in a mailbox --returns array--
imap_last_error(void)
   Gets the last IMAP error that occurred during this page request --returns string--
imap_list(resource imap_stream, string ref, string pattern)
   Read the list of mailboxes --returns array--
imap_listmailbox
   Alias of imap_list() --returns ?--
imap_listscan(resource imap_stream, string ref, string pattern, string content)
   Returns the list of mailboxes that matches the given text --returns array--
imap_listsubscribed
   Alias of imap_lsub() --returns ?--
imap_lsub(resource imap_stream, string ref, string pattern)
   List all the subscribed mailboxes --returns array--
imap_mail_compose(array envelope, array body)
   Create a MIME message based on given envelope and body sections --returns string--
imap_mail_copy(resource imap_stream, string msglist, string mailbox [, int options ])
   Copy specified messages to a mailbox --returns bool--
imap_mail_move(resource imap_stream, string msglist, string mailbox [, int options ])
   Move specified messages to a mailbox --returns bool--
imap_mail(string to, string subject, string message [, string additional_headers [, string cc [, string bcc [, string rpath ]]]])
   Send an email message --returns bool--
imap_mailboxmsginfo(resource imap_stream)
   Get information about the current mailbox --returns object--
imap_mime_header_decode(string text)
   Decode MIME header elements --returns array--
imap_msgno(resource imap_stream, int uid)
   Gets the message sequence number for the given UID --returns int--
imap_num_msg(resource imap_stream)
   Gets the number of messages in the current mailbox --returns int--
imap_num_recent(resource imap_stream)
   Gets the number of recent messages in current mailbox --returns int--
imap_open(string mailbox, string username, string password [, int options [, int n_retries ]])
   Open an IMAP stream to a mailbox --returns resource--
imap_ping(resource imap_stream)
   Check if the IMAP stream is still active --returns bool--
imap_qprint(string string)
   Convert a quoted-printable string to an 8 bit string --returns string--
imap_renamemailbox(resource imap_stream, string old_mbox, string new_mbox)
   Rename an old mailbox to new mailbox --returns bool--
imap_reopen(resource imap_stream, string mailbox [, int options [, int n_retries ]])
   Reopen IMAP stream to new mailbox --returns bool--
imap_rfc822_parse_adrlist(string address, string default_host)
   Parses an address string --returns array--
imap_rfc822_parse_headers(string headers [, string defaulthost ])
   Parse mail headers from a string --returns object--
imap_rfc822_write_address(string mailbox, string host, string personal)
   Returns a properly formatted email address given the mailbox, host, and personal info --returns string--
imap_savebody(resource imap_stream, mixed file, int msg_number [, string part_number [, int options ]])
   Save a specific body section to a file --returns bool--
imap_scanmailbox
   Alias of imap_listscan() --returns ?--
imap_search(resource imap_stream, string criteria [, int options [, string charset ]])
   This function returns an array of messages matching the given search criteria --returns array--
imap_set_quota(resource imap_stream, string quota_root, int quota_limit)
   Sets a quota for a given mailbox --returns bool--
imap_setacl(resource imap_stream, string mailbox, string id, string rights)
   Sets the ACL for a giving mailbox --returns bool--
imap_setflag_full(resource imap_stream, string sequence, string flag [, int options ])
   Sets flags on messages --returns bool--
imap_sort(resource imap_stream, int criteria, int reverse [, int options [, string search_criteria [, string charset ]]])
   Gets and sort messages --returns array--
imap_status(resource imap_stream, string mailbox, int options)
   Returns status information on a mailbox --returns object--
imap_subscribe(resource imap_stream, string mailbox)
   Subscribe to a mailbox --returns bool--
imap_thread(resource imap_stream [, int options ])
   Returns a tree of threaded message --returns array--
imap_timeout(int timeout_type [, int timeout ])
   Set or fetch imap timeout --returns mixed--
imap_uid(resource imap_stream, int msg_number)
   This function returns the UID for the given message sequence number --returns int--
imap_undelete(resource imap_stream, int msg_number [, int flags ])
   Unmark the message which is marked deleted --returns bool--
imap_unsubscribe(string imap_stream, string mailbox)
   Unsubscribe from a mailbox --returns bool--
imap_utf7_decode(string text)
   Decodes a modified UTF-7 encoded string --returns string--
imap_utf7_encode(string data)
   Converts ISO-8859-1 string to modified UTF-7 text --returns string--
imap_utf8(string mime_encoded_text)
   Converts MIME-encoded text to UTF-8 --returns string--
implode(string glue, array pieces)
   Join array elements with a string --returns string--
import_request_variables(string types [, string prefix ])
   Import GET/POST/Cookie variables into the global scope --returns bool--
in_array(mixed needle, array haystack [, bool strict ])
   Checks if a value exists in an array --returns bool--

    --returns ?--

    --returns ?--
inclued_get_data(void)
   Get the inclued data --returns array--
inet_ntop(string in_addr)
   Converts a packed internet address to a human readable representation --returns string--
inet_pton(string address)
   Converts a human readable IP address to its packed in_addr representation --returns string--
ingres_autocommit ([ resource link ])
   Switch autocommit on or off --returns bool--
ingres_close ([ resource link ])
   Close an Ingres II database connection --returns bool--
ingres_commit ([ resource link ])
   Commit a transaction --returns bool--
ingres_connect ([ string database [, string username [, string password [, array options ]]]])
   Open a connection to an Ingres database --returns resource--
ingres_cursor ([ resource link ])
   Gets a cursor name for a given link resource --returns string--
ingres_errno ([ resource link ])
   Gets the last ingres error number generated --returns int--
ingres_error ([ resource link ])
   Gets a meaningful error message for the last error generated --returns string--
ingres_errsqlstate ([ resource link ])
   Gets the last SQLSTATE error code generated --returns string--
ingres_fetch_array ([ int result_type [, resource link ]])
   Fetch a row of result into an array --returns array--
ingres_fetch_object ([ int result_type [, resource link ]])
   Fetch a row of result into an object --returns object--
ingres_fetch_row ([ resource link ])
   Fetch a row of result into an enumerated array --returns array--
ingres_field_length(int index [, resource link ])
   Get the length of a field --returns int--
ingres_field_name(int index [, resource link ])
   Get the name of a field in a query result --returns string--
ingres_field_nullable(int index [, resource link ])
   Test if a field is nullable --returns bool--
ingres_field_precision(int index [, resource link ])
   Get the precision of a field --returns int--
ingres_field_scale(int index [, resource link ])
   Get the scale of a field --returns int--
ingres_field_type(int index [, resource link ])
   Get the type of a field in a query result --returns string--
ingres_num_fields ([ resource link ])
   Get the number of fields returned by the last query --returns int--
ingres_num_rows ([ resource link ])
   Get the number of rows affected or returned by the last query --returns int--
ingres_pconnect ([ string database [, string username [, string password ]]])
   Open a persistent connection to an Ingres II database --returns resource--
ingres_query(string query [, resource link ])
   Send a SQL query to Ingres II --returns bool--
ingres_rollback ([ resource link ])
   Roll back a transaction --returns bool--
ini_alter
   Alias of ini_set() --returns ?--
ini_get_all ([ string extension [, bool details ]])
   Gets all configuration options --returns array--
ini_get(string varname)
   Gets the value of a configuration option --returns string--
ini_restore(string varname)
   Restores the value of a configuration option --returns void--
ini_set(string varname, string newvalue)
   Sets the value of a configuration option --returns string--
inotify_add_watch(resource inotify_instance, string pathname, integer mask)
   Add a watch to an initialized inotify instance --returns integer--
inotify_init(void)
   Initialize an inotify instance --returns resource--
inotify_queue_len(resource inotify_instance)
   Return a number upper than zero if there are pending events --returns bool--
inotify_read(resource inotify_instance)
   Read events from an inotify instance --returns array--
inotify_rm_watch(resource inotify_instance, integer watch_descriptor)
   Remove an existing watch from an inotify instance --returns bool--
interface_exists(string interface_name [, bool autoload ])
   Checks if the interface has been defined --returns bool--
intl_error_name(integer error_code)
   Get symbolic name for a given error code --returns string--
intl_get_error_code(void)
   Get the last error code --returns integer--
intl_get_error_message(void)
   Get description of the last error --returns string--
intl_is_failure(integer error_code)
   Check whether the given error code indicates failure --returns bool--
intval(mixed var [, int base ])
   Get the integer value of a variable --returns int--
ip2long(string ip_address)
   Converts a string containing an (IPv4) Internet Protocol dotted address into a proper address --returns int--
iptcembed(string iptcdata, string jpeg_file_name [, int spool ])
   Embed binary IPTC data into a JPEG image --returns mixed--
iptcparse(string iptcblock)
   Parse a binary IPTC block into single tags. --returns array--
is_a(object object, string class_name)
   Checks if the object is of this class or has this class as one of its parents --returns bool--
is_array(mixed var)
   Finds whether a variable is an array --returns bool--
is_binary(mixed var)
   Finds whether a variable is a native binary string --returns bool--
is_bool(mixed var)
   Finds out whether a variable is a boolean --returns bool--
is_buffer(mixed var)
   Finds whether a variable is a native unicode or binary string --returns bool--
is_callable(mixed var [, bool syntax_only [, string &callable_name ]])
   Verify that the contents of a variable can be called as a function --returns bool--
is_dir(string filename)
   Tells whether the filename is a directory --returns bool--
is_double
   Alias of is_float() --returns ?--
is_executable(string filename)
   Tells whether the filename is executable --returns bool--
is_file(string filename)
   Tells whether the filename is a regular file --returns bool--
is_finite(float val)
   Finds whether a value is a legal finite number --returns bool--
is_float(mixed var)
   Finds whether the type of a variable is float --returns bool--
is_infinite(float val)
   Finds whether a value is infinite --returns bool--
is_int(mixed var)
   Find whether the type of a variable is integer --returns bool--
is_integer
   Alias of is_int() --returns ?--
is_link(string filename)
   Tells whether the filename is a symbolic link --returns bool--
is_long
   Alias of is_int() --returns ?--
is_nan(float val)
   Finds whether a value is not a number --returns bool--
is_null(mixed var)
   Finds whether a variable is NULL --returns bool--
is_numeric(mixed var)
   Finds whether a variable is a number or a numeric string --returns bool--
is_object(mixed var)
   Finds whether a variable is an object --returns bool--
is_readable(string filename)
   Tells whether the filename is readable --returns bool--
is_real
   Alias of is_float() --returns ?--
is_resource(mixed var)
   Finds whether a variable is a resource --returns bool--
is_scalar(mixed var)
   Finds whether a variable is a scalar --returns bool--
is_soap_fault(mixed obj)
   Checks if SOAP call was failed --returns bool--
is_string(mixed var)
   Find whether the type of a variable is string --returns bool--
is_subclass_of(mixed object, string class_name)
   Checks if the object has this class as one of its parents --returns bool--
is_unicode(mixed var)
   Finds whether a variable is a unicode string --returns bool--
is_uploaded_file(string filename)
   Tells whether the file was uploaded via HTTP POST --returns bool--
is_writable(string filename)
   Tells whether the filename is writable --returns bool--
is_writeable
   Alias of is_writable() --returns ?--
isset(mixed var [, mixed var [, ... ]])
   Determine whether a variable is set --returns bool--
iterator_count(IteratorAggregate iterator)
   Count the elements in an iterator --returns int--
iterator_to_array(IteratorAggregate iterator [, bool use_keys ])
   Copy the iterator into an array --returns array--
java_last_exception_clear(void)
   Clear last Java exception --returns void--
java_last_exception_get(void)
   Get last Java exception --returns object--
jddayofweek(int julianday [, int mode ])
   Returns the day of the week --returns mixed--
jdmonthname(int julianday, int mode)
   Returns a month name --returns string--
jdtofrench(int juliandaycount)
   Converts a Julian Day Count to the French Republican Calendar --returns string--
jdtogregorian(int julianday)
   Converts Julian Day Count to Gregorian date --returns string--
jdtojewish(int juliandaycount [, bool hebrew [, int fl ]])
   Converts a Julian day count to a Jewish calendar date --returns string--
jdtojulian(int julianday)
   Converts a Julian Day Count to a Julian Calendar Date --returns string--
jdtounix(int jday)
   Convert Julian Day to Unix timestamp --returns int--
jewishtojd(int month, int day, int year)
   Converts a date in the Jewish Calendar to Julian Day Count --returns int--
join
   Alias of implode() --returns ?--
jpeg2wbmp(string jpegname, string wbmpname, int dest_height, int dest_width, int threshold)
   Convert JPEG image file to WBMP image file --returns bool--
json_decode(string json [, bool assoc ])
   Decodes a JSON string --returns mixed--
json_encode(mixed value)
   Returns the JSON representation of a value --returns string--
juliantojd(int month, int day, int year)
   Converts a Julian Calendar date to Julian Day Count --returns int--
kadm5_chpass_principal(resource handle, string principal, string password)
   Changes the principal's password --returns bool--
kadm5_create_principal(resource handle, string principal [, string password [, array options ]])
   Creates a kerberos principal with the given parameters --returns bool--
kadm5_delete_principal(resource handle, string principal)
   Deletes a kerberos principal --returns bool--
kadm5_destroy(resource handle)
   Closes the connection to the admin server and releases all related resources --returns bool--
kadm5_flush(resource handle)
   Flush all changes to the Kerberos database --returns bool--
kadm5_get_policies(resource handle)
   Gets all policies from the Kerberos database --returns array--
kadm5_get_principal(resource handle, string principal)
   Gets the principal's entries from the Kerberos database --returns array--
kadm5_get_principals(resource handle)
   Gets all principals from the Kerberos database --returns array--
kadm5_init_with_password(string admin_server, string realm, string principal, string password)
   Opens a connection to the KADM5 library --returns resource--
kadm5_modify_principal(resource handle, string principal, array options)
   Modifies a kerberos principal with the given parameters --returns bool--
key(array &array)
   Fetch a key from an array --returns mixed--
krsort(array &array [, int sort_flags ])
   Sort an array by key in reverse order --returns bool--
ksort(array &array [, int sort_flags ])
   Sort an array by key --returns bool--
lcfirst(string str)
   Make a string's first character lowercase --returns string--
lcg_value(void)
   Combined linear congruential generator --returns float--
lchgrp(string filename, mixed group)
   Changes group ownership of symlink --returns bool--
lchown(string filename, mixed user)
   Changes user ownership of symlink --returns bool--
ldap_8859_to_t61(string value)
   Translate 8859 characters to t61 characters --returns string--
ldap_add(resource link_identifier, string dn, array entry)
   Add entries to LDAP directory --returns bool--
ldap_bind(resource link_identifier [, string bind_rdn [, string bind_password ]])
   Bind to LDAP directory --returns bool--
ldap_close
   Alias of ldap_unbind() --returns ?--
ldap_compare(resource link_identifier, string dn, string attribute, string value)
   Compare value of attribute found in entry specified with DN --returns mixed--
ldap_connect ([ string hostname [, int port ]])
   Connect to an LDAP server --returns resource--
ldap_count_entries(resource link_identifier, resource result_identifier)
   Count the number of entries in a search --returns int--
ldap_delete(resource link_identifier, string dn)
   Delete an entry from a directory --returns bool--
ldap_dn2ufn(string dn)
   Convert DN to User Friendly Naming format --returns string--
ldap_err2str(int errno)
   Convert LDAP error number into string error message --returns string--
ldap_errno(resource link_identifier)
   Return the LDAP error number of the last LDAP command --returns int--
ldap_error(resource link_identifier)
   Return the LDAP error message of the last LDAP command --returns string--
ldap_explode_dn(string dn, int with_attrib)
   Splits DN into its component parts --returns array--
ldap_first_attribute(resource link_identifier, resource result_entry_identifier)
   Return first attribute --returns string--
ldap_first_entry(resource link_identifier, resource result_identifier)
   Return first result id --returns resource--
ldap_first_reference(resource link, resource result)
   Return first reference --returns resource--
ldap_free_result(resource result_identifier)
   Free result memory --returns bool--
ldap_get_attributes(resource link_identifier, resource result_entry_identifier)
   Get attributes from a search result entry --returns array--
ldap_get_dn(resource link_identifier, resource result_entry_identifier)
   Get the DN of a result entry --returns string--
ldap_get_entries(resource link_identifier, resource result_identifier)
   Get all result entries --returns array--
ldap_get_option(resource link_identifier, int option, mixed &retval)
   Get the current value for given option --returns bool--
ldap_get_values_len(resource link_identifier, resource result_entry_identifier, string attribute)
   Get all binary values from a result entry --returns array--
ldap_get_values(resource link_identifier, resource result_entry_identifier, string attribute)
   Get all values from a result entry --returns array--
ldap_list(resource link_identifier, string base_dn, string filter [, array attributes [, int attrsonly [, int sizelimit [, int timelimit [, int deref ]]]]])
   Single-level search --returns resource--
ldap_mod_add(resource link_identifier, string dn, array entry)
   Add attribute values to current attributes --returns bool--
ldap_mod_del(resource link_identifier, string dn, array entry)
   Delete attribute values from current attributes --returns bool--
ldap_mod_replace(resource link_identifier, string dn, array entry)
   Replace attribute values with new ones --returns bool--
ldap_modify(resource link_identifier, string dn, array entry)
   Modify an LDAP entry --returns bool--
ldap_next_attribute(resource link_identifier, resource result_entry_identifier)
   Get the next attribute in result --returns string--
ldap_next_entry(resource link_identifier, resource result_entry_identifier)
   Get next result entry --returns resource--
ldap_next_reference(resource link, resource entry)
   Get next reference --returns resource--
ldap_parse_reference(resource link, resource entry, array &referrals)
   Extract information from reference entry --returns bool--
ldap_parse_result(resource link, resource result, int &errcode [, string &matcheddn [, string &errmsg [, array &referrals ]]])
   Extract information from result --returns bool--
ldap_read(resource link_identifier, string base_dn, string filter [, array attributes [, int attrsonly [, int sizelimit [, int timelimit [, int deref ]]]]])
   Read an entry --returns resource--
ldap_rename(resource link_identifier, string dn, string newrdn, string newparent, bool deleteoldrdn)
   Modify the name of an entry --returns bool--
ldap_sasl_bind(resource link [, string binddn [, string password [, string sasl_mech [, string sasl_realm [, string sasl_authz_id [, string props ]]]]]])
   Bind to LDAP directory using SASL --returns bool--
ldap_search(resource link_identifier, string base_dn, string filter [, array attributes [, int attrsonly [, int sizelimit [, int timelimit [, int deref ]]]]])
   Search LDAP tree --returns resource--
ldap_set_option(resource link_identifier, int option, mixed newval)
   Set the value of the given option --returns bool--
ldap_set_rebind_proc(resource link, callback callback)
   Set a callback function to do re-binds on referral chasing --returns bool--
ldap_sort(resource link, resource result, string sortfilter)
   Sort LDAP result entries --returns bool--
ldap_start_tls(resource link)
   Start TLS --returns bool--
ldap_t61_to_8859(string value)
   Translate t61 characters to 8859 characters --returns string--
ldap_unbind(resource link_identifier)
   Unbind from LDAP directory --returns bool--
levenshtein(string str1, string str2) int levenshtein(string str1, string str2, int cost_ins, int cost_rep, int cost_del)
   Calculate Levenshtein distance between two strings --returns int--
libxml_clear_errors(void)
   Clear libxml error buffer --returns void--
libxml_get_errors(void)
   Retrieve array of errors --returns array--
libxml_get_last_error(void)
   Retrieve last error from libxml --returns LibXMLError--
libxml_set_streams_context(resource streams_context)
   Set the streams context for the next libxml document load or write --returns void--
libxml_use_internal_errors ([ bool use_errors ])
   Disable libxml errors and allow user to fetch error information as needed --returns bool--
link(string target, string link)
   Create a hard link --returns bool--
linkinfo(string path)
   Gets information about a link --returns int--
list(mixed varname [, mixed ... ])
   Assign variables as if they were an array --returns void--
locale_get_default(void)
   Get the default Locale --returns string--
locale_set_default(string name)
   Set the default Locale --returns bool--
localeconv(void)
   Get numeric formatting information --returns array--
localtime ([ int timestamp [, bool is_associative ]])
   Get the local time --returns array--
log(float arg [, float base ])
   Natural logarithm --returns float--
log10(float arg)
   Base-10 logarithm --returns float--
log1p(float number)
   Returns log(1 + number), computed in a way that is accurate even when the value of number is close to zero --returns float--
long2ip(int proper_address)
   Converts an (IPv4) Internet network address into a string in Internet standard dotted format --returns string--
lstat(string filename)
   Gives information about a file or symbolic link --returns array--
ltrim(string str [, string charlist ])
   Strip whitespace (or other characters) from the beginning of a string --returns string--
lzf_compress(string data)
   LZF compression --returns string--
lzf_decompress(string data)
   LZF decompression --returns string--
lzf_optimized_for(void)
   Determines what LZF extension was optimized for --returns int--
m_checkstatus(resource conn, int identifier)
   Check to see if a transaction has completed --returns int--
m_completeauthorizations(resource conn, int &array)
   Number of complete authorizations in queue, returning an array of their identifiers --returns int--
m_connect(resource conn)
   Establish the connection to MCVE --returns int--
m_connectionerror(resource conn)
   Get a textual representation of why a connection failed --returns string--
m_deletetrans(resource conn, int identifier)
   Delete specified transaction from MCVE_CONN structure --returns bool--
m_destroyconn(resource conn)
   Destroy the connection and MCVE_CONN structure --returns bool--
m_destroyengine(void)
   Free memory associated with IP/SSL connectivity --returns void--
m_getcell(resource conn, int identifier, string column, int row)
   Get a specific cell from a comma delimited response by column name --returns string--
m_getcellbynum(resource conn, int identifier, int column, int row)
   Get a specific cell from a comma delimited response by column number --returns string--
m_getcommadelimited(resource conn, int identifier)
   Get the RAW comma delimited data returned from MCVE --returns string--
m_getheader(resource conn, int identifier, int column_num)
   Get the name of the column in a comma-delimited response --returns string--
m_initconn(void)
   Create and initialize an MCVE_CONN structure --returns resource--
m_initengine(string location)
   Ready the client for IP/SSL Communication --returns int--
m_iscommadelimited(resource conn, int identifier)
   Checks to see if response is comma delimited --returns int--
m_maxconntimeout(resource conn, int secs)
   The maximum amount of time the API will attempt a connection to MCVE --returns bool--
m_monitor(resource conn)
   Perform communication with MCVE (send/receive data) Non-blocking --returns int--
m_numcolumns(resource conn, int identifier)
   Number of columns returned in a comma delimited response --returns int--
m_numrows(resource conn, int identifier)
   Number of rows returned in a comma delimited response --returns int--
m_parsecommadelimited(resource conn, int identifier)
   Parse the comma delimited response so m_getcell, etc will work --returns int--
m_responsekeys(resource conn, int identifier)
   Returns array of strings which represents the keys that can be used for response parameters on this transaction --returns array--
m_responseparam(resource conn, int identifier, string key)
   Get a custom response parameter --returns string--
m_returnstatus(resource conn, int identifier)
   Check to see if the transaction was successful --returns int--
m_setblocking(resource conn, int tf)
   Set blocking/non-blocking mode for connection --returns int--
m_setdropfile(resource conn, string directory)
   Set the connection method to Drop-File --returns int--
m_setip(resource conn, string host, int port)
   Set the connection method to IP --returns int--
m_setssl_cafile(resource conn, string cafile)
   Set SSL CA (Certificate Authority) file for verification of server certificate --returns int--
m_setssl_files(resource conn, string sslkeyfile, string sslcertfile)
   Set certificate key files and certificates if server requires client certificate verification --returns int--
m_setssl(resource conn, string host, int port)
   Set the connection method to SSL --returns int--
m_settimeout(resource conn, int seconds)
   Set maximum transaction time (per trans) --returns int--
m_sslcert_gen_hash(string filename)
   Generate hash for SSL client certificate verification --returns string--
m_transactionssent(resource conn)
   Check to see if outgoing buffer is clear --returns int--
m_transinqueue(resource conn)
   Number of transactions in client-queue --returns int--
m_transkeyval(resource conn, int identifier, string key, string value)
   Add key/value pair to a transaction. Replaces deprecated transparam() --returns int--
m_transnew(resource conn)
   Start a new transaction --returns int--
m_transsend(resource conn, int identifier)
   Finalize and send the transaction --returns int--
m_uwait(int microsecs)
   Wait x microsecs --returns int--
m_validateidentifier(resource conn, int tf)
   Whether or not to validate the passed identifier on any transaction it is passed to --returns int--
m_verifyconnection(resource conn, int tf)
   Set whether or not to PING upon connect to verify connection --returns bool--
m_verifysslcert(resource conn, int tf)
   Set whether or not to verify the server ssl certificate --returns bool--
mail(string to, string subject, string message [, string additional_headers [, string additional_parameters ]])
   Send mail --returns bool--
mailparse_determine_best_xfer_encoding(resource fp)
   Gets the best way of encoding --returns string--
mailparse_msg_create(void)
   Create a mime mail resource --returns resource--
mailparse_msg_extract_part_file(resource mimemail, mixed filename [, callback callbackfunc ])
   Extracts/decodes a message section --returns string--
mailparse_msg_extract_part(resource mimemail, string msgbody [, callback callbackfunc ])
   Extracts/decodes a message section --returns void--
mailparse_msg_extract_whole_part_file(resource mimemail, string filename [, callback callbackfunc ])
   Extracts a message section including headers without decoding the transfer encoding --returns string--
mailparse_msg_free(resource mimemail)
   Frees a MIME resource --returns bool--
mailparse_msg_get_part_data(resource mimemail)
   Returns an associative array of info about the message --returns array--
mailparse_msg_get_part(resource mimemail, string mimesection)
   Returns a handle on a given section in a mimemessage --returns resource--
mailparse_msg_get_structure(resource mimemail)
   Returns an array of mime section names in the supplied message --returns array--
mailparse_msg_parse_file(string filename)
   Parses a file --returns resource--
mailparse_msg_parse(resource mimemail, string data)
   Incrementally parse data into buffer --returns bool--
mailparse_rfc822_parse_addresses(string addresses)
   Parse RFC 822 compliant addresses --returns array--
mailparse_stream_encode(resource sourcefp, resource destfp, string encoding)
   Streams data from source file pointer, apply encoding and write to destfp --returns bool--
mailparse_uudecode_all(resource fp)
   Scans the data from fp and extract each embedded uuencoded file --returns array--
main
   Dummy for main() --returns ?--
max(array values) mixed max(mixed value1, mixed value2 [, mixed value3... ])
   Find highest value --returns mixed--
maxdb_affected_rows(resource link)
   Gets the number of affected rows in a previous MaxDB operation --returns int--
maxdb_autocommit(resource link, bool mode) bool auto_commit(bool mode)
   Turns on or off auto-commiting database modifications --returns bool--
maxdb_bind_param
   Alias of maxdb_stmt_bind_param() --returns ?--
maxdb_bind_result
   Alias of maxdb_stmt_bind_result() --returns ?--
maxdb_change_user(resource link, string user, string password, string database) bool change_user(string user, string password, string database)
   Changes the user of the specified database connection --returns bool--
maxdb_character_set_name(resource link) string character_set_name(void)
   Returns the default character set for the database connection --returns string--
maxdb_client_encoding
   Alias of maxdb_character_set_name() --returns ?--
maxdb_close_long_data
   Alias of maxdb_stmt_close_long_data() --returns ?--
maxdb_close(resource link) bool close(void)
   Closes a previously opened database connection --returns bool--
maxdb_commit(resource link) bool commit(void)
   Commits the current transaction --returns bool--
maxdb_connect_errno(void)
   Returns the error code from last connect call --returns int--
maxdb_connect_error(void)
   Returns a string description of the last connect error --returns string--
maxdb_connect ([ string host [, string username [, string passwd [, string dbname [, int port [, string socket ]]]]]])
   Open a new connection to the MaxDB server --returns resource--
maxdb_data_seek(resource result, int offset) bool data_seek(int offset)
   Adjusts the result pointer to an arbitary row in the result --returns bool--
maxdb_debug(string debug)
   Performs debugging operations --returns void--
maxdb_disable_reads_from_master(resource link) void disable_reads_from_master(void)
   Disable reads from master --returns bool--
maxdb_disable_rpl_parse(resource link)
   Disable RPL parse --returns bool--
maxdb_dump_debug_info(resource link)
   Dump debugging information into the log --returns bool--
maxdb_embedded_connect ([ string dbname ])
   Open a connection to an embedded MaxDB server --returns resource--
maxdb_enable_reads_from_master(resource link)
   Enable reads from master --returns bool--
maxdb_enable_rpl_parse(resource link)
   Enable RPL parse --returns bool--
maxdb_errno(resource link)
   Returns the error code for the most recent function call --returns int--
maxdb_error(resource link)
   Returns a string description of the last error --returns string--
maxdb_escape_string
   Alias of maxdb_real_escape_string() --returns ?--
maxdb_execute
   Alias of maxdb_stmt_execute() --returns ?--
maxdb_fetch_array(resource result [, int resulttype ]) mixed fetch_array ([ int resulttype ])
   Fetch a result row as an associative, a numeric array, or both --returns mixed--
maxdb_fetch_assoc(resource result) array fetch_assoc(void)
   Fetch a result row as an associative array --returns array--
maxdb_fetch_field_direct(resource result, int fieldnr) mixed fetch_field_direct(int fieldnr)
   Fetch meta-data for a single field --returns mixed--
maxdb_fetch_field(resource result) mixed fetch_field(void)
   Returns the next field in the result set --returns mixed--
maxdb_fetch_fields(resource result) mixed fetch_fields(void)
   Returns an array of resources representing the fields in a result set --returns mixed--
maxdb_fetch_lengths(resource result)
   Returns the lengths of the columns of the current row in the result set --returns array--
maxdb_fetch_object(object result) object fetch_object(void)
   Returns the current row of a result set as an object --returns object--
maxdb_fetch_row(resource result) mixed fetch_row(void)
   Get a result row as an enumerated array --returns mixed--
maxdb_fetch
   Alias of maxdb_stmt_fetch() --returns ?--
maxdb_field_count(resource link) int field_count(void)
   Returns the number of columns for the most recent query --returns int--
maxdb_field_seek(resource result, int fieldnr) bool field_seek(int fieldnr)
   Set result pointer to a specified field offset --returns bool--
maxdb_field_tell(resource result)
   Get current field offset of a result pointer --returns int--
maxdb_free_result(resource result) void free(void)
   Frees the memory associated with a result --returns void--
maxdb_get_client_info(void)
   Returns the MaxDB client version as a string --returns string--
maxdb_get_client_version(void)
   Get MaxDB client info --returns int--
maxdb_get_host_info(resource link)
   Returns a string representing the type of connection used --returns string--
maxdb_get_metadata
   Alias of maxdb_stmt_result_metadata() --returns ?--
maxdb_get_proto_info(resource link)
   Returns the version of the MaxDB protocol used --returns int--
maxdb_get_server_info(resource link)
   Returns the version of the MaxDB server --returns string--
maxdb_get_server_version(resource link)
   Returns the version of the MaxDB server as an integer --returns int--
maxdb_info(resource link)
   Retrieves information about the most recently executed query --returns string--
maxdb_init(void)
   Initializes MaxDB and returns an resource for use with maxdb_real_connect --returns resource--
maxdb_insert_id(resource link)
   Returns the auto generated id used in the last query --returns mixed--
maxdb_kill(resource link, int processid) bool kill(int processid)
   Disconnects from a MaxDB server --returns bool--
maxdb_master_query(resource link, string query)
   Enforce execution of a query on the master in a master/slave setup --returns bool--
maxdb_more_results(resource link)
   Check if there any more query results from a multi query --returns bool--
maxdb_multi_query(resource link, string query) bool multi_query(string query)
   Performs a query on the database --returns bool--
maxdb_next_result(resource link)
   Prepare next result from multi_query --returns bool--
maxdb_num_fields(resource result)
   Get the number of fields in a result --returns int--
maxdb_num_rows(resource result)
   Gets the number of rows in a result --returns int--
maxdb_options(resource link, int option, mixed value) bool options(int option, mixed value)
   Set options --returns bool--
maxdb_param_count
   Alias of maxdb_stmt_param_count() --returns ?--
maxdb_ping(resource link) bool ping(void)
   Pings a server connection, or tries to reconnect if the connection has gone down --returns bool--
maxdb_prepare(resource link, string query) resource prepare(string query)
   Prepare a SQL statement for execution --returns resource--
maxdb_query(resource link, string query [, int resultmode ]) mixed query(string query)
   Performs a query on the database --returns mixed--
maxdb_real_connect(resource link [, string hostname [, string username [, string passwd [, string dbname [, int port [, string socket ]]]]]]) bool real_connect ([ string hostname [, string username [, string passwd [, string dbname [, int port [, string socket ]]]]]])
   Opens a connection to a MaxDB server --returns bool--
maxdb_real_escape_string(resource link, string escapestr) string real_escape_sring(string escapestr)
   Escapes special characters in a string for use in a SQL statement, taking into account the current charset of the connection --returns string--
maxdb_real_query(resource link, string query) bool real_query(string query)
   Execute an SQL query --returns bool--
maxdb_report(int flags)
   Enables or disables internal report functions --returns bool--
maxdb_rollback(resource link) bool rollback(void)
   Rolls back current transaction --returns bool--
maxdb_rpl_parse_enabled(resource link)
   Check if RPL parse is enabled --returns int--
maxdb_rpl_probe(resource link)
   RPL probe --returns bool--
maxdb_rpl_query_type(resource link) int rpl_query_type(void)
   Returns RPL query type --returns int--
maxdb_select_db(resource link, string dbname)
   Selects the default database for database queries --returns bool--
maxdb_send_long_data
   Alias of maxdb_stmt_send_long_data() --returns ?--
maxdb_send_query(resource link, string query) bool send_query(string query)
   Send the query and return --returns bool--
maxdb_server_end(void)
   Shut down the embedded server --returns void--
maxdb_server_init ([ array server [, array groups ]])
   Initialize embedded server --returns bool--
maxdb_set_opt
   Alias of maxdb_options() --returns ?--
maxdb_sqlstate(resource link)
   Returns the SQLSTATE error from previous MaxDB operation --returns string--
maxdb_ssl_set(resource link, string key, string cert, string ca, string capath, string cipher) bool ssl_set(string key, string cert, string ca, string capath, string cipher)
   Used for establishing secure connections using SSL --returns bool--
maxdb_stat(resource link) string maxdb-&gt;stat(void)
   Gets the current system status --returns string--
maxdb_stmt_affected_rows(resource stmt)
   Returns the total number of rows changed, deleted, or inserted by the last executed statement --returns int--
maxdb_stmt_bind_param(resource stmt, string types, mixed &var1 [, mixed &... ]) bool bind_param(string types, mixed &var1 [, mixed &... ]) bool maxdb_stmt_bind_param(resource stmt, string types, array &var) bool bind_param(string types, array &var)
   Binds variables to a prepared statement as parameters --returns bool--
maxdb_stmt_bind_result(resource stmt, mixed &var1 [, mixed &... ]) bool bind_result(mixed &var1 [, mixed &... ])
   Binds variables to a prepared statement for result storage --returns bool--
maxdb_stmt_close_long_data(resource stmt, int param_nr) bool maxdb_stmt-&gt;close_long_data(void)
   Ends a sequence of maxdb_stmt_send_long_data() --returns bool--
maxdb_stmt_close(resource stmt) bool maxdb_stmt-&gt;close(void)
   Closes a prepared statement --returns bool--
maxdb_stmt_data_seek(resource statement, int offset) bool data_seek(int offset)
   Seeks to an arbitray row in statement result set --returns bool--
maxdb_stmt_errno(resource stmt)
   Returns the error code for the most recent statement call --returns int--
maxdb_stmt_error(resource stmt)
   Returns a string description for last statement error --returns string--
maxdb_stmt_execute(resource stmt) bool execute(void)
   Executes a prepared Query --returns bool--
maxdb_stmt_fetch(resource stmt) bool fetch(void)
   Fetch results from a prepared statement into the bound variables --returns bool--
maxdb_stmt_free_result(resource stmt) void free_result(void)
   Frees stored result memory for the given statement handle --returns void--
maxdb_stmt_init(resource link) object stmt_init(void)
   Initializes a statement and returns an resource for use with maxdb_stmt_prepare --returns resource--
maxdb_stmt_num_rows(resource stmt)
   Return the number of rows in statements result set --returns int--
maxdb_stmt_param_count(resource stmt)
   Returns the number of parameter for the given statement --returns int--
maxdb_stmt_prepare(resource stmt, string query) mixed prepare(string query)
   Prepare a SQL statement for execution --returns bool--
maxdb_stmt_reset(resource stmt) bool reset(void)
   Resets a prepared statement --returns bool--
maxdb_stmt_result_metadata(resource stmt) resource result_metadata(void)
   Returns result set metadata from a prepared statement --returns resource--
maxdb_stmt_send_long_data(resource stmt, int param_nr, string data) bool stmt_send_long_data(int param_nr, string data)
   Send data in blocks --returns bool--
maxdb_stmt_sqlstate(resource stmt)
   Returns SQLSTATE error from previous statement operation --returns string--
maxdb_stmt_store_result(resource stmt) object store_result(void)
   Transfers a result set from a prepared statement --returns bool--
maxdb_store_result(resource link) object store_result(void)
   Transfers a result set from the last query --returns resource--
maxdb_thread_id(resource link)
   Returns the thread ID for the current connection --returns int--
maxdb_thread_safe(void)
   Returns whether thread safety is given or not --returns bool--
maxdb_use_result(resource link) resource use_result(void)
   Initiate a result set retrieval --returns resource--
maxdb_warning_count(resource link)
   Returns the number of warnings from the last query for the given link --returns int--
mb_check_encoding ([ string var [, string encoding ]])
   Check if the string is valid for the specified encoding --returns bool--
mb_convert_case(string str, int mode [, string encoding ])
   Perform case folding on a string --returns string--
mb_convert_encoding(string str, string to_encoding [, mixed from_encoding ])
   Convert character encoding --returns string--
mb_convert_kana(string str [, string option [, string encoding ]])
   Convert &quot;kana&quot; one from another (&quot;zen-kaku&quot;, &quot;han-kaku&quot; and more) --returns string--
mb_convert_variables(string to_encoding, mixed from_encoding, mixed &vars [, mixed &... ])
   Convert character code in variable(s) --returns string--
mb_decode_mimeheader(string str)
   Decode string in MIME header field --returns string--
mb_decode_numericentity(string str, array convmap [, string encoding ])
   Decode HTML numeric string reference to character --returns string--
mb_detect_encoding(string str [, mixed encoding_list [, bool strict ]])
   Detect character encoding --returns string--
mb_detect_order ([ mixed encoding_list ])
   Set/Get character encoding detection order --returns mixed--
mb_encode_mimeheader(string str [, string charset [, string transfer_encoding [, string linefeed [, int indent ]]]])
   Encode string for MIME header --returns string--
mb_encode_numericentity(string str, array convmap [, string encoding ])
   Encode character to HTML numeric string reference --returns string--
mb_ereg_match(string pattern, string string [, string option ])
   Regular expression match for multibyte string --returns bool--
mb_ereg_replace(string pattern, string replacement, string string [, string option ])
   Replace regular expression with multibyte support --returns string--
mb_ereg_search_getpos(void)
   Returns start point for next regular expression match --returns int--
mb_ereg_search_getregs(void)
   Retrieve the result from the last multibyte regular expression match --returns array--
mb_ereg_search_init(string string [, string pattern [, string option ]])
   Setup string and regular expression for a multibyte regular expression match --returns bool--
mb_ereg_search_pos ([ string pattern [, string option ]])
   Returns position and length of a matched part of the multibyte regular expression for a predefined multibyte string --returns array--
mb_ereg_search_regs ([ string pattern [, string option ]])
   Returns the matched part of a multibyte regular expression --returns array--
mb_ereg_search_setpos(int position)
   Set start point of next regular expression match --returns bool--
mb_ereg_search ([ string pattern [, string option ]])
   Multibyte regular expression match for predefined multibyte string --returns bool--
mb_ereg(string pattern, string string [, array regs ])
   Regular expression match with multibyte support --returns int--
mb_eregi_replace(string pattern, string replace, string string [, string option ])
   Replace regular expression with multibyte support ignoring case --returns string--
mb_eregi(string pattern, string string [, array regs ])
   Regular expression match ignoring case with multibyte support --returns int--
mb_get_info ([ string type ])
   Get internal settings of mbstring --returns mixed--
mb_http_input ([ string type ])
   Detect HTTP input character encoding --returns mixed--
mb_http_output ([ string encoding ])
   Set/Get HTTP output character encoding --returns mixed--
mb_internal_encoding ([ string encoding ])
   Set/Get internal character encoding --returns mixed--
mb_language ([ string language ])
   Set/Get current language --returns mixed--
mb_list_encodings(void)
   Returns an array of all supported encodings --returns array--
mb_output_handler(string contents, int status)
   Callback function converts character encoding in output buffer --returns string--
mb_parse_str(string encoded_string [, array &result ])
   Parse GET/POST/COOKIE data and set global variable --returns bool--
mb_preferred_mime_name(string encoding)
   Get MIME charset string --returns string--
mb_regex_encoding ([ string encoding ])
   Returns current encoding for multibyte regex as string --returns mixed--
mb_regex_set_options ([ string options ])
   Set/Get the default options for mbregex functions --returns string--
mb_send_mail(string to, string subject, string message [, string additional_headers [, string additional_parameter ]])
   Send encoded mail --returns bool--
mb_split(string pattern, string string [, int limit ])
   Split multibyte string using regular expression --returns array--
mb_strcut(string str, int start [, int length [, string encoding ]])
   Get part of string --returns string--
mb_strimwidth(string str, int start, int width [, string trimmarker [, string encoding ]])
   Get truncated string with specified width --returns string--
mb_stripos(string haystack, string needle [, int offset [, string encoding ]])
   Finds position of first occurrence of a string within another, case insensitive --returns int--
mb_stristr(string haystack, string needle [, bool part [, string encoding ]])
   Finds first occurrence of a string within another, case insensitive --returns string--
mb_strlen(string str [, string encoding ])
   Get string length --returns int--
mb_strpos(string haystack, string needle [, int offset [, string encoding ]])
   Find position of first occurrence of string in a string --returns int--
mb_strrchr(string haystack, string needle [, bool part [, string encoding ]])
   Finds the last occurrence of a character in a string within another --returns string--
mb_strrichr(string haystack, string needle [, bool part [, string encoding ]])
   Finds the last occurrence of a character in a string within another, case insensitive --returns string--
mb_strripos(string haystack, string needle [, int offset [, string encoding ]])
   Finds position of last occurrence of a string within another, case insensitive --returns int--
mb_strrpos(string haystack, string needle [, int offset [, string encoding ]])
   Find position of last occurrence of a string in a string --returns int--
mb_strstr(string haystack, string needle [, bool part [, string encoding ]])
   Finds first occurrence of a string within another --returns string--
mb_strtolower(string str [, string encoding ])
   Make a string lowercase --returns string--
mb_strtoupper(string str [, string encoding ])
   Make a string uppercase --returns string--
mb_strwidth(string str [, string encoding ])
   Return width of string --returns int--
mb_substitute_character ([ mixed substrchar ])
   Set/Get substitution character --returns mixed--
mb_substr_count(string haystack, string needle [, string encoding ])
   Count the number of substring occurrences --returns int--
mb_substr(string str, int start [, int length [, string encoding ]])
   Get part of string --returns string--
mcrypt_cbc(int cipher, string key, string data, int mode [, string iv ]) string mcrypt_cbc(string cipher, string key, string data, int mode [, string iv ])
   Encrypt/decrypt data in CBC mode --returns string--
mcrypt_cfb(int cipher, string key, string data, int mode, string iv) string mcrypt_cfb(string cipher, string key, string data, int mode [, string iv ])
   Encrypt/decrypt data in CFB mode --returns string--
mcrypt_create_iv(int size [, int source ])
   Create an initialization vector (IV) from a random source --returns string--
mcrypt_decrypt(string cipher, string key, string data, string mode [, string iv ])
   Decrypts crypttext with given parameters --returns string--
mcrypt_ecb(int cipher, string key, string data, int mode) string mcrypt_ecb(string cipher, string key, string data, int mode [, string iv ])
   Deprecated: Encrypt/decrypt data in ECB mode --returns string--
mcrypt_enc_get_algorithms_name(resource td)
   Returns the name of the opened algorithm --returns string--
mcrypt_enc_get_block_size(resource td)
   Returns the blocksize of the opened algorithm --returns int--
mcrypt_enc_get_iv_size(resource td)
   Returns the size of the IV of the opened algorithm --returns int--
mcrypt_enc_get_key_size(resource td)
   Returns the maximum supported keysize of the opened mode --returns int--
mcrypt_enc_get_modes_name(resource td)
   Returns the name of the opened mode --returns string--
mcrypt_enc_get_supported_key_sizes(resource td)
   Returns an array with the supported keysizes of the opened algorithm --returns array--
mcrypt_enc_is_block_algorithm_mode(resource td)
   Checks whether the encryption of the opened mode works on blocks --returns bool--
mcrypt_enc_is_block_algorithm(resource td)
   Checks whether the algorithm of the opened mode is a block algorithm --returns bool--
mcrypt_enc_is_block_mode(resource td)
   Checks whether the opened mode outputs blocks --returns bool--
mcrypt_enc_self_test(resource td)
   Runs a self test on the opened module --returns int--
mcrypt_encrypt(string cipher, string key, string data, string mode [, string iv ])
   Encrypts plaintext with given parameters --returns string--
mcrypt_generic_deinit(resource td)
   This function deinitializes an encryption module --returns bool--
mcrypt_generic_end(resource td)
   This function terminates encryption --returns bool--
mcrypt_generic_init(resource td, string key, string iv)
   This function initializes all buffers needed for encryption --returns int--
mcrypt_generic(resource td, string data)
   This function encrypts data --returns string--
mcrypt_get_block_size(int cipher) int mcrypt_get_block_size(string cipher, string module)
   Get the block size of the specified cipher --returns int--
mcrypt_get_cipher_name(int cipher) string mcrypt_get_cipher_name(string cipher)
   Get the name of the specified cipher --returns string--
mcrypt_get_iv_size(string cipher, string mode)
   Returns the size of the IV belonging to a specific cipher/mode combination --returns int--
mcrypt_get_key_size(int cipher) int mcrypt_get_key_size(string cipher, string module)
   Get the key size of the specified cipher --returns int--
mcrypt_list_algorithms ([ string lib_dir ])
   Get an array of all supported ciphers --returns array--
mcrypt_list_modes ([ string lib_dir ])
   Get an array of all supported modes --returns array--
mcrypt_module_close(resource td)
   Close the mcrypt module --returns bool--
mcrypt_module_get_algo_block_size(string algorithm [, string lib_dir ])
   Returns the blocksize of the specified algorithm --returns int--
mcrypt_module_get_algo_key_size(string algorithm [, string lib_dir ])
   Returns the maximum supported keysize of the opened mode --returns int--
mcrypt_module_get_supported_key_sizes(string algorithm [, string lib_dir ])
   Returns an array with the supported keysizes of the opened algorithm --returns array--
mcrypt_module_is_block_algorithm_mode(string mode [, string lib_dir ])
   Returns if the specified module is a block algorithm or not --returns bool--
mcrypt_module_is_block_algorithm(string algorithm [, string lib_dir ])
   This function checks whether the specified algorithm is a block algorithm --returns bool--
mcrypt_module_is_block_mode(string mode [, string lib_dir ])
   Returns if the specified mode outputs blocks or not --returns bool--
mcrypt_module_open(string algorithm, string algorithm_directory, string mode, string mode_directory)
   Opens the module of the algorithm and the mode to be used --returns resource--
mcrypt_module_self_test(string algorithm [, string lib_dir ])
   This function runs a self test on the specified module --returns bool--
mcrypt_ofb(int cipher, string key, string data, int mode, string iv) string mcrypt_ofb(string cipher, string key, string data, int mode [, string iv ])
   Encrypt/decrypt data in OFB mode --returns string--
md5_file(string filename [, bool raw_output ])
   Calculates the md5 hash of a given file --returns string--
md5(string str [, bool raw_output ])
   Calculate the md5 hash of a string --returns string--
mdecrypt_generic(resource td, string data)
   Decrypt data --returns string--
Memcache::add(string key, mixed var [, int flag [, int expire ]])
   Add an item to the server --returns bool--
Memcache::addServer(string host [, int port [, bool persistent [, int weight [, int timeout [, int retry_interval [, bool status [, callback failure_callback ]]]]]]])
   Add a memcached server to connection pool --returns bool--
Memcache::close(void)
   Close memcached server connection --returns bool--
Memcache::connect(string host [, int port [, int timeout ]])
   Open memcached server connection --returns bool--
memcache_debug(bool on_off)
   Turn debug output on/off --returns bool--
Memcache::decrement(string key [, int value ])
   Decrement item's value --returns int--
Memcache::delete(string key [, int timeout ])
   Delete item from the server --returns bool--
Memcache::flush(void)
   Flush all existing items at the server --returns bool--
Memcache::get(string key [, int &flags ]) array Memcache::get(array keys [, array &flags ])
   Retrieve item from the server --returns string--
Memcache::getExtendedStats ([ string type [, int slabid [, int limit ]]])
   Get statistics from all servers in pool --returns array--
Memcache::getServerStatus(string host [, int port ])
   Returns server status --returns int--
Memcache::getStats ([ string type [, int slabid [, int limit ]]])
   Get statistics of the server --returns array--
Memcache::getVersion(void)
   Return version of the server --returns string--
Memcache::increment(string key [, int value ])
   Increment item's value --returns int--
Memcache::pconnect(string host [, int port [, int timeout ]])
   Open memcached server persistent connection --returns bool--
Memcache::replace(string key, mixed var [, int flag [, int expire ]])
   Replace value of the existing item --returns bool--
Memcache::set(string key, mixed var [, int flag [, int expire ]])
   Store data at the server --returns bool--
Memcache::setCompressThreshold(int threshold [, float min_savings ])
   Enable automatic compression of large values --returns bool--
Memcache::setServerParams(string host [, int port [, int timeout [, int retry_interval [, bool status [, callback failure_callback ]]]]])
   Changes server parameters and status at runtime --returns bool--
memory_get_peak_usage ([ bool real_usage ])
   Returns the peak of memory allocated by PHP --returns int--
memory_get_usage ([ bool real_usage ])
   Returns the amount of memory allocated to PHP --returns int--
metaphone(string str [, int phones ])
   Calculate the metaphone key of a string --returns string--
method_exists(mixed object, string method_name)
   Checks if the class method exists --returns bool--
mhash_count(void)
   Get the highest available hash id --returns int--
mhash_get_block_size(int hash)
   Get the block size of the specified hash --returns int--
mhash_get_hash_name(int hash)
   Get the name of the specified hash --returns string--
mhash_keygen_s2k(int hash, string password, string salt, int bytes)
   Generates a key --returns string--
mhash(int hash, string data [, string key ])
   Compute hash --returns string--
microtime ([ bool get_as_float ])
   Return current Unix timestamp with microseconds --returns mixed--
mime_content_type(string filename)
   Detect MIME Content-type for a file (deprecated) --returns string--
min(array values) mixed min(mixed value1, mixed value2 [, mixed value3... ])
   Find lowest value --returns mixed--
ming_keypress(string char)
   Returns the action flag for keyPress(char) --returns int--
ming_setcubicthreshold(int threshold)
   Set cubic threshold --returns void--
ming_setscale(int scale)
   Set the global scaling factor. --returns void--
ming_setswfcompression(int level)
   Sets the SWF output compression --returns void--
ming_useconstants(int use)
   Use constant pool --returns void--
ming_useswfversion(int version)
   Sets the SWF version --returns void--
mkdir(string pathname [, int mode [, bool recursive [, resource context ]]])
   Makes directory --returns bool--
mktime ([ int hour [, int minute [, int second [, int month [, int day [, int year [, int is_dst ]]]]]]])
   Get Unix timestamp for a date --returns int--
money_format(string format, float number)
   Formats a number as a currency string --returns string--
move_uploaded_file(string filename, string destination)
   Moves an uploaded file to a new location --returns bool--
( resource hconn, resource compCode, resource reason)
   MQSeries MQBACK --returns mqseries_back--
( resource hconn, array beginOptions, resource compCode, resource reason)
   MQseries MQBEGIN --returns mqseries_begin--
( resource hconn, resource hobj, resource compCode, resource reason)
   MQSeries MQCLOSE --returns mqseries_close--
( resource hconn, resource compCode, resource reason)
   MQSeries MQCMIT --returns mqseries_cmit--
( string qManagerName, resource hconn, resource compCode, resource reason)
   MQSeries MQCONN --returns mqseries_conn--
( string qManagerName, array connOptions, resource hconn, resource compCode, resource reason)
   MQSeries MQCONNX --returns mqseries_connx--
( resource hconn, resource compCode, resource reason)
   MQSeries MQDISC --returns mqseries_disc--
( resource hConn, resource hObj, array md, array gmo, int bufferLength, string &msg, int &data_length, resource &compCode, resource reason)
   MQSeries MQGET --returns mqseries_get--
( resource hconn, resource hobj, int selectorCount, array selectors, int intAttrCount, resource intAttr, int charAttrLength, resource charAttr, resource compCode, resource reason)
   MQSeries MQINQ --returns mqseries_inq--
( resource hconn, array objDesc, int option, resource hobj, resource compCode, resource reason)
   MQSeries MQOPEN --returns mqseries_open--
( resource hConn, resource hObj, array md, array pmo, string message, resource compCode, resource reason)
   MQSeries MQPUT --returns mqseries_put--
( resource hconn, resource objDesc, resource msgDesc, resource pmo, string buffer, resource compCode, resource reason)
   MQSeries MQPUT1 --returns mqseries_put1--
( resource hconn, resource compCode, resource reason)
   MQSeries MQSET --returns mqseries_set--
mqseries_strerror(int reason)
   Returns the error message corresponding to a result code (MQRC). --returns string--
msession_connect(string host, string port)
   Connect to msession server --returns bool--
msession_count(void)
   Get session count --returns int--
msession_create(string session, string classname, string data)
   Create a session --returns bool--
msession_destroy(string name)
   Destroy a session --returns bool--
msession_disconnect(void)
   Close connection to msession server --returns void--
msession_find(string name, string value)
   Find all sessions with name and value --returns array--
msession_get_array(string session)
   Get array of msession variables --returns array--
msession_get_data(string session)
   Get data session unstructured data --returns string--
msession_get(string session, string name, string value)
   Get value from session --returns string--
msession_inc(string session, string name)
   Increment value in session --returns string--
msession_list(void)
   List all sessions --returns array--
msession_listvar(string name)
   List sessions with variable --returns array--
msession_lock(string name)
   Lock a session --returns int--
msession_plugin(string session, string val [, string param ])
   Call an escape function within the msession personality plugin --returns string--
msession_randstr(int param)
   Get random string --returns string--
msession_set_array(string session, array tuples)
   Set msession variables from an array --returns void--
msession_set_data(string session, string value)
   Set data session unstructured data --returns bool--
msession_set(string session, string name, string value)
   Set value in session --returns bool--
msession_timeout(string session [, int param ])
   Set/get session timeout --returns int--
msession_uniq(int param, string classname, string data)
   Get unique id --returns string--
msession_unlock(string session, int key)
   Unlock a session --returns int--
msg_get_queue(int key [, int perms ])
   Create or attach to a message queue --returns resource--
msg_queue_exists(int key)
   Check wether a message queue exists --returns bool--
msg_receive(resource queue, int desiredmsgtype, int &msgtype, int maxsize, mixed &message [, bool unserialize [, int flags [, int &errorcode ]]])
   Receive a message from a message queue --returns bool--
msg_remove_queue(resource queue)
   Destroy a message queue --returns bool--
msg_send(resource queue, int msgtype, mixed message [, bool serialize [, bool blocking [, int &errorcode ]]])
   Send a message to a message queue --returns bool--
msg_set_queue(resource queue, array data)
   Set information in the message queue data structure --returns bool--
msg_stat_queue(resource queue)
   Returns information from the message queue data structure --returns array--
msql_affected_rows(resource result)
   Returns number of affected rows --returns int--
msql_close ([ resource link_identifier ])
   Close mSQL connection --returns bool--
msql_connect ([ string hostname ])
   Open mSQL connection --returns resource--
msql_create_db(string database_name [, resource link_identifier ])
   Create mSQL database --returns bool--
msql_createdb
   Alias of msql_create_db() --returns ?--
msql_data_seek(resource result, int row_number)
   Move internal row pointer --returns bool--
msql_db_query(string database, string query [, resource link_identifier ])
   Send mSQL query --returns resource--
msql_dbname
   Alias of msql_result() --returns ?--
msql_drop_db(string database_name [, resource link_identifier ])
   Drop (delete) mSQL database --returns bool--
msql_error(void)
   Returns error message of last msql call --returns string--
msql_fetch_array(resource result [, int result_type ])
   Fetch row as array --returns array--
msql_fetch_field(resource result [, int field_offset ])
   Get field information --returns object--
msql_fetch_object(resource result)
   Fetch row as object --returns object--
msql_fetch_row(resource result)
   Get row as enumerated array --returns array--
msql_field_flags(resource result, int field_offset)
   Get field flags --returns string--
msql_field_len(resource result, int field_offset)
   Get field length --returns int--
msql_field_name(resource result, int field_offset)
   Get the name of the specified field in a result --returns string--
msql_field_seek(resource result, int field_offset)
   Set field offset --returns bool--
msql_field_table(resource result, int field_offset)
   Get table name for field --returns int--
msql_field_type(resource result, int field_offset)
   Get field type --returns string--
msql_fieldflags
   Alias of msql_field_flags() --returns ?--
msql_fieldlen
   Alias of msql_field_len() --returns ?--
msql_fieldname
   Alias of msql_field_name() --returns ?--
msql_fieldtable
   Alias of msql_field_table() --returns ?--
msql_fieldtype
   Alias of msql_field_type() --returns ?--
msql_free_result(resource result)
   Free result memory --returns bool--
msql_list_dbs ([ resource link_identifier ])
   List mSQL databases on server --returns resource--
msql_list_fields(string database, string tablename [, resource link_identifier ])
   List result fields --returns resource--
msql_list_tables(string database [, resource link_identifier ])
   List tables in an mSQL database --returns resource--
msql_num_fields(resource result)
   Get number of fields in result --returns int--
msql_num_rows(resource query_identifier)
   Get number of rows in result --returns int--
msql_numfields
   Alias of msql_num_fields() --returns ?--
msql_numrows
   Alias of msql_num_rows() --returns ?--
msql_pconnect ([ string hostname ])
   Open persistent mSQL connection --returns resource--
msql_query(string query [, resource link_identifier ])
   Send mSQL query --returns resource--
msql_regcase
   Alias of sql_regcase() --returns ?--
msql_result(resource result, int row [, mixed field ])
   Get result data --returns string--
msql_select_db(string database_name [, resource link_identifier ])
   Select mSQL database --returns bool--
msql_tablename
   Alias of msql_result() --returns ?--
msql
   Alias of msql_db_query() --returns ?--
mssql_bind(resource stmt, string param_name, mixed &var, int type [, bool is_output [, bool is_null [, int maxlen ]]])
   Adds a parameter to a stored procedure or a remote stored procedure --returns bool--
mssql_close ([ resource link_identifier ])
   Close MS SQL Server connection --returns bool--
mssql_connect ([ string servername [, string username [, string password [, bool new_link ]]]])
   Open MS SQL server connection --returns resource--
mssql_data_seek(resource result_identifier, int row_number)
   Moves internal row pointer --returns bool--
mssql_execute(resource stmt [, bool skip_results ])
   Executes a stored procedure on a MS SQL server database --returns mixed--
mssql_fetch_array(resource result [, int result_type ])
   Fetch a result row as an associative array, a numeric array, or both --returns array--
mssql_fetch_assoc(resource result_id)
   Returns an associative array of the current row in the result --returns array--
mssql_fetch_batch(resource result)
   Returns the next batch of records --returns int--
mssql_fetch_field(resource result [, int field_offset ])
   Get field information --returns object--
mssql_fetch_object(resource result)
   Fetch row as object --returns object--
mssql_fetch_row(resource result)
   Get row as enumerated array --returns array--
mssql_field_length(resource result [, int offset ])
   Get the length of a field --returns int--
mssql_field_name(resource result [, int offset ])
   Get the name of a field --returns string--
mssql_field_seek(resource result, int field_offset)
   Seeks to the specified field offset --returns bool--
mssql_field_type(resource result [, int offset ])
   Gets the type of a field --returns string--
mssql_free_result(resource result)
   Free result memory --returns bool--
mssql_free_statement(resource stmt)
   Free statement memory --returns bool--
mssql_get_last_message(void)
   Returns the last message from the server --returns string--
mssql_guid_string(string binary [, bool short_format ])
   Converts a 16 byte binary GUID to a string --returns string--
mssql_init(string sp_name [, resource link_identifier ])
   Initializes a stored procedure or a remote stored procedure --returns resource--
mssql_min_error_severity(int severity)
   Sets the minimum error severity --returns void--
mssql_min_message_severity(int severity)
   Sets the minimum message severity --returns void--
mssql_next_result(resource result_id)
   Move the internal result pointer to the next result --returns bool--
mssql_num_fields(resource result)
   Gets the number of fields in result --returns int--
mssql_num_rows(resource result)
   Gets the number of rows in result --returns int--
mssql_pconnect ([ string servername [, string username [, string password [, bool new_link ]]]])
   Open persistent MS SQL connection --returns resource--
mssql_query(string query [, resource link_identifier [, int batch_size ]])
   Send MS SQL query --returns mixed--
mssql_result(resource result, int row, mixed field)
   Get result data --returns string--
mssql_rows_affected(resource link_identifier)
   Returns the number of records affected by the query --returns int--
mssql_select_db(string database_name [, resource link_identifier ])
   Select MS SQL database --returns bool--
mt_getrandmax(void)
   Show largest possible random value --returns int--
mt_rand(void) int mt_rand(int min, int max)
   Generate a better random value --returns int--
mt_srand ([ int seed ])
   Seed the better random number generator --returns void--
mysql_affected_rows ([ resource link_identifier ])
   Get number of affected rows in previous MySQL operation --returns int--
mysql_change_user(string user, string password [, string database [, resource link_identifier ]])
   Change logged in user of the active connection --returns int--
mysql_client_encoding ([ resource link_identifier ])
   Returns the name of the character set --returns string--
mysql_close ([ resource link_identifier ])
   Close MySQL connection --returns bool--
mysql_connect ([ string server [, string username [, string password [, bool new_link [, int client_flags ]]]]])
   Open a connection to a MySQL Server --returns resource--
mysql_create_db(string database_name [, resource link_identifier ])
   Create a MySQL database --returns bool--
mysql_data_seek(resource result, int row_number)
   Move internal result pointer --returns bool--
mysql_db_name(resource result, int row [, mixed field ])
   Get result data --returns string--
mysql_db_query(string database, string query [, resource link_identifier ])
   Send a MySQL query --returns resource--
mysql_drop_db(string database_name [, resource link_identifier ])
   Drop (delete) a MySQL database --returns bool--
mysql_errno ([ resource link_identifier ])
   Returns the numerical value of the error message from previous MySQL operation --returns int--
mysql_error ([ resource link_identifier ])
   Returns the text of the error message from previous MySQL operation --returns string--
mysql_escape_string(string unescaped_string)
   Escapes a string for use in a mysql_query --returns string--
mysql_fetch_array(resource result [, int result_type ])
   Fetch a result row as an associative array, a numeric array, or both --returns array--
mysql_fetch_assoc(resource result)
   Fetch a result row as an associative array --returns array--
mysql_fetch_field(resource result [, int field_offset ])
   Get column information from a result and return as an object --returns object--
mysql_fetch_lengths(resource result)
   Get the length of each output in a result --returns array--
mysql_fetch_object(resource result [, string class_name [, array params ]])
   Fetch a result row as an object --returns object--
mysql_fetch_row(resource result)
   Get a result row as an enumerated array --returns array--
mysql_field_flags(resource result, int field_offset)
   Get the flags associated with the specified field in a result --returns string--
mysql_field_len(resource result, int field_offset)
   Returns the length of the specified field --returns int--
mysql_field_name(resource result, int field_offset)
   Get the name of the specified field in a result --returns string--
mysql_field_seek(resource result, int field_offset)
   Set result pointer to a specified field offset --returns bool--
mysql_field_table(resource result, int field_offset)
   Get name of the table the specified field is in --returns string--
mysql_field_type(resource result, int field_offset)
   Get the type of the specified field in a result --returns string--
mysql_free_result(resource result)
   Free result memory --returns bool--
mysql_get_client_info(void)
   Get MySQL client info --returns string--
mysql_get_host_info ([ resource link_identifier ])
   Get MySQL host info --returns string--
mysql_get_proto_info ([ resource link_identifier ])
   Get MySQL protocol info --returns int--
mysql_get_server_info ([ resource link_identifier ])
   Get MySQL server info --returns string--
mysql_info ([ resource link_identifier ])
   Get information about the most recent query --returns string--
mysql_insert_id ([ resource link_identifier ])
   Get the ID generated from the previous INSERT operation --returns int--
mysql_list_dbs ([ resource link_identifier ])
   List databases available on a MySQL server --returns resource--
mysql_list_fields(string database_name, string table_name [, resource link_identifier ])
   List MySQL table fields --returns resource--
mysql_list_processes ([ resource link_identifier ])
   List MySQL processes --returns resource--
mysql_list_tables(string database [, resource link_identifier ])
   List tables in a MySQL database --returns resource--
mysql_num_fields(resource result)
   Get number of fields in result --returns int--
mysql_num_rows(resource result)
   Get number of rows in result --returns int--
mysql_pconnect ([ string server [, string username [, string password [, int client_flags ]]]])
   Open a persistent connection to a MySQL server --returns resource--
mysql_ping ([ resource link_identifier ])
   Ping a server connection or reconnect if there is no connection --returns bool--
mysql_query(string query [, resource link_identifier ])
   Send a MySQL query --returns resource--
mysql_real_escape_string(string unescaped_string [, resource link_identifier ])
   Escapes special characters in a string for use in a SQL statement --returns string--
mysql_result(resource result, int row [, mixed field ])
   Get result data --returns string--
mysql_select_db(string database_name [, resource link_identifier ])
   Select a MySQL database --returns bool--
mysql_set_charset(string charset [, resource link_identifier ])
   Sets the client character set --returns bool--
mysql_stat ([ resource link_identifier ])
   Get current system status --returns string--
mysql_tablename(resource result, int i)
   Get table name of field --returns string--
mysql_thread_id ([ resource link_identifier ])
   Return the current thread ID --returns int--
mysql_unbuffered_query(string query [, resource link_identifier ])
   Send an SQL query to MySQL, without fetching and buffering the result rows --returns resource--
mysqli_bind_param
   Alias for mysqli_stmt_bind_param() --returns ?--
mysqli_bind_result
   Alias for mysqli_stmt_bind_result() --returns ?--
mysqli_client_encoding
   Alias of mysqli_character_set_name() --returns ?--
mysqli_disable_reads_from_master(mysqli link) void disable_reads_from_master(void)
   Disable reads from master --returns bool--
mysqli_disable_rpl_parse(mysqli link)
   Disable RPL parse --returns bool--
mysqli_enable_reads_from_master(mysqli link)
   Enable reads from master --returns bool--
mysqli_enable_rpl_parse(mysqli link)
   Enable RPL parse --returns bool--
mysqli_escape_string
   Alias of mysqli_real_escape_string() --returns ?--
mysqli_execute
   Alias for mysqli_stmt_execute() --returns ?--
mysqli_fetch
   Alias for mysqli_stmt_fetch() --returns ?--
mysqli_get_metadata
   Alias for mysqli_stmt_result_metadata() --returns ?--
mysqli_master_query(mysqli link, string query)
   Enforce execution of a query on the master in a master/slave setup --returns bool--
mysqli_param_count
   Alias for mysqli_stmt_param_count() --returns ?--
mysqli_report(int flags)
   Enables or disables internal report functions --returns bool--
mysqli_rpl_parse_enabled(mysqli link)
   Check if RPL parse is enabled --returns int--
mysqli_rpl_probe(mysqli link)
   RPL probe --returns bool--
mysqli_rpl_query_type(mysqli link, string query) int rpl_query_type(string query)
   Returns RPL query type --returns int--
mysqli_send_long_data
   Alias for mysqli_stmt_send_long_data() --returns ?--
mysqli_send_query(mysqli link, string query) bool send_query(string query)
   Send the query and return --returns bool--
mysqli_set_opt
   Alias of mysqli_options() --returns ?--
mysqli_slave_query(mysqli link, string query)
   Force execution of a query on a slave in a master/slave setup --returns bool--
natcasesort(array &array)
   Sort an array using a case insensitive &quot;natural order&quot; algorithm --returns bool--
natsort(array &array)
   Sort an array using a &quot;natural order&quot; algorithm --returns bool--
ncurses_addch(int ch)
   Add character at current position and advance cursor --returns int--
ncurses_addchnstr(string s, int n)
   Add attributed string with specified length at current position --returns int--
ncurses_addchstr(string s)
   Add attributed string at current position --returns int--
ncurses_addnstr(string s, int n)
   Add string with specified length at current position --returns int--
ncurses_addstr(string text)
   Output text at current position --returns int--
ncurses_assume_default_colors(int fg, int bg)
   Define default colors for color 0 --returns int--
ncurses_attroff(int attributes)
   Turn off the given attributes --returns int--
ncurses_attron(int attributes)
   Turn on the given attributes --returns int--
ncurses_attrset(int attributes)
   Set given attributes --returns int--
ncurses_baudrate(void)
   Returns baudrate of terminal --returns int--
ncurses_beep(void)
   Let the terminal beep --returns int--
ncurses_bkgd(int attrchar)
   Set background property for terminal screen --returns int--
ncurses_bkgdset(int attrchar)
   Control screen background --returns void--
ncurses_border(int left, int right, int top, int bottom, int tl_corner, int tr_corner, int bl_corner, int br_corner)
   Draw a border around the screen using attributed characters --returns int--
ncurses_bottom_panel(resource panel)
   Moves a visible panel to the bottom of the stack --returns int--
ncurses_can_change_color(void)
   Check if we can change terminals colors --returns bool--
ncurses_cbreak(void)
   Switch of input buffering --returns bool--
ncurses_clear(void)
   Clear screen --returns bool--
ncurses_clrtobot(void)
   Clear screen from current position to bottom --returns bool--
ncurses_clrtoeol(void)
   Clear screen from current position to end of line --returns bool--
ncurses_color_content(int color, int &r, int &g, int &b)
   Gets the RGB value for color --returns int--
ncurses_color_set(int pair)
   Set fore- and background color --returns int--
ncurses_curs_set(int visibility)
   Set cursor state --returns int--
ncurses_def_prog_mode(void)
   Saves terminals (program) mode --returns bool--
ncurses_def_shell_mode(void)
   Saves terminals (shell) mode --returns bool--
ncurses_define_key(string definition, int keycode)
   Define a keycode --returns int--
ncurses_del_panel(resource panel)
   Remove panel from the stack and delete it (but not the associated window) --returns bool--
ncurses_delay_output(int milliseconds)
   Delay output on terminal using padding characters --returns int--
ncurses_delch(void)
   Delete character at current position, move rest of line left --returns bool--
ncurses_deleteln(void)
   Delete line at current position, move rest of screen up --returns bool--
ncurses_delwin(resource window)
   Delete a ncurses window --returns bool--
ncurses_doupdate(void)
   Write all prepared refreshes to terminal --returns bool--
ncurses_echo(void)
   Activate keyboard input echo --returns bool--
ncurses_echochar(int character)
   Single character output including refresh --returns int--
ncurses_end(void)
   Stop using ncurses, clean up the screen --returns int--
ncurses_erase(void)
   Erase terminal screen --returns bool--
ncurses_erasechar(void)
   Returns current erase character --returns string--
ncurses_filter(void)
   Set LINES for iniscr() and newterm() to 1 --returns void--
ncurses_flash(void)
   Flash terminal screen (visual bell) --returns bool--
ncurses_flushinp(void)
   Flush keyboard input buffer --returns bool--
ncurses_getch(void)
   Read a character from keyboard --returns int--
ncurses_getmaxyx(resource window, int &y, int &x)
   Returns the size of a window --returns void--
ncurses_getmouse(array &mevent)
   Reads mouse event --returns bool--
ncurses_getyx(resource window, int &y, int &x)
   Returns the current cursor position for a window --returns void--
ncurses_halfdelay(int tenth)
   Put terminal into halfdelay mode --returns int--
ncurses_has_colors(void)
   Check if terminal has colors --returns bool--
ncurses_has_ic(void)
   Check for insert- and delete-capabilities --returns bool--
ncurses_has_il(void)
   Check for line insert- and delete-capabilities --returns bool--
ncurses_has_key(int keycode)
   Check for presence of a function key on terminal keyboard --returns int--
ncurses_hide_panel(resource panel)
   Remove panel from the stack, making it invisible --returns int--
ncurses_hline(int charattr, int n)
   Draw a horizontal line at current position using an attributed character and max. n characters long --returns int--
ncurses_inch(void)
   Get character and attribute at current position --returns string--
ncurses_init_color(int color, int r, int g, int b)
   Set new RGB value for color --returns int--
ncurses_init_pair(int pair, int fg, int bg)
   Allocate a color pair --returns int--
ncurses_init(void)
   Initialize ncurses --returns void--
ncurses_insch(int character)
   Insert character moving rest of line including character at current position --returns int--
ncurses_insdelln(int count)
   Insert lines before current line scrolling down (negative numbers delete and scroll up) --returns int--
ncurses_insertln(void)
   Insert a line, move rest of screen down --returns int--
ncurses_insstr(string text)
   Insert string at current position, moving rest of line right --returns int--
ncurses_instr(string &buffer)
   Reads string from terminal screen --returns int--
ncurses_isendwin(void)
   Ncurses is in endwin mode, normal screen output may be performed --returns bool--
ncurses_keyok(int keycode, bool enable)
   Enable or disable a keycode --returns int--
ncurses_keypad(resource window, bool bf)
   Turns keypad on or off --returns int--
ncurses_killchar(void)
   Returns current line kill character --returns string--
ncurses_longname(void)
   Returns terminals description --returns string--
ncurses_meta(resource window, bool 8bit)
   Enables/Disable 8-bit meta key information --returns int--
ncurses_mouse_trafo(int &y, int &x, bool toscreen)
   Transforms coordinates --returns bool--
ncurses_mouseinterval(int milliseconds)
   Set timeout for mouse button clicks --returns int--
ncurses_mousemask(int newmask, int &oldmask)
   Sets mouse options --returns int--
ncurses_move_panel(resource panel, int startx, int starty)
   Moves a panel so that its upper-left corner is at [startx, starty] --returns int--
ncurses_move(int y, int x)
   Move output position --returns int--
ncurses_mvaddch(int y, int x, int c)
   Move current position and add character --returns int--
ncurses_mvaddchnstr(int y, int x, string s, int n)
   Move position and add attributed string with specified length --returns int--
ncurses_mvaddchstr(int y, int x, string s)
   Move position and add attributed string --returns int--
ncurses_mvaddnstr(int y, int x, string s, int n)
   Move position and add string with specified length --returns int--
ncurses_mvaddstr(int y, int x, string s)
   Move position and add string --returns int--
ncurses_mvcur(int old_y, int old_x, int new_y, int new_x)
   Move cursor immediately --returns int--
ncurses_mvdelch(int y, int x)
   Move position and delete character, shift rest of line left --returns int--
ncurses_mvgetch(int y, int x)
   Move position and get character at new position --returns int--
ncurses_mvhline(int y, int x, int attrchar, int n)
   Set new position and draw a horizontal line using an attributed character and max. n characters long --returns int--
ncurses_mvinch(int y, int x)
   Move position and get attributed character at new position --returns int--
ncurses_mvvline(int y, int x, int attrchar, int n)
   Set new position and draw a vertical line using an attributed character and max. n characters long --returns int--
ncurses_mvwaddstr(resource window, int y, int x, string text)
   Add string at new position in window --returns int--
ncurses_napms(int milliseconds)
   Sleep --returns int--
ncurses_new_panel(resource window)
   Create a new panel and associate it with window --returns resource--
ncurses_newpad(int rows, int cols)
   Creates a new pad (window) --returns resource--
ncurses_newwin(int rows, int cols, int y, int x)
   Create a new window --returns resource--
ncurses_nl(void)
   Translate newline and carriage return / line feed --returns bool--
ncurses_nocbreak(void)
   Switch terminal to cooked mode --returns bool--
ncurses_noecho(void)
   Switch off keyboard input echo --returns bool--
ncurses_nonl(void)
   Do not translate newline and carriage return / line feed --returns bool--
ncurses_noqiflush(void)
   Do not flush on signal characters --returns void--
ncurses_noraw(void)
   Switch terminal out of raw mode --returns bool--
ncurses_pair_content(int pair, int &f, int &b)
   Gets the RGB value for color --returns int--
ncurses_panel_above(resource panel)
   Returns the panel above panel --returns resource--
ncurses_panel_below(resource panel)
   Returns the panel below panel --returns resource--
ncurses_panel_window(resource panel)
   Returns the window associated with panel --returns resource--
ncurses_pnoutrefresh(resource pad, int pminrow, int pmincol, int sminrow, int smincol, int smaxrow, int smaxcol)
   Copies a region from a pad into the virtual screen --returns int--
ncurses_prefresh(resource pad, int pminrow, int pmincol, int sminrow, int smincol, int smaxrow, int smaxcol)
   Copies a region from a pad into the virtual screen --returns int--
ncurses_putp(string text)
   Apply padding information to the string and output it --returns int--
ncurses_qiflush(void)
   Flush on signal characters --returns void--
ncurses_raw(void)
   Switch terminal into raw mode --returns bool--
ncurses_refresh(int ch)
   Refresh screen --returns int--
ncurses_replace_panel(resource panel, resource window)
   Replaces the window associated with panel --returns int--
ncurses_reset_prog_mode(void)
   Resets the prog mode saved by def_prog_mode --returns int--
ncurses_reset_shell_mode(void)
   Resets the shell mode saved by def_shell_mode --returns int--
ncurses_resetty(void)
   Restores saved terminal state --returns bool--
ncurses_savetty(void)
   Saves terminal state --returns bool--
ncurses_scr_dump(string filename)
   Dump screen content to file --returns int--
ncurses_scr_init(string filename)
   Initialize screen from file dump --returns int--
ncurses_scr_restore(string filename)
   Restore screen from file dump --returns int--
ncurses_scr_set(string filename)
   Inherit screen from file dump --returns int--
ncurses_scrl(int count)
   Scroll window content up or down without changing current position --returns int--
ncurses_show_panel(resource panel)
   Places an invisible panel on top of the stack, making it visible --returns int--
ncurses_slk_attr(void)
   Returns current soft label key attribute --returns int--
ncurses_slk_attroff(int intarg)
   Turn off the given attributes for soft function-key labels --returns int--
ncurses_slk_attron(int intarg)
   Turn on the given attributes for soft function-key labels --returns int--
ncurses_slk_attrset(int intarg)
   Set given attributes for soft function-key labels --returns int--
ncurses_slk_clear(void)
   Clears soft labels from screen --returns bool--
ncurses_slk_color(int intarg)
   Sets color for soft label keys --returns int--
ncurses_slk_init(int format)
   Initializes soft label key functions --returns bool--
ncurses_slk_noutrefresh(void)
   Copies soft label keys to virtual screen --returns bool--
ncurses_slk_refresh(void)
   Copies soft label keys to screen --returns int--
ncurses_slk_restore(void)
   Restores soft label keys --returns int--
ncurses_slk_set(int labelnr, string label, int format)
   Sets function key labels --returns bool--
ncurses_slk_touch(void)
   Forces output when ncurses_slk_noutrefresh is performed --returns int--
ncurses_standend(void)
   Stop using 'standout' attribute --returns int--
ncurses_standout(void)
   Start using 'standout' attribute --returns int--
ncurses_start_color(void)
   Start using colors --returns int--
ncurses_termattrs(void)
   Returns a logical OR of all attribute flags supported by terminal --returns bool--
ncurses_termname(void)
   Returns terminals (short)-name --returns string--
ncurses_timeout(int millisec)
   Set timeout for special key sequences --returns void--
ncurses_top_panel(resource panel)
   Moves a visible panel to the top of the stack --returns int--
ncurses_typeahead(int fd)
   Specify different filedescriptor for typeahead checking --returns int--
ncurses_ungetch(int keycode)
   Put a character back into the input stream --returns int--
ncurses_ungetmouse(array mevent)
   Pushes mouse event to queue --returns bool--
ncurses_update_panels(void)
   Refreshes the virtual screen to reflect the relations between panels in the stack --returns void--
ncurses_use_default_colors(void)
   Assign terminal default colors to color id -1 --returns bool--
ncurses_use_env(bool flag)
   Control use of environment information about terminal size --returns void--
ncurses_use_extended_names(bool flag)
   Control use of extended names in terminfo descriptions --returns int--
ncurses_vidattr(int intarg)
   Display the string on the terminal in the video attribute mode --returns int--
ncurses_vline(int charattr, int n)
   Draw a vertical line at current position using an attributed character and max. n characters long --returns int--
ncurses_waddch(resource window, int ch)
   Adds character at current position in a window and advance cursor --returns int--
ncurses_waddstr(resource window, string str [, int n ])
   Outputs text at current postion in window --returns int--
ncurses_wattroff(resource window, int attrs)
   Turns off attributes for a window --returns int--
ncurses_wattron(resource window, int attrs)
   Turns on attributes for a window --returns int--
ncurses_wattrset(resource window, int attrs)
   Set the attributes for a window --returns int--
ncurses_wborder(resource window, int left, int right, int top, int bottom, int tl_corner, int tr_corner, int bl_corner, int br_corner)
   Draws a border around the window using attributed characters --returns int--
ncurses_wclear(resource window)
   Clears window --returns int--
ncurses_wcolor_set(resource window, int color_pair)
   Sets windows color pairings --returns int--
ncurses_werase(resource window)
   Erase window contents --returns int--
ncurses_wgetch(resource window)
   Reads a character from keyboard (window) --returns int--
ncurses_whline(resource window, int charattr, int n)
   Draws a horizontal line in a window at current position using an attributed character and max. n characters long --returns int--
ncurses_wmouse_trafo(resource window, int &y, int &x, bool toscreen)
   Transforms window/stdscr coordinates --returns bool--
ncurses_wmove(resource window, int y, int x)
   Moves windows output position --returns int--
ncurses_wnoutrefresh(resource window)
   Copies window to virtual screen --returns int--
ncurses_wrefresh(resource window)
   Refresh window on terminal screen --returns int--
ncurses_wstandend(resource window)
   End standout mode for a window --returns int--
ncurses_wstandout(resource window)
   Enter standout mode for a window --returns int--
ncurses_wvline(resource window, int charattr, int n)
   Draws a vertical line in a window at current position using an attributed character and max. n characters long --returns int--
newt_bell(void)
   Send a beep to the terminal --returns void--
newt_button_bar(array &buttons)
   This function returns a grid containing the buttons created. --returns resource--
newt_button(int left, int top, string text)
   Create a new button --returns resource--
newt_centered_window(int width, int height [, string title ])
   Open a centered window of the specified size --returns int--
newt_checkbox_get_value(resource checkbox)
   Retreives value of checkox resource --returns string--
newt_checkbox_set_flags(resource checkbox, int flags, int sense)
   Configures checkbox resource --returns void--
newt_checkbox_set_value(resource checkbox, string value)
   Sets the value of the checkbox --returns void--
newt_checkbox_tree_add_item(resource checkboxtree, string text, mixed data, int flags, int index [, int ... ])
   Adds new item to the checkbox tree --returns void--
newt_checkbox_tree_find_item(resource checkboxtree, mixed data)
   Finds an item in the checkbox tree --returns array--
newt_checkbox_tree_get_current(resource checkboxtree)
   Returns checkbox tree selected item --returns mixed--
newt_checkbox_tree_get_entry_value(resource checkboxtree, mixed data)
   Description string --returns string--
newt_checkbox_tree_get_multi_selection(resource checkboxtree, string seqnum)
   Description array --returns array--
newt_checkbox_tree_get_selection(resource checkboxtree)
   Description array --returns array--
newt_checkbox_tree_multi(int left, int top, int height, string seq [, int flags ])
   Description resource --returns resource--
newt_checkbox_tree_set_current(resource checkboxtree, mixed data)
   Description void --returns void--
newt_checkbox_tree_set_entry_value(resource checkboxtree, mixed data, string value)
   Description void --returns void--
newt_checkbox_tree_set_entry(resource checkboxtree, mixed data, string text)
   Description void --returns void--
newt_checkbox_tree_set_width(resource checkbox_tree, int width)
   Description void --returns void--
newt_checkbox_tree(int left, int top, int height [, int flags ])
   Description resource --returns resource--
newt_checkbox(int left, int top, string text, string def_value [, string seq ])
   Description resource --returns resource--
newt_clear_key_buffer(void)
   Discards the contents of the terminal's input buffer without waiting for additional input --returns void--
newt_cls(void)
   Description void --returns void--
newt_compact_button(int left, int top, string text)
   Description resource --returns resource--
newt_component_add_callback(resource component, mixed func_name, mixed data)
   Description void --returns void--
newt_component_takes_focus(resource component, bool takes_focus)
   Description void --returns void--
newt_create_grid(int cols, int rows)
   Description resource --returns resource--
newt_cursor_off(void)
   Description void --returns void--
newt_cursor_on(void)
   Description void --returns void--
newt_delay(int microseconds)
   Description void --returns void--
newt_draw_form(resource form)
   Description void --returns void--
newt_draw_root_text(int left, int top, string text)
   Displays the string text at the position indicated --returns void--
newt_entry_get_value(resource entry)
   Description string --returns string--
newt_entry_set_filter(resource entry, callback filter, mixed data)
   Description void --returns void--
newt_entry_set_flags(resource entry, int flags, int sense)
   Description void --returns void--
newt_entry_set(resource entry, string value [, bool cursor_at_end ])
   Description void --returns void--
newt_entry(int left, int top, int width [, string init_value [, int flags ]])
   Description resource --returns resource--
newt_finished(void)
   Uninitializes newt interface --returns int--
newt_form_add_component(resource form, resource component)
   Adds a single component to the form --returns void--
newt_form_add_components(resource form, array components)
   Add several components to the form --returns void--
newt_form_add_hot_key(resource form, int key)
   Description void --returns void--
newt_form_destroy(resource form)
   Destroys a form --returns void--
newt_form_get_current(resource form)
   Description resource --returns resource--
newt_form_run(resource form, array &exit_struct)
   Runs a form --returns void--
newt_form_set_background(resource from, int background)
   Description void --returns void--
newt_form_set_height(resource form, int height)
   Description void --returns void--
newt_form_set_size(resource form)
   Description void --returns void--
newt_form_set_timer(resource form, int milliseconds)
   Description void --returns void--
newt_form_set_width(resource form, int width)
   Description void --returns void--
newt_form_watch_fd(resource form, resource stream [, int flags ])
   Description void --returns void--
newt_form ([ resource vert_bar [, string help [, int flags ]]])
   Create a form --returns resource--
newt_get_screen_size(int &cols, int &rows)
   Fills in the passed references with the current size of the terminal --returns void--
newt_grid_add_components_to_form(resource grid, resource form, bool recurse)
   Description void --returns void--
newt_grid_basic_window(resource text, resource middle, resource buttons)
   Description resource --returns resource--
newt_grid_free(resource grid, bool recurse)
   Description void --returns void--
newt_grid_get_size(resouce grid, int &width, int &height)
   Description void --returns void--
newt_grid_h_close_stacked(int element1_type, resource element1 [, int ... [, resource ... ]])
   Description resource --returns resource--
newt_grid_h_stacked(int element1_type, resource element1 [, int ... [, resource ... ]])
   Description resource --returns resource--
newt_grid_place(resource grid, int left, int top)
   Description void --returns void--
newt_grid_set_field(resource grid, int col, int row, int type, resource val, int pad_left, int pad_top, int pad_right, int pad_bottom, int anchor [, int flags ])
   Description void --returns void--
newt_grid_simple_window(resource text, resource middle, resource buttons)
   Description resource --returns resource--
newt_grid_v_close_stacked(int element1_type, resource element1 [, int ... [, resource ... ]])
   Description resource --returns resource--
newt_grid_v_stacked(int element1_type, resource element1 [, int ... [, resource ... ]])
   Description resource --returns resource--
newt_grid_wrapped_window_at(resource grid, string title, int left, int top)
   Description void --returns void--
newt_grid_wrapped_window(resource grid, string title)
   Description void --returns void--
newt_init(void)
   Initialize newt --returns int--
newt_label_set_text(resource label, string text)
   Description void --returns void--
newt_label(int left, int top, string text)
   Description resource --returns resource--
newt_listbox_append_entry(resource listbox, string text, mixed data)
   Description void --returns void--
newt_listbox_clear_selection(resource listbox)
   Description void --returns void--
newt_listbox_clear(resource listobx)
   Description void --returns void--
newt_listbox_delete_entry(resource listbox, mixed key)
   Description void --returns void--
newt_listbox_get_current(resource listbox)
   Description string --returns string--
newt_listbox_get_selection(resource listbox)
   Description array --returns array--
newt_listbox_insert_entry(resource listbox, string text, mixed data, mixed key)
   Description void --returns void--
newt_listbox_item_count(resource listbox)
   Description int --returns int--
newt_listbox_select_item(resource listbox, mixed key, int sense)
   Description void --returns void--
newt_listbox_set_current_by_key(resource listbox, mixed key)
   Description void --returns void--
newt_listbox_set_current(resource listbox, int num)
   Description void --returns void--
newt_listbox_set_data(resource listbox, int num, mixed data)
   Description void --returns void--
newt_listbox_set_entry(resource listbox, int num, string text)
   Description void --returns void--
newt_listbox_set_width(resource listbox, int width)
   Description void --returns void--
newt_listbox(int left, int top, int height [, int flags ])
   Description resource --returns resource--
newt_listitem_get_data(resource item)
   Description mixed --returns mixed--
newt_listitem_set(resource item, string text)
   Description void --returns void--
newt_listitem(int left, int top, string text, bool is_default, resouce prev_item, mixed data [, int flags ])
   Description resource --returns resource--
newt_open_window(int left, int top, int width, int height [, string title ])
   Open a window of the specified size and position --returns int--
newt_pop_help_line(void)
   Replaces the current help line with the one from the stack --returns void--
newt_pop_window(void)
   Removes the top window from the display --returns void--
newt_push_help_line ([ string text ])
   Saves the current help line on a stack, and displays the new line --returns void--
newt_radio_get_current(resource set_member)
   Description resource --returns resource--
newt_radiobutton(int left, int top, string text, bool is_default [, resource prev_button ])
   Description resource --returns resource--
newt_redraw_help_line(void)
   Description void --returns void--
newt_reflow_text(string text, int width, int flex_down, int flex_up, int &actual_width, int &actual_height)
   Description string --returns string--
newt_refresh(void)
   Updates modified portions of the screen --returns void--
newt_resize_screen ([ bool redraw ])
   Description void --returns void--
newt_resume(void)
   Resume using the newt interface after calling newt_suspend() --returns void--
newt_run_form(resource form)
   Runs a form --returns resource--
newt_scale_set(resource scale, int amount)
   Description void --returns void--
newt_scale(int left, int top, int width, int full_value)
   Description resource --returns resource--
newt_scrollbar_set(resource scrollbar, int where, int total)
   Description void --returns void--
newt_set_help_callback(mixed function)
   Description void --returns void--
newt_set_suspend_callback(callback function, mixed data)
   Set a callback function which gets invoked when user presses the suspend key --returns void--
newt_suspend(void)
   Tells newt to return the terminal to its initial state --returns void--
newt_textbox_get_num_lines(resource textbox)
   Description int --returns int--
newt_textbox_reflowed(int left, int top, char *text, int width, int flex_down, int flex_up [, int flags ])
   Description resource --returns resource--
newt_textbox_set_height(resource textbox, int height)
   Description void --returns void--
newt_textbox_set_text(resource textbox, string text)
   Description void --returns void--
newt_textbox(int left, int top, int width, int height [, int flags ])
   Description resource --returns resource--
newt_vertical_scrollbar(int left, int top, int height [, int normal_colorset [, int thumb_colorset ]])
   Description resource --returns resource--
newt_wait_for_key(void)
   Doesn't return until a key has been pressed --returns void--
newt_win_choice(string title, string button1_text, string button2_text, string format [, mixed args [, mixed ... ]])
   Description int --returns int--
newt_win_entries(string title, string text, int suggested_width, int flex_down, int flex_up, int data_width, array &items, string button1 [, string ... ])
   Description int --returns int--
newt_win_menu(string title, string text, int suggestedWidth, int flexDown, int flexUp, int maxListHeight, array items, int &listItem [, string button1 [, string ... ]])
   Description int --returns int--
newt_win_message(string title, string button_text, string format [, mixed args [, mixed ... ]])
   Description void --returns void--
newt_win_messagev(string title, string button_text, string format, array args)
   Description void --returns void--
newt_win_ternary(string title, string button1_text, string button2_text, string button3_text, string format [, mixed args [, mixed ... ]])
   Description int --returns int--
next(array &array)
   Advance the internal array pointer of an array --returns mixed--
ngettext(string msgid1, string msgid2, int n)
   Plural version of gettext --returns string--
nl_langinfo(int item)
   Query language and locale information --returns string--
nl2br(string string [, bool is_xhtml ])
   Inserts HTML line breaks before all newlines in a string --returns string--
notes_body(string server, string mailbox, int msg_number)
   Open the message msg_number in the specified mailbox on the specified server (leave serv --returns array--
notes_copy_db(string from_database_name, string to_database_name)
   Copy a Lotus Notes database --returns bool--
notes_create_db(string database_name)
   Create a Lotus Notes database --returns bool--
notes_create_note(string database_name, string form_name)
   Create a note using form form_name --returns bool--
notes_drop_db(string database_name)
   Drop a Lotus Notes database --returns bool--
notes_find_note(string database_name, string name [, string type ])
   Returns a note id found in database_name --returns int--
notes_header_info(string server, string mailbox, int msg_number)
   Open the message msg_number in the specified mailbox on the specified server (leave serv --returns object--
notes_list_msgs(string db)
   Returns the notes from a selected database_name --returns bool--
notes_mark_read(string database_name, string user_name, string note_id)
   Mark a note_id as read for the User user_name --returns bool--
notes_mark_unread(string database_name, string user_name, string note_id)
   Mark a note_id as unread for the User user_name --returns bool--
notes_nav_create(string database_name, string name)
   Create a navigator name, in database_name --returns bool--
notes_search(string database_name, string keywords)
   Find notes that match keywords in database_name --returns array--
notes_unread(string database_name, string user_name)
   Returns the unread note id's for the current User user_name --returns array--
notes_version(string database_name)
   Get the version Lotus Notes --returns float--
nsapi_request_headers(void)
   Fetch all HTTP request headers --returns array--
nsapi_response_headers(void)
   Fetch all HTTP response headers --returns array--
nsapi_virtual(string uri)
   Perform an NSAPI sub-request --returns bool--
nthmac(string clent, string data)
   Obtain a nthmac key (needs 2 arguments) --returns string--
number_format(float number [, int decimals ]) string number_format(float number, int decimals, string dec_point, string thousands_sep)
   Format a number with grouped thousands --returns string--
ob_clean(void)
   Clean (erase) the output buffer --returns void--
ob_deflatehandler(string data, int mode)
   Deflate output handler --returns string--
ob_end_clean(void)
   Clean (erase) the output buffer and turn off output buffering --returns bool--
ob_end_flush(void)
   Flush (send) the output buffer and turn off output buffering --returns bool--
ob_etaghandler(string data, int mode)
   ETag output handler --returns string--
ob_flush(void)
   Flush (send) the output buffer --returns void--
ob_get_clean(void)
   Get current buffer contents and delete current output buffer --returns string--
ob_get_contents(void)
   Return the contents of the output buffer --returns string--
ob_get_flush(void)
   Flush the output buffer, return it as a string and turn off output buffering --returns string--
ob_get_length(void)
   Return the length of the output buffer --returns int--
ob_get_level(void)
   Return the nesting level of the output buffering mechanism --returns int--
ob_get_status ([ bool full_status =FALSE ])
   Get status of output buffers --returns array--
ob_gzhandler(string buffer, int mode)
   ob_start callback function to gzip output buffer --returns string--
ob_iconv_handler(string contents, int status)
   Convert character encoding as output buffer handler --returns string--
ob_implicit_flush ([ int flag ])
   Turn implicit flush on/off --returns void--
ob_inflatehandler(string data, int mode)
   Inflate output handler --returns string--
ob_list_handlers(void)
   List all output handlers in use --returns array--
ob_start ([ callback output_callback [, int chunk_size [, bool erase ]]])
   Turn on output buffering --returns bool--
ob_tidyhandler(string input [, int mode ])
   ob_start callback function to repair the buffer --returns string--
oci_bind_array_by_name(resource statement, string name, array &var_array, int max_table_length [, int max_item_length [, int type ]])
   Binds PHP array to Oracle PL/SQL array by name --returns bool--
oci_bind_by_name(resource statement, string ph_name, mixed &variable [, int maxlength [, int type ]])
   Binds the PHP variable to the Oracle placeholder --returns bool--
oci_cancel(resource statement)
   Cancels reading from cursor --returns bool--
oci_close(resource connection)
   Closes Oracle connection --returns bool--
append(mixed value)
   Appends element to the collection --returns bool--
assign(OCI-Collection from)
   Assigns a value to the collection from another existing collection --returns bool--
assignElem(int index, mixed value)
   Assigns a value to the element of the collection --returns bool--
getElem(int index)
   Returns value of the element --returns mixed--
free(void)
   Frees the resources associated with the collection object --returns bool--
max(void)
   Returns the maximum number of elements in the collection --returns int--
size(void)
   Returns size of the collection --returns int--
trim(int num)
   Trims elements from the end of the collection --returns bool--
oci_commit(resource connection)
   Commits outstanding statements --returns bool--
oci_connect(string username, string password [, string db [, string charset [, int session_mode ]]])
   Establishes a connection to the Oracle server --returns resource--
oci_define_by_name(resource statement, string column_name, mixed &variable [, int type ])
   Uses a PHP variable for the define-step during a SELECT --returns bool--
oci_error ([ resource source ])
   Returns the last error found --returns array--
oci_execute(resource statement [, int mode ])
   Executes a statement --returns bool--
oci_fetch_all(resource statement, array &output [, int skip [, int maxrows [, int flags ]]])
   Fetches all rows of result data into an array --returns int--
oci_fetch_array(resource statement [, int mode ])
   Returns the next row from the result data as an associative or numeric array, or both --returns array--
oci_fetch_assoc(resource statement)
   Returns the next row from the result data as an associative array --returns array--
oci_fetch_object(resource statement)
   Returns the next row from the result data as an object --returns object--
oci_fetch_row(resource statement)
   Returns the next row from the result data as a numeric array --returns array--
oci_fetch(resource statement)
   Fetches the next row into result-buffer --returns bool--
oci_field_is_null(resource statement, mixed field)
   Checks if the field is NULL --returns bool--
oci_field_name(resource statement, int field)
   Returns the name of a field from the statement --returns string--
oci_field_precision(resource statement, int field)
   Tell the precision of a field --returns int--
oci_field_scale(resource statement, int field)
   Tell the scale of the field --returns int--
oci_field_size(resource statement, mixed field)
   Returns field's size --returns int--
oci_field_type_raw(resource statement, int field)
   Tell the raw Oracle data type of the field --returns int--
oci_field_type(resource statement, int field)
   Returns field's data type --returns mixed--
oci_free_statement(resource statement)
   Frees all resources associated with statement or cursor --returns bool--
oci_internal_debug(bool onoff)
   Enables or disables internal debug output --returns void--
append(OCI-Lob lob_from)
   Appends data from the large object to another large object --returns bool--
close(void)
   Closes LOB descriptor --returns bool--
oci_lob_copy(OCI-Lob lob_to, OCI-Lob lob_from [, int length ])
   Copies large object --returns bool--
eof(void)
   Tests for end-of-file on a large object's descriptor --returns bool--
erase ([ int offset [, int length ]])
   Erases a specified portion of the internal LOB data --returns int--
export(string filename [, int start [, int length ]])
   Exports LOB's contents to a file --returns bool--
flush ([ int flag ])
   Flushes/writes buffer of the LOB to the server --returns bool--
free(void)
   Frees resources associated with the LOB descriptor --returns bool--
getBuffering(void)
   Returns current state of buffering for the large object --returns bool--
import(string filename)
   Imports file data to the LOB --returns bool--
oci_lob_is_equal(OCI-Lob lob1, OCI-Lob lob2)
   Compares two LOB/FILE locators for equality --returns bool--
load(void)
   Returns large object's contents --returns string--
read(int length)
   Reads part of the large object --returns string--
rewind(void)
   Moves the internal pointer to the beginning of the large object --returns bool--
save(string data [, int offset ])
   Saves data to the large object --returns bool--
OCI-Lob-&gt;saveFile
   Alias of oci_lob_import() --returns ?--
seek(int offset [, int whence ])
   Sets the internal pointer of the large object --returns bool--
setBuffering(bool on_off)
   Changes current state of buffering for the large object --returns bool--
size(void)
   Returns size of large object --returns int--
tell(void)
   Returns current position of internal pointer of large object --returns int--
truncate ([ int length ])
   Truncates large object --returns bool--
write(string data [, int length ])
   Writes data to the large object --returns int--
writeTemporary(string data [, int lob_type ])
   Writes temporary large object --returns bool--
OCI-Lob-&gt;writeToFile
   Alias of oci_lob_export() --returns ?--
oci_new_collection(resource connection, string tdo [, string schema ])
   Allocates new collection object --returns OCI-Collection--
oci_new_connect(string username, string password [, string db [, string charset [, int session_mode ]]])
   Establishes a new connection to the Oracle server --returns resource--
oci_new_cursor(resource connection)
   Allocates and returns a new cursor (statement handle) --returns resource--
oci_new_descriptor(resource connection [, int type ])
   Initializes a new empty LOB or FILE descriptor --returns OCI-Lob--
oci_num_fields(resource statement)
   Returns the number of result columns in a statement --returns int--
oci_num_rows(resource statement)
   Returns number of rows affected during statement execution --returns int--
oci_parse(resource connection, string query)
   Prepares Oracle statement for execution --returns resource--
oci_password_change(resource connection, string username, string old_password, string new_password) resource oci_password_change(string dbname, string username, string old_password, string new_password)
   Changes password of Oracle's user --returns bool--
oci_pconnect(string username, string password [, string db [, string charset [, int session_mode ]]])
   Connect to an Oracle database using a persistent connection --returns resource--
oci_result(resource statement, mixed field)
   Returns field's value from the fetched row --returns mixed--
oci_rollback(resource connection)
   Rolls back outstanding transaction --returns bool--
oci_server_version(resource connection)
   Returns server version --returns string--
oci_set_prefetch(resource statement, int rows)
   Sets number of rows to be prefetched --returns bool--
oci_statement_type(resource statement)
   Returns the type of an OCI statement --returns string--
ocibindbyname
   Alias of oci_bind_by_name() --returns ?--
ocicancel
   Alias of oci_cancel() --returns ?--
ocicloselob
   Alias of OCI-Lob->close --returns ?--
ocicollappend
   Alias of OCI-Collection->append --returns ?--
ocicollassign
   Alias of OCI-Collection->assign --returns ?--
ocicollassignelem
   Alias of OCI-Collection->assignElem --returns ?--
ocicollgetelem
   Alias of OCI-Collection->getElem --returns ?--
ocicollmax
   Alias of OCI-Collection->max --returns ?--
ocicollsize
   Alias of OCI-Collection->size --returns ?--
ocicolltrim
   Alias of OCI-Collection->trim --returns ?--
ocicolumnisnull
   Alias of oci_field_is_null() --returns ?--
ocicolumnname
   Alias of oci_field_name() --returns ?--
ocicolumnprecision
   Alias of oci_field_precision() --returns ?--
ocicolumnscale
   Alias of oci_field_scale() --returns ?--
ocicolumnsize
   Alias of oci_field_size() --returns ?--
ocicolumntype
   Alias of oci_field_type() --returns ?--
ocicolumntyperaw
   Alias of oci_field_type_raw() --returns ?--
ocicommit
   Alias of oci_commit() --returns ?--
ocidefinebyname
   Alias of oci_define_by_name() --returns ?--
ocierror
   Alias of oci_error() --returns ?--
ociexecute
   Alias of oci_execute() --returns ?--
ocifetch
   Alias of oci_fetch() --returns ?--
ocifetchinto(resource statement, array &result [, int mode ])
   Fetches the next row into an array (deprecated) --returns int--
ocifetchstatement
   Alias of oci_fetch_all() --returns ?--
ocifreecollection
   Alias of OCI-Collection->free --returns ?--
ocifreecursor
   Alias of oci_free_statement() --returns ?--
ocifreedesc
   Alias of OCI-Lob->free --returns ?--
ocifreestatement
   Alias of oci_free_statement() --returns ?--
ociinternaldebug
   Alias of oci_internal_debug() --returns ?--
ociloadlob
   Alias of OCI-Lob->load --returns ?--
ocilogoff
   Alias of oci_close() --returns ?--
ocilogon
   Alias of oci_connect() --returns ?--
ocinewcollection
   Alias of oci_new_collection() --returns ?--
ocinewcursor
   Alias of oci_new_cursor() --returns ?--
ocinewdescriptor
   Alias of oci_new_descriptor() --returns ?--
ocinlogon
   Alias of oci_new_connect() --returns ?--
ocinumcols
   Alias of oci_num_fields() --returns ?--
ociparse
   Alias of oci_parse() --returns ?--
ociplogon
   Alias of oci_pconnect() --returns ?--
ociresult
   Alias of oci_result() --returns ?--
ocirollback
   Alias of oci_rollback() --returns ?--
ocirowcount
   Alias of oci_num_rows() --returns ?--
ocisavelob
   Alias of OCI-Lob->save --returns ?--
ocisavelobfile
   Alias of OCI-Lob->import --returns ?--
ociserverversion
   Alias of oci_server_version() --returns ?--
ocisetprefetch
   Alias of oci_set_prefetch() --returns ?--
ocistatementtype
   Alias of oci_statement_type() --returns ?--
ociwritelobtofile
   Alias of OCI-Lob->export --returns ?--
ociwritetemporarylob
   Alias of OCI-Lob->writeTemporary --returns ?--
octdec(string octal_string)
   Octal to decimal --returns number--
odbc_autocommit(resource connection_id [, bool OnOff ])
   Toggle autocommit behaviour --returns mixed--
odbc_binmode(resource result_id, int mode)
   Handling of binary column data --returns bool--
odbc_close_all(void)
   Close all ODBC connections --returns void--
odbc_close(resource connection_id)
   Close an ODBC connection --returns void--
odbc_columnprivileges(resource connection_id, string qualifier, string owner, string table_name, string column_name)
   Lists columns and associated privileges for the given table --returns resource--
odbc_columns(resource connection_id [, string qualifier [, string schema [, string table_name [, string column_name ]]]])
   Lists the column names in specified tables --returns resource--
odbc_commit(resource connection_id)
   Commit an ODBC transaction --returns bool--
odbc_connect(string dsn, string user, string password [, int cursor_type ])
   Connect to a datasource --returns resource--
odbc_cursor(resource result_id)
   Get cursorname --returns string--
odbc_data_source(resource connection_id, int fetch_type)
   Returns information about a current connection --returns array--
odbc_do
   Alias of odbc_exec() --returns ?--
odbc_error ([ resource connection_id ])
   Get the last error code --returns string--
odbc_errormsg ([ resource connection_id ])
   Get the last error message --returns string--
odbc_exec(resource connection_id, string query_string [, int flags ])
   Prepare and execute a SQL statement --returns resource--
odbc_execute(resource result_id [, array parameters_array ])
   Execute a prepared statement --returns bool--
odbc_fetch_array(resource result [, int rownumber ])
   Fetch a result row as an associative array --returns array--
odbc_fetch_into(resource result_id, array result_array [, int rownumber ])
   Fetch one result row into array --returns int--
odbc_fetch_object(resource result [, int rownumber ])
   Fetch a result row as an object --returns object--
odbc_fetch_row(resource result_id [, int row_number ])
   Fetch a row --returns bool--
odbc_field_len(resource result_id, int field_number)
   Get the length (precision) of a field --returns int--
odbc_field_name(resource result_id, int field_number)
   Get the columnname --returns string--
odbc_field_num(resource result_id, string field_name)
   Return column number --returns int--
odbc_field_precision
   Alias of odbc_field_len() --returns ?--
odbc_field_scale(resource result_id, int field_number)
   Get the scale of a field --returns int--
odbc_field_type(resource result_id, int field_number)
   Datatype of a field --returns string--
odbc_foreignkeys(resource connection_id, string pk_qualifier, string pk_owner, string pk_table, string fk_qualifier, string fk_owner, string fk_table)
   Retrieves a list of foreign keys --returns resource--
odbc_free_result(resource result_id)
   Free resources associated with a result --returns bool--
odbc_gettypeinfo(resource connection_id [, int data_type ])
   Retrieves information about data types supported by the data source --returns resource--
odbc_longreadlen(resource result_id, int length)
   Handling of LONG columns --returns bool--
odbc_next_result(resource result_id)
   Checks if multiple results are available --returns bool--
odbc_num_fields(resource result_id)
   Number of columns in a result --returns int--
odbc_num_rows(resource result_id)
   Number of rows in a result --returns int--
odbc_pconnect(string dsn, string user, string password [, int cursor_type ])
   Open a persistent database connection --returns resource--
odbc_prepare(resource connection_id, string query_string)
   Prepares a statement for execution --returns resource--
odbc_primarykeys(resource connection_id, string qualifier, string owner, string table)
   Gets the primary keys for a table --returns resource--
odbc_procedurecolumns(resource connection_id) resource odbc_procedurecolumns(resource connection_id, string qualifier, string owner, string proc, string column)
   Retrieve information about parameters to procedures --returns resource--
odbc_procedures(resource connection_id) resource odbc_procedures(resource connection_id, string qualifier, string owner, string name)
   Get the list of procedures stored in a specific data source --returns resource--
odbc_result_all(resource result_id [, string format ])
   Print result as HTML table --returns int--
odbc_result(resource result_id, mixed field)
   Get result data --returns mixed--
odbc_rollback(resource connection_id)
   Rollback a transaction --returns bool--
odbc_setoption(resource id, int function, int option, int param)
   Adjust ODBC settings --returns bool--
odbc_specialcolumns(resource connection_id, int type, string qualifier, string owner, string table, int scope, int nullable)
   Retrieves special columns --returns resource--
odbc_statistics(resource connection_id, string qualifier, string owner, string table_name, int unique, int accuracy)
   Retrieve statistics about a table --returns resource--
odbc_tableprivileges(resource connection_id, string qualifier, string owner, string name)
   Lists tables and the privileges associated with each table --returns resource--
odbc_tables(resource connection_id [, string qualifier [, string owner [, string name [, string types ]]]])
   Get the list of table names stored in a specific data source --returns resource--
openal_buffer_create(void)
   Generate OpenAL buffer --returns resource--
openal_buffer_data(resource buffer, int format, string data, int freq)
   Load a buffer with data --returns bool--
openal_buffer_destroy(resource buffer)
   Destroys an OpenAL buffer --returns bool--
openal_buffer_get(resource buffer, int property)
   Retrieve an OpenAL buffer property --returns int--
openal_buffer_loadwav(resource buffer, string wavfile)
   Load a .wav file into a buffer --returns bool--
openal_context_create(resource device)
   Create an audio processing context --returns resource--
openal_context_current(resource context)
   Make the specified context current --returns bool--
openal_context_destroy(resource context)
   Destroys a context --returns bool--
openal_context_process(resource context)
   Process the specified context --returns bool--
openal_context_suspend(resource context)
   Suspend the specified context --returns bool--
openal_device_close(resource device)
   Close an OpenAL device --returns bool--
openal_device_open ([ string device_desc ])
   Initialize the OpenAL audio layer --returns resource--
openal_listener_get(int property)
   Retrieve a listener property --returns mixed--
openal_listener_set(int property, mixed setting)
   Set a listener property --returns bool--
openal_source_create(void)
   Generate a source resource --returns resource--
openal_source_destroy(resource source)
   Destroy a source resource --returns bool--
openal_source_get(resource source, int property)
   Retrieve an OpenAL source property --returns mixed--
openal_source_pause(resource source)
   Pause the source --returns bool--
openal_source_play(resource source)
   Start playing the source --returns bool--
openal_source_rewind(resource source)
   Rewind the source --returns bool--
openal_source_set(resource source, int property, mixed setting)
   Set source property --returns bool--
openal_source_stop(resource source)
   Stop playing the source --returns bool--
openal_stream(resource source, int format, int rate)
   Begin streaming on a source --returns resource--
opendir(string path [, resource context ])
   Open directory handle --returns resource--
openlog(string ident, int option, int facility)
   Open connection to system logger --returns bool--
openssl_csr_export_to_file(resource csr, string outfilename [, bool notext ])
   Exports a CSR to a file --returns bool--
openssl_csr_export(resource csr, string &out [, bool notext ])
   Exports a CSR as a string --returns bool--
openssl_csr_get_public_key(mixed csr [, bool use_shortnames ])
   Returns the public key of a CERT --returns resource--
openssl_csr_get_subject(mixed csr [, bool use_shortnames ])
   Returns the subject of a CERT --returns array--
openssl_csr_new(array dn, resource &privkey [, array configargs [, array extraattribs ]])
   Generates a CSR --returns mixed--
openssl_csr_sign(mixed csr, mixed cacert, mixed priv_key, int days [, array configargs [, int serial ]])
   Sign a CSR with another certificate (or itself) and generate a certificate --returns resource--
openssl_error_string(void)
   Return openSSL error message --returns string--
openssl_free_key(resource key_identifier)
   Free key resource --returns void--
openssl_get_privatekey
   Alias of openssl_pkey_get_private() --returns ?--
openssl_get_publickey
   Alias of openssl_pkey_get_public() --returns ?--
openssl_open(string sealed_data, string &open_data, string env_key, mixed priv_key_id)
   Open sealed data --returns bool--
openssl_pkcs12_export_to_file(mixed x509, string filename, mixed priv_key, string pass [, array args ])
   Exports a PKCS#12 Compatible Certificate Store File --returns bool--
openssl_pkcs12_export(mixed x509, string &out, mixed priv_key, string pass [, array args ])
   Exports a PKCS#12 Compatible Certificate Store File to variable. --returns bool--
openssl_pkcs12_read(mixed PKCS12, array &certs, string pass)
   Parse a PKCS#12 Certificate Store into an array --returns bool--
openssl_pkcs7_decrypt(string infilename, string outfilename, mixed recipcert [, mixed recipkey ])
   Decrypts an S/MIME encrypted message --returns bool--
openssl_pkcs7_encrypt(string infile, string outfile, mixed recipcerts, array headers [, int flags [, int cipherid ]])
   Encrypt an S/MIME message --returns bool--
openssl_pkcs7_sign(string infilename, string outfilename, mixed signcert, mixed privkey, array headers [, int flags [, string extracerts ]])
   Sign an S/MIME message --returns bool--
openssl_pkcs7_verify(string filename, int flags [, string outfilename [, array cainfo [, string extracerts [, string content ]]]])
   Verifies the signature of an S/MIME signed message --returns mixed--
openssl_pkey_export_to_file(mixed key, string outfilename [, string passphrase [, array configargs ]])
   Gets an exportable representation of a key into a file --returns bool--
openssl_pkey_export(mixed key, string &out [, string passphrase [, array configargs ]])
   Gets an exportable representation of a key into a string --returns bool--
openssl_pkey_free(resource key)
   Frees a private key --returns void--
openssl_pkey_get_details(resource key)
   Returns an array with the key details --returns array--
openssl_pkey_get_private(mixed key [, string passphrase ])
   Get a private key --returns resource--
openssl_pkey_get_public(mixed certificate)
   Extract public key from certificate and prepare it for use --returns resource--
openssl_pkey_new ([ array configargs ])
   Generates a new private key --returns resource--
openssl_private_decrypt(string data, string &decrypted, mixed key [, int padding ])
   Decrypts data with private key --returns bool--
openssl_private_encrypt(string data, string &crypted, mixed key [, int padding ])
   Encrypts data with private key --returns bool--
openssl_public_decrypt(string data, string &decrypted, mixed key [, int padding ])
   Decrypts data with public key --returns bool--
openssl_public_encrypt(string data, string &crypted, mixed key [, int padding ])
   Encrypts data with public key --returns bool--
openssl_seal(string data, string &sealed_data, array &env_keys, array pub_key_ids)
   Seal (encrypt) data --returns int--
openssl_sign(string data, string &signature, mixed priv_key_id [, int signature_alg ])
   Generate signature --returns bool--
openssl_verify(string data, string signature, mixed pub_key_id [, int signature_alg ])
   Verify signature --returns int--
openssl_x509_check_private_key(mixed cert, mixed key)
   Checks if a private key corresponds to a certificate --returns bool--
openssl_x509_checkpurpose(mixed x509cert, int purpose [, array cainfo [, string untrustedfile ]])
   Verifies if a certificate can be used for a particular purpose --returns int--
openssl_x509_export_to_file(mixed x509, string outfilename [, bool notext ])
   Exports a certificate to file --returns bool--
openssl_x509_export(mixed x509, string &output [, bool notext ])
   Exports a certificate as a string --returns bool--
openssl_x509_free(resource x509cert)
   Free certificate resource --returns void--
openssl_x509_parse(mixed x509cert [, bool shortnames ])
   Parse an X509 certificate and return the information as an array --returns array--
openssl_x509_read(mixed x509certdata)
   Parse an X.509 certificate and return a resource identifier for it --returns resource--
ord(string string)
   Return ASCII value of character --returns int--
output_add_rewrite_var(string name, string value)
   Add URL rewriter values --returns bool--
output_reset_rewrite_vars(void)
   Reset URL rewriter values --returns bool--
overload(string class_name)
   Enable property and method call overloading for a class --returns void--
override_function(string function_name, string function_args, string function_code)
   Overrides built-in functions --returns bool--
ovrimos_close(int connection)
   Closes the connection to ovrimos --returns void--
ovrimos_commit(int connection_id)
   Commits the transaction --returns bool--
ovrimos_connect(string host, string dborport, string user, string password)
   Connect to the specified database --returns int--
ovrimos_cursor(int result_id)
   Returns the name of the cursor --returns string--
ovrimos_exec(int connection_id, string query)
   Executes an SQL statement --returns int--
ovrimos_execute(int result_id [, array parameters_array ])
   Executes a prepared SQL statement --returns bool--
ovrimos_fetch_into(int result_id, array &result_array [, string how [, int rownumber ]])
   Fetches a row from the result set --returns bool--
ovrimos_fetch_row(int result_id [, int how [, int row_number ]])
   Fetches a row from the result set --returns bool--
ovrimos_field_len(int result_id, int field_number)
   Returns the length of the output column --returns int--
ovrimos_field_name(int result_id, int field_number)
   Returns the output column name --returns string--
ovrimos_field_num(int result_id, string field_name)
   Returns the (1-based) index of the output column --returns int--
ovrimos_field_type(int result_id, int field_number)
   Returns the type of the output column --returns int--
ovrimos_free_result(int result_id)
   Frees the specified result_id --returns bool--
ovrimos_longreadlen(int result_id, int length)
   Specifies how many bytes are to be retrieved from long datatypes --returns bool--
ovrimos_num_fields(int result_id)
   Returns the number of columns --returns int--
ovrimos_num_rows(int result_id)
   Returns the number of rows affected by update operations --returns int--
ovrimos_prepare(int connection_id, string query)
   Prepares an SQL statement --returns int--
ovrimos_result_all(int result_id [, string format ])
   Prints the whole result set as an HTML table --returns int--
ovrimos_result(int result_id, mixed field)
   Retrieves the output column --returns string--
ovrimos_rollback(int connection_id)
   Rolls back the transaction --returns bool--
pack(string format [, mixed args [, mixed ... ]])
   Pack data into binary string --returns string--
parse_ini_file(string filename [, bool process_sections ])
   Parse a configuration file --returns array--
parse_str(string str [, array &arr ])
   Parses the string into variables --returns void--
parse_url(string url [, int component ])
   Parse a URL and return its components --returns mixed--
parsekit_compile_file(string filename [, array &errors [, int options ]])
   Compile a string of PHP code and return the resulting op array --returns array--
parsekit_compile_string(string phpcode [, array &errors [, int options ]])
   Compile a string of PHP code and return the resulting op array --returns array--
parsekit_func_arginfo(mixed function)
   Return information regarding function argument(s) --returns array--
passthru(string command [, int &return_var ])
   Execute an external program and display raw output --returns void--
pathinfo(string path [, int options ])
   Returns information about a file path --returns mixed--
pclose(resource handle)
   Closes process file pointer --returns int--
pcntl_alarm(int seconds)
   Set an alarm clock for delivery of a signal --returns int--
pcntl_exec(string path [, array args [, array envs ]])
   Executes specified program in current process space --returns void--
pcntl_fork(void)
   Forks the currently running process --returns int--
pcntl_getpriority ([ int pid [, int process_identifier ]])
   Get the priority of any process --returns int--
pcntl_setpriority(int priority [, int pid [, int process_identifier ]])
   Change the priority of any process --returns bool--
pcntl_signal(int signo, callback handler [, bool restart_syscalls ])
   Installs a signal handler --returns bool--
pcntl_wait(int &status [, int options ])
   Waits on or returns the status of a forked child --returns int--
pcntl_waitpid(int pid, int &status [, int options ])
   Waits on or returns the status of a forked child --returns int--
pcntl_wexitstatus(int status)
   Returns the return code of a terminated child --returns int--
pcntl_wifexited(int status)
   Checks if status code represents a normal exit --returns bool--
pcntl_wifsignaled(int status)
   Checks whether the status code represents a termination due to a signal --returns bool--
pcntl_wifstopped(int status)
   Checks whether the child process is currently stopped --returns bool--
pcntl_wstopsig(int status)
   Returns the signal which caused the child to stop --returns int--
pcntl_wtermsig(int status)
   Returns the signal which caused the child to terminate --returns int--
PDF_activate_item(resource pdfdoc, int id)
   Activate structure element or other content item --returns bool--
PDF_add_annotation
   Add annotation [deprecated] --returns ?--
PDF_add_bookmark
   Add bookmark for current page [deprecated] --returns ?--
PDF_add_launchlink(resource pdfdoc, float llx, float lly, float urx, float ury, string filename)
   Add launch annotation for current page [deprecated] --returns bool--
PDF_add_locallink(resource pdfdoc, float lowerleftx, float lowerlefty, float upperrightx, float upperrighty, int page, string dest)
   Add link annotation for current page [deprecated] --returns bool--
PDF_add_nameddest(resource pdfdoc, string name, string optlist)
   Create named destination --returns bool--
PDF_add_note(resource pdfdoc, float llx, float lly, float urx, float ury, string contents, string title, string icon, int open)
   Set annotation for current page [deprecated] --returns bool--
PDF_add_outline
   Add bookmark for current page [deprecated] --returns ?--
PDF_add_pdflink(resource pdfdoc, float bottom_left_x, float bottom_left_y, float up_right_x, float up_right_y, string filename, int page, string dest)
   Add file link annotation for current page [deprecated] --returns bool--
PDF_add_table_cell(resource pdfdoc, int table, int column, int row, string text, string optlist)
   Add a cell to a new or existing table --returns int--
PDF_add_textflow(resource pdfdoc, int textflow, string text, string optlist)
   Create Textflow or add text to existing Textflow --returns int--
PDF_add_thumbnail(resource pdfdoc, int image)
   Add thumbnail for current page --returns bool--
PDF_add_weblink(resource pdfdoc, float lowerleftx, float lowerlefty, float upperrightx, float upperrighty, string url)
   Add weblink for current page [deprecated] --returns bool--
PDF_arc(resource p, float x, float y, float r, float alpha, float beta)
   Draw a counterclockwise circular arc segment --returns bool--
PDF_arcn(resource p, float x, float y, float r, float alpha, float beta)
   Draw a clockwise circular arc segment --returns bool--
PDF_attach_file(resource pdfdoc, float llx, float lly, float urx, float ury, string filename, string description, string author, string mimetype, string icon)
   Add file attachment for current page [deprecated] --returns bool--
PDF_begin_document(resource pdfdoc, string filename, string optlist)
   Create new PDF file --returns int--
PDF_begin_font(resource pdfdoc, string filename, float a, float b, float c, float d, float e, float f, string optlist)
   Start a Type 3 font definition --returns bool--
PDF_begin_glyph(resource pdfdoc, string glyphname, float wx, float llx, float lly, float urx, float ury)
   Start glyph definition for Type 3 font --returns bool--
PDF_begin_item(resource pdfdoc, string tag, string optlist)
   Open structure element or other content item --returns int--
PDF_begin_layer(resource pdfdoc, int layer)
   Start layer --returns bool--
PDF_begin_page_ext(resource pdfdoc, float width, float height, string optlist)
   Start new page --returns bool--
PDF_begin_page(resource pdfdoc, float width, float height)
   Start new page [deprecated] --returns bool--
PDF_begin_pattern(resource pdfdoc, float width, float height, float xstep, float ystep, int painttype)
   Start pattern definition --returns int--
PDF_begin_template_ext(resource pdfdoc, float width, float height, string optlist)
   Start template definition --returns int--
PDF_begin_template(resource pdfdoc, float width, float height)
   Start template definition [deprecated] --returns int--
PDF_circle(resource pdfdoc, float x, float y, float r)
   Draw a circle --returns bool--
PDF_clip(resource p)
   Clip to current path --returns bool--
PDF_close_image(resource p, int image)
   Close image --returns bool--
PDF_close_pdi_page(resource p, int page)
   Close the page handle --returns bool--
PDF_close_pdi(resource p, int doc)
   Close the input PDF document [deprecated] --returns bool--
PDF_close(resource p)
   Close pdf resource [deprecated] --returns bool--
PDF_closepath_fill_stroke(resource p)
   Close, fill and stroke current path --returns bool--
PDF_closepath_stroke(resource p)
   Close and stroke path --returns bool--
PDF_closepath(resource p)
   Close current path --returns bool--
PDF_concat(resource p, float a, float b, float c, float d, float e, float f)
   Concatenate a matrix to the CTM --returns bool--
PDF_continue_text(resource p, string text)
   Output text in next line --returns bool--
PDF_create_3dview(resource pdfdoc, string username, string optlist)
   Create 3D view --returns int--
PDF_create_action(resource pdfdoc, string type, string optlist)
   Create action for objects or events --returns int--
PDF_create_annotation(resource pdfdoc, float llx, float lly, float urx, float ury, string type, string optlist)
   Create rectangular annotation --returns bool--
PDF_create_bookmark(resource pdfdoc, string text, string optlist)
   Create bookmark --returns int--
PDF_create_field(resource pdfdoc, float llx, float lly, float urx, float ury, string name, string type, string optlist)
   Create form field --returns bool--
PDF_create_fieldgroup(resource pdfdoc, string name, string optlist)
   Create form field group --returns bool--
PDF_create_gstate(resource pdfdoc, string optlist)
   Create graphics state object --returns int--
PDF_create_pvf(resource pdfdoc, string filename, string data, string optlist)
   Create PDFlib virtual file --returns bool--
PDF_create_textflow(resource pdfdoc, string text, string optlist)
   Create textflow object --returns int--
PDF_curveto(resource p, float x1, float y1, float x2, float y2, float x3, float y3)
   Draw Bezier curve --returns bool--
PDF_define_layer(resource pdfdoc, string name, string optlist)
   Create layer definition --returns int--
PDF_delete_pvf(resource pdfdoc, string filename)
   Delete PDFlib virtual file --returns int--
PDF_delete_table(resource pdfdoc, int table, string optlist)
   Delete table object --returns bool--
PDF_delete_textflow(resource pdfdoc, int textflow)
   Delete textflow object --returns bool--
PDF_delete(resource pdfdoc)
   Delete PDFlib object --returns bool--
PDF_encoding_set_char(resource pdfdoc, string encoding, int slot, string glyphname, int uv)
   Add glyph name and/or Unicode value --returns bool--
PDF_end_document(resource pdfdoc, string optlist)
   Close PDF file --returns bool--
PDF_end_font(resource pdfdoc)
   Terminate Type 3 font definition --returns bool--
PDF_end_glyph(resource pdfdoc)
   Terminate glyph definition for Type 3 font --returns bool--
PDF_end_item(resource pdfdoc, int id)
   Close structure element or other content item --returns bool--
PDF_end_layer(resource pdfdoc)
   Deactivate all active layers --returns bool--
PDF_end_page_ext(resource pdfdoc, string optlist)
   Finish page --returns bool--
PDF_end_page(resource p)
   Finish page --returns bool--
PDF_end_pattern(resource p)
   Finish pattern --returns bool--
PDF_end_template(resource p)
   Finish template --returns bool--
PDF_endpath(resource p)
   End current path --returns bool--
PDF_fill_imageblock(resource pdfdoc, int page, string blockname, int image, string optlist)
   Fill image block with variable data --returns int--
PDF_fill_pdfblock(resource pdfdoc, int page, string blockname, int contents, string optlist)
   Fill PDF block with variable data --returns int--
PDF_fill_stroke(resource p)
   Fill and stroke path --returns bool--
PDF_fill_textblock(resource pdfdoc, int page, string blockname, string text, string optlist)
   Fill text block with variable data --returns int--
PDF_fill(resource p)
   Fill current path --returns bool--
PDF_findfont(resource p, string fontname, string encoding, int embed)
   Prepare font for later use [deprecated] --returns int--
PDF_fit_image(resource pdfdoc, int image, float x, float y, string optlist)
   Place image or template --returns bool--
PDF_fit_pdi_page(resource pdfdoc, int page, float x, float y, string optlist)
   Place imported PDF page --returns bool--
PDF_fit_table(resource pdfdoc, int table, float llx, float lly, float urx, float ury, string optlist)
   Place table on page --returns string--
PDF_fit_textflow(resource pdfdoc, int textflow, float llx, float lly, float urx, float ury, string optlist)
   Format textflow in rectangular area --returns string--
PDF_fit_textline(resource pdfdoc, string text, float x, float y, string optlist)
   Place single line of text --returns bool--
PDF_get_apiname(resource pdfdoc)
   Get name of unsuccessfull API function --returns string--
PDF_get_buffer(resource p)
   Get PDF output buffer --returns string--
PDF_get_errmsg(resource pdfdoc)
   Get error text --returns string--
PDF_get_errnum(resource pdfdoc)
   Get error number --returns int--
PDF_get_font
   Get font [deprecated] --returns ?--
PDF_get_fontname
   Get font name [deprecated] --returns ?--
PDF_get_fontsize
   Font handling [deprecated] --returns ?--
PDF_get_image_height
   Get image height [deprecated] --returns ?--
PDF_get_image_width
   Get image width [deprecated] --returns ?--
PDF_get_majorversion(void)
   Get major version number [deprecated] --returns int--
PDF_get_minorversion(void)
   Get minor version number [deprecated] --returns int--
PDF_get_parameter(resource p, string key, float modifier)
   Get string parameter --returns string--
PDF_get_pdi_parameter(resource p, string key, int doc, int page, int reserved)
   Get PDI string parameter [deprecated] --returns string--
PDF_get_pdi_value(resource p, string key, int doc, int page, int reserved)
   Get PDI numerical parameter [deprecated] --returns float--
PDF_get_value(resource p, string key, float modifier)
   Get numerical parameter --returns float--
PDF_info-font(resource pdfdoc, int font, string keyword, string optlist)
   Query detailed information about a loaded font --returns float--
PDF_info_matchbox(resource pdfdoc, string boxname, int num, string keyword)
   Query matchbox information --returns float--
PDF_info_table(resource pdfdoc, int table, string keyword)
   Retrieve table information --returns float--
PDF_info_textflow(resource pdfdoc, int textflow, string keyword)
   Query textflow state --returns float--
PDF_info_textline(resource pdfdoc, string text, string keyword, string optlist)
   Perform textline formatting and query metrics --returns float--
PDF_initgraphics(resource p)
   Reset graphic state --returns bool--
PDF_lineto(resource p, float x, float y)
   Draw a line --returns bool--
PDF_load_3ddata(resource pdfdoc, string filename, string optlist)
   Load 3D model --returns int--
PDF_load_font(resource pdfdoc, string fontname, string encoding, string optlist)
   Search and prepare font --returns int--
PDF_load_iccprofile(resource pdfdoc, string profilename, string optlist)
   Search and prepare ICC profile --returns int--
PDF_load_image(resource pdfdoc, string imagetype, string filename, string optlist)
   Open image file --returns int--
PDF_makespotcolor(resource p, string spotname)
   Make spot color --returns int--
PDF_moveto(resource p, float x, float y)
   Set current point --returns bool--
PDF_new()
   Create PDFlib object --returns resource--
PDF_open_ccitt(resource pdfdoc, string filename, int width, int height, int BitReverse, int k, int Blackls1)
   Open raw CCITT image [deprecated] --returns int--
PDF_open_file(resource p, string filename)
   Create PDF file [deprecated] --returns bool--
PDF_open_gif
   Open GIF image [deprecated] --returns ?--
PDF_open_image_file(resource p, string imagetype, string filename, string stringparam, int intparam)
   Read image from file [deprecated] --returns int--
PDF_open_image(resource p, string imagetype, string source, string data, int length, int width, int height, int components, int bpc, string params)
   Use image data [deprecated] --returns int--
PDF_open_jpeg
   Open JPEG image [deprecated] --returns ?--
PDF_open_memory_image(resource p, resource image)
   Open image created with PHP's image functions [not supported] --returns int--
PDF_open_pdi_page(resource p, int doc, int pagenumber, string optlist)
   Prepare a page --returns int--
PDF_open_pdi(resource pdfdoc, string filename, string optlist, int len)
   Open PDF file [deprecated] --returns int--
PDF_open_tiff
   Open TIFF image [deprecated] --returns ?--
PDF_pcos_get_number(resource p, int doc, string path)
   Get value of pCOS path with type number or boolean --returns float--
PDF_pcos_get_stream(resource p, int doc, string optlist, string path)
   Get contents of pCOS path with type stream, fstream, or string --returns string--
PDF_pcos_get_string(resource p, int doc, string path)
   Get value of pCOS path with type name, string, or boolean --returns string--
PDF_place_image(resource pdfdoc, int image, float x, float y, float scale)
   Place image on the page [deprecated] --returns bool--
PDF_place_pdi_page(resource pdfdoc, int page, float x, float y, float sx, float sy)
   Place PDF page [deprecated] --returns bool--
PDF_process_pdi(resource pdfdoc, int doc, int page, string optlist)
   Process imported PDF document --returns int--
PDF_rect(resource p, float x, float y, float width, float height)
   Draw rectangle --returns bool--
PDF_restore(resource p)
   Restore graphics state --returns bool--
PDF_resume_page(resource pdfdoc, string optlist)
   Resume page --returns bool--
PDF_rotate(resource p, float phi)
   Rotate coordinate system --returns bool--
PDF_save(resource p)
   Save graphics state --returns bool--
PDF_scale(resource p, float sx, float sy)
   Scale coordinate system --returns bool--
PDF_set_border_color(resource p, float red, float green, float blue)
   Set border color of annotations [deprecated] --returns bool--
PDF_set_border_dash(resource pdfdoc, float black, float white)
   Set border dash style of annotations [deprecated] --returns bool--
PDF_set_border_style(resource pdfdoc, string style, float width)
   Set border style of annotations [deprecated] --returns bool--
PDF_set_char_spacing
   Set character spacing [deprecated] --returns ?--
PDF_set_duration
   Set duration between pages [deprecated] --returns ?--
PDF_set_gstate(resource pdfdoc, int gstate)
   Activate graphics state object --returns bool--
PDF_set_horiz_scaling
   Set horizontal text scaling [deprecated] --returns ?--
PDF_set_info_author
   Fill the author document info field [deprecated] --returns ?--
PDF_set_info_creator
   Fill the creator document info field [deprecated] --returns ?--
PDF_set_info_keywords
   Fill the keywords document info field [deprecated] --returns ?--
PDF_set_info_subject
   Fill the subject document info field [deprecated] --returns ?--
PDF_set_info_title
   Fill the title document info field [deprecated] --returns ?--
PDF_set_info(resource p, string key, string value)
   Fill document info field --returns bool--
PDF_set_layer_dependency(resource pdfdoc, string type, string optlist)
   Define relationships among layers --returns bool--
PDF_set_leading
   Set distance between text lines [deprecated] --returns ?--
PDF_set_parameter(resource p, string key, string value)
   Set string parameter --returns bool--
PDF_set_text_matrix
   Set text matrix [deprecated] --returns ?--
PDF_set_text_pos(resource p, float x, float y)
   Set text position --returns bool--
PDF_set_text_rendering
   Determine text rendering [deprecated] --returns ?--
PDF_set_text_rise
   Set text rise [deprecated] --returns ?--
PDF_set_value(resource p, string key, float value)
   Set numerical parameter --returns bool--
PDF_set_word_spacing
   Set spacing between words [deprecated] --returns ?--
PDF_setcolor(resource p, string fstype, string colorspace, float c1, float c2, float c3, float c4)
   Set fill and stroke color --returns bool--
PDF_setdash(resource pdfdoc, float b, float w)
   Set simple dash pattern --returns bool--
PDF_setdashpattern(resource pdfdoc, string optlist)
   Set dash pattern --returns bool--
PDF_setflat(resource pdfdoc, float flatness)
   Set flatness --returns bool--
PDF_setfont(resource pdfdoc, int font, float fontsize)
   Set font --returns bool--
PDF_setgray_fill(resource p, float g)
   Set fill color to gray [deprecated] --returns bool--
PDF_setgray_stroke(resource p, float g)
   Set stroke color to gray [deprecated] --returns bool--
PDF_setgray(resource p, float g)
   Set color to gray [deprecated] --returns bool--
PDF_setlinecap(resource p, int linecap)
   Set linecap parameter --returns bool--
PDF_setlinejoin(resource p, int value)
   Set linejoin parameter --returns bool--
PDF_setlinewidth(resource p, float width)
   Set line width --returns bool--
PDF_setmatrix(resource p, float a, float b, float c, float d, float e, float f)
   Set current transformation matrix --returns bool--
PDF_setmiterlimit(resource pdfdoc, float miter)
   Set miter limit --returns bool--
PDF_setpolydash
   Set complicated dash pattern [deprecated] --returns ?--
PDF_setrgbcolor_fill(resource p, float red, float green, float blue)
   Set fill rgb color values [deprecated] --returns bool--
PDF_setrgbcolor_stroke(resource p, float red, float green, float blue)
   Set stroke rgb color values [deprecated] --returns bool--
PDF_setrgbcolor(resource p, float red, float green, float blue)
   Set fill and stroke rgb color values [deprecated] --returns bool--
PDF_shading_pattern(resource pdfdoc, int shading, string optlist)
   Define shading pattern --returns int--
PDF_shading(resource pdfdoc, string shtype, float x0, float y0, float x1, float y1, float c1, float c2, float c3, float c4, string optlist)
   Define blend --returns int--
PDF_shfill(resource pdfdoc, int shading)
   Fill area with shading --returns bool--
PDF_show_boxed(resource p, string text, float left, float top, float width, float height, string mode, string feature)
   Output text in a box [deprecated] --returns int--
PDF_show_xy(resource p, string text, float x, float y)
   Output text at given position --returns bool--
PDF_show(resource pdfdoc, string text)
   Output text at current position --returns bool--
PDF_skew(resource p, float alpha, float beta)
   Skew the coordinate system --returns bool--
PDF_stringwidth(resource p, string text, int font, float fontsize)
   Return width of text --returns float--
PDF_stroke(resource p)
   Stroke path --returns bool--
PDF_suspend_page(resource pdfdoc, string optlist)
   Suspend page --returns bool--
PDF_translate(resource p, float tx, float ty)
   Set origin of coordinate system --returns bool--
PDF_utf16_to_utf8(resource pdfdoc, string utf16string)
   Convert string from UTF-16 to UTF-8 --returns string--
PDF_utf32_to_utf16(resource pdfdoc, string utf32string, string ordering)
   Convert string from UTF-32 to UTF-16 --returns string--
PDF_utf8_to_utf16(resource pdfdoc, string utf8string, string ordering)
   Convert string from UTF-8 to UTF-16 --returns string--
PDO::pgsqlLOBCreate(void)
   Creates a new large object --returns string--
PDO::pgsqlLOBOpen(string oid [, string mode ])
   Opens an existing large object stream --returns resource--
PDO::pgsqlLOBUnlink(string oid)
   Deletes the large object --returns bool--
sqliteCreateAggregate(string function_name, callback step_func, callback finalize_func [, int num_args ]) step(mixed context, int rownumber, mixed value1 [, mixed value2 [, mixed .. ]]) fini(mixed context, int rownumber)
   Registers an aggregating User Defined Function for use in SQL statements --returns bool--
sqliteCreateFunction(string function_name, callback callback [, int num_args ])
   Registers a User Defined Function for use in SQL statements --returns bool--
pfsockopen(string hostname [, int port [, int &errno [, string &errstr [, float timeout ]]]])
   Open persistent Internet or Unix domain socket connection --returns resource--
pg_affected_rows(resource result)
   Returns number of affected records (tuples) --returns int--
pg_cancel_query(resource connection)
   Cancel an asynchronous query --returns bool--
pg_client_encoding ([ resource connection ])
   Gets the client encoding --returns string--
pg_close ([ resource connection ])
   Closes a PostgreSQL connection --returns bool--
pg_connect(string connection_string [, int connect_type ])
   Open a PostgreSQL connection --returns resource--
pg_connection_busy(resource connection)
   Get connection is busy or not --returns bool--
pg_connection_reset(resource connection)
   Reset connection (reconnect) --returns bool--
pg_connection_status(resource connection)
   Get connection status --returns int--
pg_convert(resource connection, string table_name, array assoc_array [, int options ])
   Convert associative array values into suitable for SQL statement --returns array--
pg_copy_from(resource connection, string table_name, array rows [, string delimiter [, string null_as ]])
   Insert records into a table from an array --returns bool--
pg_copy_to(resource connection, string table_name [, string delimiter [, string null_as ]])
   Copy a table to an array --returns array--
pg_dbname ([ resource connection ])
   Get the database name --returns string--
pg_delete(resource connection, string table_name, array assoc_array [, int options ])
   Deletes records --returns mixed--
pg_end_copy ([ resource connection ])
   Sync with PostgreSQL backend --returns bool--
pg_escape_bytea ([ resource connection ], string data)
   Escape a string for insertion into a bytea field --returns string--
pg_escape_string ([ resource connection ], string data)
   Escape a string for insertion into a text field --returns string--
pg_execute(resource connection, string stmtname, array params) resource pg_execute(string stmtname, array params)
   Sends a request to execute a prepared statement with given parameters, and waits for the result. --returns resource--
pg_fetch_all_columns(resource result [, int column ])
   Fetches all rows in a particular result column as an array --returns array--
pg_fetch_all(resource result)
   Fetches all rows from a result as an array --returns array--
pg_fetch_array(resource result [, int row [, int result_type ]])
   Fetch a row as an array --returns array--
pg_fetch_assoc(resource result [, int row ])
   Fetch a row as an associative array --returns array--
pg_fetch_object(resource result [, int row [, int result_type ]]) object pg_fetch_object(resource result [, int row [, string class_name [, array params ]]])
   Fetch a row as an object --returns object--
pg_fetch_result(resource result, int row, mixed field) string pg_fetch_result(resource result, mixed field)
   Returns values from a result resource --returns string--
pg_fetch_row(resource result [, int row ])
   Get a row as an enumerated array --returns array--
pg_field_is_null(resource result, int row, mixed field) int pg_field_is_null(resource result, mixed field)
   Test if a field is SQL NULL --returns int--
pg_field_name(resource result, int field_number)
   Returns the name of a field --returns string--
pg_field_num(resource result, string field_name)
   Returns the field number of the named field --returns int--
pg_field_prtlen(resource result, int row_number, mixed field_name_or_number) int pg_field_prtlen(resource result, mixed field_name_or_number)
   Returns the printed length --returns int--
pg_field_size(resource result, int field_number)
   Returns the internal storage size of the named field --returns int--
pg_field_table(resource result, int field_number [, bool oid_only ])
   Returns the name or oid of the tables field --returns mixed--
pg_field_type_oid(resource result, int field_number)
   Returns the type ID (OID) for the corresponding field number --returns int--
pg_field_type(resource result, int field_number)
   Returns the type name for the corresponding field number --returns string--
pg_free_result(resource result)
   Free result memory --returns bool--
pg_get_notify(resource connection [, int result_type ])
   Gets SQL NOTIFY message --returns array--
pg_get_pid(resource connection)
   Gets the backend's process ID --returns int--
pg_get_result ([ resource connection ])
   Get asynchronous query result --returns resource--
pg_host ([ resource connection ])
   Returns the host name associated with the connection --returns string--
pg_insert(resource connection, string table_name, array assoc_array [, int options ])
   Insert array into table --returns mixed--
pg_last_error ([ resource connection ])
   Get the last error message string of a connection --returns string--
pg_last_notice(resource connection)
   Returns the last notice message from PostgreSQL server --returns string--
pg_last_oid(resource result)
   Returns the last row's OID --returns string--
pg_lo_close(resource large_object)
   Close a large object --returns bool--
pg_lo_create ([ resource connection [, mixed object_id ]]) int pg_lo_create(mixed object_id)
   Create a large object --returns int--
pg_lo_export(resource connection, int oid, string pathname) bool pg_lo_export(int oid, string pathname)
   Export a large object to file --returns bool--
pg_lo_import(resource connection, string pathname, mixed object_id) int pg_lo_import(string pathname, mixed object_id) int pg_lo_import(string pathname [, resource connection ])
   Import a large object from file --returns int--
pg_lo_open(resource connection, int oid, string mode)
   Open a large object --returns resource--
pg_lo_read_all(resource large_object)
   Reads an entire large object and send straight to browser --returns int--
pg_lo_read(resource large_object [, int len ])
   Read a large object --returns string--
pg_lo_seek(resource large_object, int offset [, int whence ])
   Seeks position within a large object --returns bool--
pg_lo_tell(resource large_object)
   Returns current seek position a of large object --returns int--
pg_lo_unlink(resource connection, int oid)
   Delete a large object --returns bool--
pg_lo_write(resource large_object, string data [, int len ])
   Write to a large object --returns int--
pg_meta_data(resource connection, string table_name)
   Get meta data for table --returns array--
pg_num_fields(resource result)
   Returns the number of fields in a result --returns int--
pg_num_rows(resource result)
   Returns the number of rows in a result --returns int--
pg_options ([ resource connection ])
   Get the options associated with the connection --returns string--
pg_parameter_status(resource connection, string param_name) string pg_parameter_status(string param_name)
   Looks up a current parameter setting of the server. --returns string--
pg_pconnect(string connection_string [, int connect_type ])
   Open a persistent PostgreSQL connection --returns resource--
pg_ping ([ resource connection ])
   Ping database connection --returns bool--
pg_port ([ resource connection ])
   Return the port number associated with the connection --returns int--
pg_prepare(resource connection, string stmtname, string query) resource pg_prepare(string stmtname, string query)
   Submits a request to create a prepared statement with the given parameters, and waits for completion. --returns resource--
pg_put_line(string data) bool pg_put_line(resource connection, string data)
   Send a NULL-terminated string to PostgreSQL backend --returns bool--
pg_query_params(resource connection, string query, array params) resource pg_query_params(string query, array params)
   Submits a command to the server and waits for the result, with the ability to pass parameters separately from the SQL command text. --returns resource--
pg_query(string query) resource pg_query(resource connection, string query)
   Execute a query --returns resource--
pg_result_error_field(resource result, int fieldcode)
   Returns an individual field of an error report. --returns string--
pg_result_error(resource result)
   Get error message associated with result --returns string--
pg_result_seek(resource result, int offset)
   Set internal row offset in result resource --returns bool--
pg_result_status(resource result [, int type ])
   Get status of query result --returns mixed--
pg_select(resource connection, string table_name, array assoc_array [, int options ])
   Select records --returns mixed--
pg_send_execute(resource connection, string stmtname, array params)
   Sends a request to execute a prepared statement with given parameters, without waiting for the result(s). --returns bool--
pg_send_prepare(resource connection, string stmtname, string query)
   Sends a request to create a prepared statement with the given parameters, without waiting for completion. --returns bool--
pg_send_query_params(resource connection, string query, array params)
   Submits a command and separate parameters to the server without waiting for the result(s). --returns bool--
pg_send_query(resource connection, string query)
   Sends asynchronous query --returns bool--
pg_set_client_encoding(string encoding) int pg_set_client_encoding(resource connection, string encoding)
   Set the client encoding --returns int--
pg_set_error_verbosity(resource connection, int verbosity) int pg_set_error_verbosity(int verbosity)
   Determines the verbosity of messages returned by pg_last_error() and pg_result_error(). --returns int--
pg_trace(string pathname [, string mode [, resource connection ]])
   Enable tracing a PostgreSQL connection --returns bool--
pg_transaction_status(resource connection)
   Returns the current in-transaction status of the server. --returns int--
pg_tty ([ resource connection ])
   Return the TTY name associated with the connection --returns string--
pg_unescape_bytea(string data)
   Unescape binary for bytea type --returns string--
pg_untrace ([ resource connection ])
   Disable tracing of a PostgreSQL connection --returns bool--
pg_update(resource connection, string table_name, array data, array condition [, int options ])
   Update table --returns mixed--
pg_version ([ resource connection ])
   Returns an array with client, protocol and server version (when available) --returns array--
php_check_syntax(string filename [, string &error_message ])
   Check the PHP syntax of (and execute) the specified file --returns bool--
php_ini_loaded_file(void)
   Retrieve a path to the loaded php.ini file --returns string--
php_ini_scanned_files(void)
   Return a list of .ini files parsed from the additional ini dir --returns string--
php_logo_guid(void)
   Gets the logo guid --returns string--
php_sapi_name(void)
   Returns the type of interface between web server and PHP --returns string--
php_strip_whitespace(string filename)
   Return source with stripped comments and whitespace --returns string--
php_uname ([ string mode ])
   Returns information about the operating system PHP is running on --returns string--
phpcredits ([ int flag ])
   Prints out the credits for PHP --returns bool--
phpinfo ([ int what ])
   Outputs lots of PHP information --returns bool--
phpversion ([ string extension ])
   Gets the current PHP version --returns string--
pi(void)
   Get value of pi --returns float--
png2wbmp(string pngname, string wbmpname, int dest_height, int dest_width, int threshold)
   Convert PNG image file to WBMP image file --returns bool--
popen(string command, string mode)
   Opens process file pointer --returns resource--
pos
   Alias of current() --returns ?--
posix_access(string file [, int mode ])
   Determine accessibility of a file --returns bool--
posix_ctermid(void)
   Get path name of controlling terminal --returns string--
posix_get_last_error(void)
   Retrieve the error number set by the last posix function that failed --returns int--
posix_getcwd(void)
   Pathname of current directory --returns string--
posix_getegid(void)
   Return the effective group ID of the current process --returns int--
posix_geteuid(void)
   Return the effective user ID of the current process --returns int--
posix_getgid(void)
   Return the real group ID of the current process --returns int--
posix_getgrgid(int gid)
   Return info about a group by group id --returns array--
posix_getgrnam(string name)
   Return info about a group by name --returns array--
posix_getgroups(void)
   Return the group set of the current process --returns array--
posix_getlogin(void)
   Return login name --returns string--
posix_getpgid(int pid)
   Get process group id for job control --returns int--
posix_getpgrp(void)
   Return the current process group identifier --returns int--
posix_getpid(void)
   Return the current process identifier --returns int--
posix_getppid(void)
   Return the parent process identifier --returns int--
posix_getpwnam(string username)
   Return info about a user by username --returns array--
posix_getpwuid(int uid)
   Return info about a user by user id --returns array--
posix_getrlimit(void)
   Return info about system resource limits --returns array--
posix_getsid(int pid)
   Get the current sid of the process --returns int--
posix_getuid(void)
   Return the real user ID of the current process --returns int--
posix_initgroups(string name, int base_group_id)
   Calculate the group access list --returns bool--
posix_isatty(int fd)
   Determine if a file descriptor is an interactive terminal --returns bool--
posix_kill(int pid, int sig)
   Send a signal to a process --returns bool--
posix_mkfifo(string pathname, int mode)
   Create a fifo special file (a named pipe) --returns bool--
posix_mknod(string pathname, int mode [, int major [, int minor ]])
   Create a special or ordinary file (POSIX.1) --returns bool--
posix_setegid(int gid)
   Set the effective GID of the current process --returns bool--
posix_seteuid(int uid)
   Set the effective UID of the current process --returns bool--
posix_setgid(int gid)
   Set the GID of the current process --returns bool--
posix_setpgid(int pid, int pgid)
   Set process group id for job control --returns bool--
posix_setsid(void)
   Make the current process a session leader --returns int--
posix_setuid(int uid)
   Set the UID of the current process --returns bool--
posix_strerror(int errno)
   Retrieve the system error message associated with the given errno --returns string--
posix_times(void)
   Get process times --returns array--
posix_ttyname(int fd)
   Determine terminal device name --returns string--
posix_uname(void)
   Get system name --returns array--
pow(number base, number exp)
   Exponential expression --returns number--
preg_grep(string pattern, array input [, int flags ])
   Return array entries that match the pattern --returns array--
preg_last_error(void)
   Returns the error code of the last PCRE regex execution --returns int--
preg_match_all(string pattern, string subject, array &matches [, int flags [, int offset ]])
   Perform a global regular expression match --returns int--
preg_match(string pattern, string subject [, array &matches [, int flags [, int offset ]]])
   Perform a regular expression match --returns int--
preg_quote(string str [, string delimiter ])
   Quote regular expression characters --returns string--
preg_replace_callback(mixed pattern, callback callback, mixed subject [, int limit [, int &count ]])
   Perform a regular expression search and replace using a callback --returns mixed--
preg_replace(mixed pattern, mixed replacement, mixed subject [, int limit [, int &count ]])
   Perform a regular expression search and replace --returns mixed--
preg_split(string pattern, string subject [, int limit [, int flags ]])
   Split string by a regular expression --returns array--
prev(array &array)
   Rewind the internal array pointer --returns mixed--
print_r(mixed expression [, bool return ])
   Prints human-readable information about a variable --returns mixed--
print(string arg)
   Output a string --returns int--
printer_abort(resource printer_handle)
   Deletes the printer's spool file --returns void--
printer_close(resource printer_handle)
   Close an open printer connection --returns void--
printer_create_brush(int style, string color)
   Create a new brush --returns resource--
printer_create_dc(resource printer_handle)
   Create a new device context --returns void--
printer_create_font(string face, int height, int width, int font_weight, bool italic, bool underline, bool strikeout, int orientation)
   Create a new font --returns resource--
printer_create_pen(int style, int width, string color)
   Create a new pen --returns resource--
printer_delete_brush(resource brush_handle)
   Delete a brush --returns void--
printer_delete_dc(resource printer_handle)
   Delete a device context --returns bool--
printer_delete_font(resource font_handle)
   Delete a font --returns void--
printer_delete_pen(resource pen_handle)
   Delete a pen --returns void--
printer_draw_bmp(resource printer_handle, string filename, int x, int y [, int width ], int height)
   Draw a bmp --returns bool--
printer_draw_chord(resource printer_handle, int rec_x, int rec_y, int rec_x1, int rec_y1, int rad_x, int rad_y, int rad_x1, int rad_y1)
   Draw a chord --returns void--
printer_draw_elipse(resource printer_handle, int ul_x, int ul_y, int lr_x, int lr_y)
   Draw an ellipse --returns void--
printer_draw_line(resource printer_handle, int from_x, int from_y, int to_x, int to_y)
   Draw a line --returns void--
printer_draw_pie(resource printer_handle, int rec_x, int rec_y, int rec_x1, int rec_y1, int rad1_x, int rad1_y, int rad2_x, int rad2_y)
   Draw a pie --returns void--
printer_draw_rectangle(resource printer_handle, int ul_x, int ul_y, int lr_x, int lr_y)
   Draw a rectangle --returns void--
printer_draw_roundrect(resource printer_handle, int ul_x, int ul_y, int lr_x, int lr_y, int width, int height)
   Draw a rectangle with rounded corners --returns void--
printer_draw_text(resource printer_handle, string text, int x, int y)
   Draw text --returns void--
printer_end_doc(resource printer_handle)
   Close document --returns bool--
printer_end_page(resource printer_handle)
   Close active page --returns bool--
printer_get_option(resource printer_handle, string option)
   Retrieve printer configuration data --returns mixed--
printer_list(int enumtype [, string name [, int level ]])
   Return an array of printers attached to the server --returns array--
printer_logical_fontheight(resource printer_handle, int height)
   Get logical font height --returns int--
printer_open ([ string printername ])
   Opens a connection to a printer --returns resource--
printer_select_brush(resource printer_handle, resource brush_handle)
   Select a brush --returns void--
printer_select_font(resource printer_handle, resource font_handle)
   Select a font --returns void--
printer_select_pen(resource printer_handle, resource pen_handle)
   Select a pen --returns void--
printer_set_option(resource printer_handle, int option, mixed value)
   Configure the printer connection --returns bool--
printer_start_doc(resource printer_handle [, string document ])
   Start a new document --returns bool--
printer_start_page(resource printer_handle)
   Start a new page --returns bool--
printer_write(resource printer_handle, string content)
   Write data to the printer --returns bool--
printf(string format [, mixed args [, mixed ... ]])
   Output a formatted string --returns int--
proc_close(resource process)
   Close a process opened by proc_open() and return the exit code of that process. --returns int--
proc_get_status(resource process)
   Get information about a process opened by proc_open() --returns array--
proc_nice(int increment)
   Change the priority of the current process --returns bool--
proc_open(string cmd, array descriptorspec, array &pipes [, string cwd [, array env [, array other_options ]]])
   Execute a command and open file pointers for input/output --returns resource--
proc_terminate(resource process [, int signal ])
   Kills a process opened by proc_open --returns bool--
property_exists(mixed class, string property)
   Checks if the object or class has a property --returns bool--
ps_add_bookmark(resource psdoc, string text [, int parent [, int open ]])
   Add bookmark to current page --returns int--
ps_add_launchlink(resource psdoc, float llx, float lly, float urx, float ury, string filename)
   Adds link which launches file --returns bool--
ps_add_locallink(resource psdoc, float llx, float lly, float urx, float ury, int page, string dest)
   Adds link to a page in the same document --returns bool--
ps_add_note(resource psdoc, float llx, float lly, float urx, float ury, string contents, string title, string icon, int open)
   Adds note to current page --returns bool--
ps_add_pdflink(resource psdoc, float llx, float lly, float urx, float ury, string filename, int page, string dest)
   Adds link to a page in a second pdf document --returns bool--
ps_add_weblink(resource psdoc, float llx, float lly, float urx, float ury, string url)
   Adds link to a web location --returns bool--
ps_arc(resource psdoc, float x, float y, float radius, float alpha, float beta)
   Draws an arc counterclockwise --returns bool--
ps_arcn(resource psdoc, float x, float y, float radius, float alpha, float beta)
   Draws an arc clockwise --returns bool--
ps_begin_page(resource psdoc, float width, float height)
   Start a new page --returns bool--
ps_begin_pattern(resource psdoc, float width, float height, float xstep, float ystep, int painttype)
   Start a new pattern --returns int--
ps_begin_template(resource psdoc, float width, float height)
   Start a new template --returns int--
ps_circle(resource psdoc, float x, float y, float radius)
   Draws a circle --returns bool--
ps_clip(resource psdoc)
   Clips drawing to current path --returns bool--
ps_close_image(resource psdoc, int imageid)
   Closes image and frees memory --returns void--
ps_close(resource psdoc)
   Closes a PostScript document --returns bool--
ps_closepath_stroke(resource psdoc)
   Closes and strokes path --returns bool--
ps_closepath(resource psdoc)
   Closes path --returns bool--
ps_continue_text(resource psdoc, string text)
   Continue text in next line --returns bool--
ps_curveto(resource psdoc, float x1, float y1, float x2, float y2, float x3, float y3)
   Draws a curve --returns bool--
ps_delete(resource psdoc)
   Deletes all resources of a PostScript document --returns bool--
ps_end_page(resource psdoc)
   End a page --returns bool--
ps_end_pattern(resource psdoc)
   End a pattern --returns bool--
ps_end_template(resource psdoc)
   End a template --returns bool--
ps_fill_stroke(resource psdoc)
   Fills and strokes the current path --returns bool--
ps_fill(resource psdoc)
   Fills the current path --returns bool--
ps_findfont(resource psdoc, string fontname, string encoding [, bool embed ])
   Loads a font --returns int--
ps_get_buffer(resource psdoc)
   Fetches the full buffer containig the generated PS data --returns string--
ps_get_parameter(resource psdoc, string name [, float modifier ])
   Gets certain parameters --returns string--
ps_get_value(resource psdoc, string name [, float modifier ])
   Gets certain values --returns float--
ps_hyphenate(resource psdoc, string text)
   Hyphenates a word --returns array--
ps_include_file(resource psdoc, string file)
   Reads an external file with raw PostScript code --returns bool--
ps_lineto(resource psdoc, float x, float y)
   Draws a line --returns bool--
ps_makespotcolor(resource psdoc, string name [, float reserved ])
   Create spot color --returns int--
ps_moveto(resource psdoc, float x, float y)
   Sets current point --returns bool--
ps_new(void)
   Creates a new PostScript document object --returns resource--
ps_open_file(resource psdoc [, string filename ])
   Opens a file for output --returns bool--
ps_open_image_file(resource psdoc, string type, string filename [, string stringparam [, int intparam ]])
   Opens image from file --returns int--
ps_open_image(resource psdoc, string type, string source, string data, int lenght, int width, int height, int components, int bpc, string params)
   Reads an image for later placement --returns int--
ps_open_memory_image(resource psdoc, int gd)
   Takes an GD image and returns an image for placement in a PS document --returns int--
ps_place_image(resource psdoc, int imageid, float x, float y, float scale)
   Places image on the page --returns bool--
ps_rect(resource psdoc, float x, float y, float width, float height)
   Draws a rectangle --returns bool--
ps_restore(resource psdoc)
   Restore previously save context --returns bool--
ps_rotate(resource psdoc, float rot)
   Sets rotation factor --returns bool--
ps_save(resource psdoc)
   Save current context --returns bool--
ps_scale(resource psdoc, float x, float y)
   Sets scaling factor --returns bool--
ps_set_border_color(resource psdoc, float red, float green, float blue)
   Sets color of border for annotations --returns bool--
ps_set_border_dash(resource psdoc, float black, float white)
   Sets length of dashes for border of annotations --returns bool--
ps_set_border_style(resource psdoc, string style, float width)
   Sets border style of annotations --returns bool--
ps_set_info(resource p, string key, string val)
   Sets information fields of document --returns bool--
ps_set_parameter(resource psdoc, string name, string value)
   Sets certain parameters --returns bool--
ps_set_text_pos(resource psdoc, float x, float y)
   Sets position for text output --returns bool--
ps_set_value(resource psdoc, string name, float value)
   Sets certain values --returns bool--
ps_setcolor(resource psdoc, string type, string colorspace, float c1, float c2, float c3, float c4)
   Sets current color --returns bool--
ps_setdash(resource psdoc, float on, float off)
   Sets appearance of a dashed line --returns bool--
ps_setflat(resource psdoc, float value)
   Sets flatness --returns bool--
ps_setfont(resource psdoc, int fontid, float size)
   Sets font to use for following output --returns bool--
ps_setgray(resource psdoc, float gray)
   Sets gray value --returns bool--
ps_setlinecap(resource psdoc, int type)
   Sets appearance of line ends --returns bool--
ps_setlinejoin(resource psdoc, int type)
   Sets how contected lines are joined --returns bool--
ps_setlinewidth(resource psdoc, float width)
   Sets width of a line --returns bool--
ps_setmiterlimit(resource psdoc, float value)
   Sets the miter limit --returns bool--
ps_setoverprintmode(resource psdoc, int mode)
   Sets overprint mode --returns bool--
ps_setpolydash(resource psdoc, float arr)
   Sets appearance of a dashed line --returns bool--
ps_shading_pattern(resource psdoc, int shadingid, string optlist)
   Creates a pattern based on a shading --returns int--
ps_shading(resource psdoc, string type, float x0, float y0, float x1, float y1, float c1, float c2, float c3, float c4, string optlist)
   Creates a shading for later use --returns int--
ps_shfill(resource psdoc, int shadingid)
   Fills an area with a shading --returns bool--
ps_show_boxed(resource psdoc, string text, float left, float bottom, float width, float height, string hmode [, string feature ])
   Output text in a box --returns int--
ps_show_xy(resource psdoc, string text, float x, float y)
   Output text at given position --returns bool--
ps_show_xy2(resource psdoc, string text, int len, float xcoor, float ycoor)
   Output text at position --returns bool--
ps_show(resource psdoc, string text)
   Output text --returns bool--
ps_show2(resource psdoc, string text, int len)
   Output a text at current position --returns bool--
ps_string_geometry(resource psdoc, string text [, int fontid [, float size ]])
   Gets geometry of a string --returns array--
ps_stringwidth(resource psdoc, string text [, int fontid [, float size ]])
   Gets width of a string --returns float--
ps_stroke(resource psdoc)
   Draws the current path --returns bool--
ps_symbol_name(resource psdoc, int ord [, int fontid ])
   Gets name of a glyph --returns string--
ps_symbol_width(resource psdoc, int ord [, int fontid [, float size ]])
   Gets width of a glyph --returns float--
ps_symbol(resource psdoc, int ord)
   Output a glyph --returns bool--
ps_translate(resource psdoc, float x, float y)
   Sets translation --returns bool--
pspell_add_to_personal(int dictionary_link, string word)
   Add the word to a personal wordlist --returns bool--
pspell_add_to_session(int dictionary_link, string word)
   Add the word to the wordlist in the current session --returns bool--
pspell_check(int dictionary_link, string word)
   Check a word --returns bool--
pspell_clear_session(int dictionary_link)
   Clear the current session --returns bool--
pspell_config_create(string language [, string spelling [, string jargon [, string encoding ]]])
   Create a config used to open a dictionary --returns int--
pspell_config_data_dir(int conf, string directory)
   location of language data files --returns bool--
pspell_config_dict_dir(int conf, string directory)
   Location of the main word list --returns bool--
pspell_config_ignore(int dictionary_link, int n)
   Ignore words less than N characters long --returns bool--
pspell_config_mode(int dictionary_link, int mode)
   Change the mode number of suggestions returned --returns bool--
pspell_config_personal(int dictionary_link, string file)
   Set a file that contains personal wordlist --returns bool--
pspell_config_repl(int dictionary_link, string file)
   Set a file that contains replacement pairs --returns bool--
pspell_config_runtogether(int dictionary_link, bool flag)
   Consider run-together words as valid compounds --returns bool--
pspell_config_save_repl(int dictionary_link, bool flag)
   Determine whether to save a replacement pairs list along with the wordlist --returns bool--
pspell_new_config(int config)
   Load a new dictionary with settings based on a given config --returns int--
pspell_new_personal(string personal, string language [, string spelling [, string jargon [, string encoding [, int mode ]]]])
   Load a new dictionary with personal wordlist --returns int--
pspell_new(string language [, string spelling [, string jargon [, string encoding [, int mode ]]]])
   Load a new dictionary --returns int--
pspell_save_wordlist(int dictionary_link)
   Save the personal wordlist to a file --returns bool--
pspell_store_replacement(int dictionary_link, string misspelled, string correct)
   Store a replacement pair for a word --returns bool--
pspell_suggest(int dictionary_link, string word)
   Suggest spellings of a word --returns array--
putenv(string setting)
   Sets the value of an environment variable --returns bool--
px_close(resource pxdoc)
   Closes a paradox database --returns bool--
px_create_fp(resource pxdoc, resource file, array fielddesc)
   Create a new paradox database --returns bool--
px_date2string(resource pxdoc, int value, string format)
   Converts a date into a string. --returns string--
px_delete_record(resource pxdoc, int num)
   Deletes record from paradox database --returns bool--
px_delete(resource pxdoc)
   Deletes resource of paradox database --returns bool--
px_get_field(resource pxdoc, int fieldno)
   Returns the specification of a single field --returns array--
px_get_info(resource pxdoc)
   Return lots of information about a paradox file --returns array--
px_get_parameter(resource pxdoc, string name)
   Gets a parameter --returns string--
px_get_record(resource pxdoc, int num [, int mode ])
   Returns record of paradox database --returns array--
px_get_schema(resource pxdoc [, int mode ])
   Returns the database schema --returns array--
px_get_value(resource pxdoc, string name)
   Gets a value --returns float--
px_insert_record(resource pxdoc, array data)
   Inserts record into paradox database --returns int--
px_new(void)
   Create a new paradox object --returns resource--
px_numfields(resource pxdoc)
   Returns number of fields in a database --returns int--
px_numrecords(resource pxdoc)
   Returns number of records in a database --returns int--
px_open_fp(resource pxdoc, resource file)
   Open paradox database --returns bool--
px_put_record(resource pxdoc, array record [, int recpos ])
   Stores record into paradox database --returns bool--
px_retrieve_record(resource pxdoc, int num [, int mode ])
   Returns record of paradox database --returns array--
px_set_blob_file(resource pxdoc, string filename)
   Sets the file where blobs are read from --returns bool--
px_set_parameter(resource pxdoc, string name, string value)
   Sets a parameter --returns bool--
px_set_tablename(resource pxdoc, string name)
   Sets the name of a table (deprecated) --returns void--
px_set_targetencoding(resource pxdoc, string encoding)
   Sets the encoding for character fields (deprecated) --returns bool--
px_set_value(resource pxdoc, string name, float value)
   Sets a value --returns bool--
px_timestamp2string(resource pxdoc, float value, string format)
   Converts the timestamp into a string. --returns string--
px_update_record(resource pxdoc, array data, int num)
   Updates record in paradox database --returns bool--
qdom_error(void)
   Returns the error string from the last QDOM operation or FALSE if no errors occurred --returns string--
qdom_tree(string doc)
   Creates a tree of an XML string --returns QDomDocument--
quoted_printable_decode(string str)
   Convert a quoted-printable string to an 8 bit string --returns string--
quoted_printable_encode(string str)
   Convert a 8 bit string to a quoted-printable string --returns string--
quotemeta(string str)
   Quote meta characters --returns string--
rad2deg(float number)
   Converts the radian number to the equivalent number in degrees --returns float--
radius_acct_open(void)
   Creates a Radius handle for accounting --returns resource--
radius_add_server(resource radius_handle, string hostname, int port, string secret, int timeout, int max_tries)
   Adds a server --returns bool--
radius_auth_open(void)
   Creates a Radius handle for authentication --returns resource--
radius_close(resource radius_handle)
   Frees all ressources --returns bool--
radius_config(resource radius_handle, string file)
   Causes the library to read the given configuration file --returns bool--
radius_create_request(resource radius_handle, int type)
   Create accounting or authentication request --returns bool--
radius_cvt_addr(string data)
   Converts raw data to IP-Address --returns string--
radius_cvt_int(string data)
   Converts raw data to integer --returns int--
radius_cvt_string(string data)
   Converts raw data to string --returns string--
radius_demangle_mppe_key(resource radius_handle, string mangled)
   Derives mppe-keys from mangled data --returns string--
radius_demangle(resource radius_handle, string mangled)
   Demangles data --returns string--
radius_get_attr(resource radius_handle)
   Extracts an attribute --returns mixed--
radius_get_vendor_attr(string data)
   Extracts a vendor specific attribute --returns array--
radius_put_addr(resource radius_handle, int type, string addr)
   Attaches an IP-Address attribute --returns bool--
radius_put_attr(resource radius_handle, int type, string value)
   Attaches a binary attribute --returns bool--
radius_put_int(resource radius_handle, int type, int value)
   Attaches an integer attribute --returns bool--
radius_put_string(resource radius_handle, int type, string value)
   Attaches a string attribute --returns bool--
radius_put_vendor_addr(resource radius_handle, int vendor, int type, string addr)
   Attaches a vendor specific IP-Address attribute --returns bool--
radius_put_vendor_attr(resource radius_handle, int vendor, int type, string value)
   Attaches a vendor specific binary attribute --returns bool--
radius_put_vendor_int(resource radius_handle, int vendor, int type, int value)
   Attaches a vendor specific integer attribute --returns bool--
radius_put_vendor_string(resource radius_handle, int vendor, int type, string value)
   Attaches a vendor specific string attribute --returns bool--
radius_request_authenticator(resource radius_handle)
   Returns the request authenticator --returns string--
radius_send_request(resource radius_handle)
   Sends the request and waites for a reply --returns int--
radius_server_secret(resource radius_handle)
   Returns the shared secret --returns string--
radius_strerror(resource radius_handle)
   Returns an error message --returns string--
rand(void) int rand(int min, int max)
   Generate a random integer --returns int--
range(mixed low, mixed high [, number step ])
   Create an array containing a range of elements --returns array--
rar_close(resource rar_file)
   Close Rar archive and free all resources --returns bool--
rar_entry_get(resource rar_file, string entry_name)
   Get entry object from the Rar archive --returns RarEntry--
extract(string dir [, string filepath ])
   Extract entry from the archive --returns bool--
getAttr(void)
   Get attributes of the entry --returns int--
getCrc(void)
   Get CRC of the entry --returns int--
getFileTime(void)
   Get entry last modification time --returns string--
getHostOs(void)
   Get entry host OS --returns int--
getMethod(void)
   Get pack method of the entry --returns int--
getName(void)
   Get name of the entry --returns string--
getPackedSize(void)
   Get packed size of the entry --returns int--
getUnpackedSize(void)
   Get unpacked size of the entry --returns int--
getVersion(void)
   Get version of the archiver used to add the entry --returns int--
rar_list(resource rar_file)
   Get entries list from the Rar archive --returns array--
rar_open(string filename [, string password ])
   Open Rar archive --returns resource--
rawurldecode(string str)
   Decode URL-encoded strings --returns string--
rawurlencode(string str)
   URL-encode according to RFC 1738 --returns string--
read_exif_data
   Alias of exif_read_data() --returns ?--
readdir ([ resource dir_handle ])
   Read entry from directory handle --returns string--
readfile(string filename [, bool use_include_path [, resource context ]])
   Outputs a file --returns int--
readgzfile(string filename [, int use_include_path ])
   Output a gz-file --returns int--
readline_add_history(string line)
   Adds a line to the history --returns bool--
readline_callback_handler_install(string prompt, callback callback)
   Initializes the readline callback interface and terminal, prints the prompt and returns immediately --returns bool--
readline_callback_handler_remove(void)
   Removes a previously installed callback handler and restores terminal settings --returns bool--
readline_callback_read_char(void)
   Reads a character and informs the readline callback interface when a line is received --returns void--
readline_clear_history(void)
   Clears the history --returns bool--
readline_completion_function(callback function)
   Registers a completion function --returns bool--
readline_info ([ string varname [, string newvalue ]])
   Gets/sets various internal readline variables --returns mixed--
readline_list_history(void)
   Lists the history --returns array--
readline_on_new_line(void)
   Inform readline that the cursor has moved to a new line --returns void--
readline_read_history ([ string filename ])
   Reads the history --returns bool--
readline_redisplay(void)
   Redraws the display --returns void--
readline_write_history ([ string filename ])
   Writes the history --returns bool--
readline ([ string prompt ])
   Reads a line --returns string--
readlink(string path)
   Returns the target of a symbolic link --returns string--
realpath(string path)
   Returns canonicalized absolute pathname --returns string--
recode_file(string request, resource input, resource output)
   Recode from file to file according to recode request --returns bool--
recode_string(string request, string string)
   Recode a string according to a recode request --returns string--
recode
   Alias of recode_string() --returns ?--
register_shutdown_function(callback function [, mixed parameter [, mixed ... ]])
   Register a function for execution on shutdown --returns void--
register_tick_function(callback function [, mixed arg [, mixed ... ]])
   Register a function for execution on each tick --returns bool--
rename_function(string original_name, string new_name)
   Renames orig_name to new_name in the global function table --returns bool--
rename(string oldname, string newname [, resource context ])
   Renames a file or directory --returns bool--

    --returns ?--

    --returns ?--
reset(array &array)
   Set the internal pointer of an array to its first element --returns mixed--
restore_error_handler(void)
   Restores the previous error handler function --returns bool--
restore_exception_handler(void)
   Restores the previously defined exception handler function --returns bool--
restore_include_path(void)
   Restores the value of the include_path configuration option --returns void--

    --returns ?--
rewind(resource handle)
   Rewind the position of a file pointer --returns bool--
rewinddir ([ resource dir_handle ])
   Rewind directory handle --returns void--
rmdir(string dirname [, resource context ])
   Removes directory --returns bool--
round(float val [, int precision ])
   Rounds a float --returns float--
rpm_close(resource rpmr)
   Closes an RPM file --returns bool--
rpm_get_tag(resource rpmr, int tagnum)
   Retrieves a header tag from an RPM file --returns mixed--
rpm_is_valid(string filename)
   Tests a filename for validity as an RPM file --returns bool--
rpm_open(string filename)
   Opens an RPM file --returns resource--
rpm_version(void)
   Returns a string representing the current version of the rpmreader extension --returns string--
rsort(array &array [, int sort_flags ])
   Sort an array in reverse order --returns bool--
rtrim(string str [, string charlist ])
   Strip whitespace (or other characters) from the end of a string --returns string--
runkit_class_adopt(string classname, string parentname)
   Convert a base class to an inherited class, add ancestral methods when appropriate --returns bool--
runkit_class_emancipate(string classname)
   Convert an inherited class to a base class, removes any method whose scope is ancestral --returns bool--
runkit_constant_add(string constname, mixed value)
   Similar to define(), but allows defining in class definitions as well --returns bool--
runkit_constant_redefine(string constname, mixed newvalue)
   Redefine an already defined constant --returns bool--
runkit_constant_remove(string constname)
   Remove/Delete an already defined constant --returns bool--
runkit_function_add(string funcname, string arglist, string code)
   Add a new function, similar to create_function() --returns bool--
runkit_function_copy(string funcname, string targetname)
   Copy a function to a new function name --returns bool--
runkit_function_redefine(string funcname, string arglist, string code)
   Replace a function definition with a new implementation --returns bool--
runkit_function_remove(string funcname)
   Remove a function definition --returns bool--
runkit_function_rename(string funcname, string newname)
   Change a function's name --returns bool--
runkit_import(string filename [, int flags ])
   Process a PHP file importing function and class definitions, overwriting where appropriate --returns bool--
runkit_lint_file(string filename)
   Check the PHP syntax of the specified file --returns bool--
runkit_lint(string code)
   Check the PHP syntax of the specified php code --returns bool--
runkit_method_add(string classname, string methodname, string args, string code [, int flags ])
   Dynamically adds a new method to a given class --returns bool--
runkit_method_copy(string dClass, string dMethod, string sClass [, string sMethod ])
   Copies a method from class to another --returns bool--
runkit_method_redefine(string classname, string methodname, string args, string code [, int flags ])
   Dynamically changes the code of the given method --returns bool--
runkit_method_remove(string classname, string methodname)
   Dynamically removes the given method --returns bool--
runkit_method_rename(string classname, string methodname, string newname)
   Dynamically changes the name of the given method --returns bool--
runkit_return_value_used(void)
   Determines if the current functions return value will be used --returns bool--
runkit_sandbox_output_handler(object sandbox [, mixed callback ])
   Specify a function to capture and/or process output from a runkit sandbox --returns mixed--
runkit_superglobals(void)
   Return numerically indexed array of registered superglobals --returns array--
commit(void)
   Commits (completes) the current unit of work. --returns bool--
connect(string protocol [, array properties ])
   Establishes a connection to a Messaging Server --returns bool--
SAMConnection-&gt;__construct
   Creates a new connection to a Messaging Server --returns ?--
disconnect(void)
   Disconnects from a Messaging Server --returns bool--
SAMConnection-&gt;errno
   Contains the unique numeric error code of the last executed SAM operation. --returns ?--
SAMConnection-&gt;error
   Contains the text description of the last failed SAM operation. --returns ?--
isConnected(void)
   Queries whether a connection is established to a Messaging Server --returns bool--
peek(string target [, array properties ])
   Read a message from a queue without removing it from the queue. --returns SAMMessage--
peekAll(string target [, array properties ])
   Read one or more messages from a queue without removing it from the queue. --returns array--
receive(string target [, array properties ])
   Receive a message from a queue or subscription. --returns SAMMessage--
remove(string target [, array properties ])
   Remove a message from a queue. --returns SAMMessage--
rollback(void)
   Cancels (rolls back) an in-flight unit of work. --returns bool--
send(string target, SAMMessage msg [, array properties ])
   Send a message to a queue or publish an item to a topic. --returns string--
send(bool switch)
   Turn on or off additional debugging output. --returns void--
subscribe(string targetTopic)
   Create a subscription to a specified topic. --returns string--
unsubscribe(string subscriptionId [, string targetTopic ])
   Cancel a subscription to a specified topic. --returns bool--
SAMMessage-&gt;body
   The body of the message. --returns ?--
SAMMessage-&gt;__construct
   Creates a new Message object --returns ?--
SAMMessage-&gt;header
   The header properties of the message. --returns ?--
SCA::createDataObject(string type_namespace_uri, string type_name)
   create an SDO --returns SDO_DataObject--
SCA::getService(string target [, string binding [, array config ]])
   Obtain a proxy for a service --returns mixed--
SCA_LocalProxy::createDataObject(string type_namespace_uri, string type_name)
   create an SDO --returns SDO_DataObject--
SCA_SoapProxy::createDataObject(string type_namespace_uri, string type_name)
   create an SDO --returns SDO_DataObject--
scandir(string directory [, int sorting_order [, resource context ]])
   List files and directories inside the specified path --returns array--
SDO_DAS_ChangeSummary::beginLogging(void)
   Begin change logging --returns void--
SDO_DAS_ChangeSummary::endLogging(void)
   End change logging --returns void--
SDO_DAS_ChangeSummary::getChangedDataObjects(void)
   Get the changed data objects from a change summary --returns SDO_List--
SDO_DAS_ChangeSummary::getChangeType(SDO_DataObject dataObject)
   Get the type of change made to an SDO_DataObject --returns int--
SDO_DAS_ChangeSummary::getOldContainer(SDO_DataObject data_object)
   Get the old container for a deleted SDO_DataObject --returns SDO_DataObject--
SDO_DAS_ChangeSummary::getOldValues(SDO_DataObject data_object)
   Get the old values for a given changed SDO_DataObject --returns SDO_List--
SDO_DAS_ChangeSummary::isLogging(void)
   Test to see whether change logging is switched on --returns bool--
SDO_DAS_DataFactory::addPropertyToType(string parent_type_namespace_uri, string parent_type_name, string property_name, string type_namespace_uri, string type_name [, array options ])
   Adds a property to a type --returns void--
SDO_DAS_DataFactory::addType(string type_namespace_uri, string type_name [, array options ])
   Add a new type to a model --returns void--
SDO_DAS_DataFactory::getDataFactory(void)
   Get a data factory instance --returns SDO_DAS_DataFactory--
SDO_DAS_DataObject::getChangeSummary(void)
   Get a data object's change summary --returns SDO_DAS_ChangeSummary--
SDO_DAS_Relational::applyChanges(PDO database_handle, SDODataObject root_data_object)
   Applies the changes made to a data graph back to the database. --returns void--
SDO_DAS_Relational::__construct(array database_metadata [, string application_root_type [, array SDO_containment_references_metadata ]])
   Creates an instance of a Relational Data Access Service --returns SDO_DAS_Relational--
SDO_DAS_Relational::createRootDataObject(void)
   Returns the special root object in an otherwise empty data graph. Used when creating a data graph from scratch. --returns SDODataObject--
SDO_DAS_Relational::executePreparedQuery(PDO database_handle, PDOStatement prepared_statement, array value_list [, array column_specifier ])
   Executes an SQL query passed as a prepared statement, with a list of values to substitute for placeholders, and return the results as a normalised data graph. --returns SDODataObject--
SDO_DAS_Relational::executeQuery(PDO database_handle, string SQL_statement [, array column_specifier ])
   Executes a given SQL query against a relational database and returns the results as a normalised data graph. --returns SDODataObject--
SDO_DAS_Setting::getListIndex(void)
   Get the list index for a changed many-valued property --returns int--
SDO_DAS_Setting::getPropertyIndex(void)
   Get the property index for a changed property --returns int--
SDO_DAS_Setting::getPropertyName(void)
   Get the property name for a changed property --returns string--
SDO_DAS_Setting::getValue(void)
   Get the old value for the changed property --returns mixed--
SDO_DAS_Setting::isSet(void)
   Test whether a property was set prior to being modified --returns bool--
SDO_DAS_XML::addTypes(string xsd_file)
   To load a second or subsequent schema file to a SDO_DAS_XML object --returns void--
SDO_DAS_XML::create ([ mixed xsd_file [, string key ]])
   To create SDO_DAS_XML object for a given schema file --returns SDO_DAS_XML--
SDO_DAS_XML::createDataObject(string namespace_uri, string type_name)
   Creates SDO_DataObject for a given namespace URI and type name --returns SDO_DataObject--
SDO_DAS_XML::createDocument ([ string document_element_name ]) SDO_DAS_XML_Document SDO_DAS_XML::createDocument(string document_element_namespace_URI, string document_element_name [, SDO_DataObject dataobject ])
   Creates an XML Document object from scratch, without the need to load a document from a file or string. --returns SDO_DAS_XML_Document--
SDO_DAS_XML_Document::getRootDataObject(void)
   Returns the root SDO_DataObject --returns SDO_DataObject--
SDO_DAS_XML_Document::getRootElementName(void)
   Returns root element's name --returns string--
SDO_DAS_XML_Document::getRootElementURI(void)
   Returns root element's URI string --returns string--
SDO_DAS_XML_Document::setEncoding(string encoding)
   Sets the given string as encoding --returns void--
SDO_DAS_XML_Document::setXMLDeclaration(bool xmlDeclatation)
   Sets the xml declaration --returns void--
SDO_DAS_XML_Document::setXMLVersion(string xmlVersion)
   Sets the given string as xml version --returns void--
SDO_DAS_XML::loadFile(string xml_file)
   Returns SDO_DAS_XML_Document object for a given path to xml instance document --returns SDO_XMLDocument--
SDO_DAS_XML::loadString(string xml_string)
   Returns SDO_DAS_XML_Document for a given xml instance string --returns SDO_DAS_XML_Document--
SDO_DAS_XML::saveFile(SDO_XMLDocument xdoc, string xml_file [, int indent ])
   Saves the SDO_DAS_XML_Document object to a file --returns void--
SDO_DAS_XML::saveString(SDO_XMLDocument xdoc [, int indent ])
   Saves the SDO_DAS_XML_Document object to a string --returns string--
SDO_DataFactory::create(string type_namespace_uri, string type_name)
   Create an SDO_DataObject --returns void--
SDO_DataObject::clear(void)
   Clear an SDO_DataObject's properties --returns void--
SDO_DataObject::createDataObject(mixed identifier)
   Create a child SDO_DataObject --returns SDO_DataObject--
SDO_DataObject::getContainer(void)
   Get a data object's container --returns SDO_DataObject--
SDO_DataObject::getSequence(void)
   Get the sequence for a data object --returns SDO_Sequence--
SDO_DataObject::getTypeName(void)
   Return the name of the type for a data object. --returns string--
SDO_DataObject::getTypeNamespaceURI(void)
   Return the namespace URI of the type for a data object. --returns string--
SDO_Exception::getCause(void)
   Get the cause of the exception. --returns mixed--
SDO_List::insert(mixed value [, int index ])
   Insert into a list --returns void--
SDO_Model_Property::getContainingType(void)
   Get the SDO_Model_Type which contains this property --returns SDO_Model_Type--
SDO_Model_Property::getDefault(void)
   Get the default value for the property --returns mixed--
SDO_Model_Property::getName(void)
   Get the name of the SDO_Model_Property --returns string--
SDO_Model_Property::getType(void)
   Get the SDO_Model_Type of the property --returns SDO_Model_Type--
SDO_Model_Property::isContainment(void)
   Test to see if the property defines a containment relationship --returns bool--
SDO_Model_Property::isMany(void)
   Test to see if the property is many-valued --returns bool--
SDO_Model_ReflectionDataObject::__construct(SDO_DataObject data_object)
   Construct an SDO_Model_ReflectionDataObject --returns SDO_Model_ReflectionDataObject--
SDO_Model_ReflectionDataObject::export(SDO_Model_ReflectionDataObject rdo [, bool return ])
   Get a string describing the SDO_DataObject. --returns mixed--
SDO_Model_ReflectionDataObject::getContainmentProperty(void)
   Get the property which defines the containment relationship to the data object --returns SDO_Model_Property--
SDO_Model_ReflectionDataObject::getInstanceProperties(void)
   Get the instance properties of the SDO_DataObject --returns array--
SDO_Model_ReflectionDataObject::getType(void)
   Get the SDO_Model_Type for the SDO_DataObject --returns SDO_Model_Type--
SDO_Model_Type::getBaseType(void)
   Get the base type for this type --returns SDO_Model_Type--
SDO_Model_Type::getName(void)
   Get the name of the type --returns string--
SDO_Model_Type::getNamespaceURI(void)
   Get the namespace URI of the type --returns string--
SDO_Model_Type::getProperties(void)
   Get the SDO_Model_Property objects defined for the type --returns array--
SDO_Model_Type::getProperty(mixed identifier)
   Get an SDO_Model_Property of the type --returns SDO_Model_Property--
SDO_Model_Type::isAbstractType(void)
   Test to see if this SDO_Model_Type is an abstract data type --returns bool--
SDO_Model_Type::isDataType(void)
   Test to see if this SDO_Model_Type is a primitive data type --returns bool--
SDO_Model_Type::isInstance(SDO_DataObject data_object)
   Test for an SDO_DataObject being an instance of this SDO_Model_Type --returns bool--
SDO_Model_Type::isOpenType(void)
   Test to see if this type is an open type --returns bool--
SDO_Model_Type::isSequencedType(void)
   Test to see if this is a sequenced type --returns bool--
SDO_Sequence::getProperty(int sequence_index)
   Return the property for the specified sequence index. --returns SDO_Model_Property--
SDO_Sequence::insert(mixed value [, int sequenceIndex [, mixed propertyIdentifier ]])
   Insert into a sequence --returns void--
SDO_Sequence::move(int toIndex, int fromIndex)
   Move an item to another sequence position --returns void--
sem_acquire(resource sem_identifier)
   Acquire a semaphore --returns bool--
sem_get(int key [, int max_acquire [, int perm [, int auto_release ]]])
   Get a semaphore id --returns resource--
sem_release(resource sem_identifier)
   Release a semaphore --returns bool--
sem_remove(resource sem_identifier)
   Remove a semaphore --returns bool--
serialize(mixed value)
   Generates a storable representation of a value --returns string--
session_cache_expire ([ int new_cache_expire ])
   Return current cache expire --returns int--
session_cache_limiter ([ string cache_limiter ])
   Get and/or set the current cache limiter --returns string--
session_commit
   Alias of session_write_close() --returns ?--
session_decode(string data)
   Decodes session data from a string --returns bool--
session_destroy(void)
   Destroys all data registered to a session --returns bool--
session_encode(void)
   Encodes the current session data as a string --returns string--
session_get_cookie_params(void)
   Get the session cookie parameters --returns array--
session_id ([ string id ])
   Get and/or set the current session id --returns string--
session_is_registered(string name)
   Find out whether a global variable is registered in a session --returns bool--
session_module_name ([ string module ])
   Get and/or set the current session module --returns string--
session_name ([ string name ])
   Get and/or set the current session name --returns string--
session_pgsql_add_error(int error_level [, string error_message ])
   Increments error counts and sets last error message --returns bool--
session_pgsql_get_error ([ bool with_error_message ])
   Returns number of errors and last error message --returns array--
session_pgsql_get_field(void)
   Get custom field value --returns string--
session_pgsql_reset(void)
   Reset connection to session database servers --returns bool--
session_pgsql_set_field(string value)
   Set custom field value --returns bool--
session_pgsql_status(void)
   Get current save handler status --returns array--
session_regenerate_id ([ bool delete_old_session ])
   Update the current session id with a newly generated one --returns bool--
session_register(mixed name [, mixed ... ])
   Register one or more global variables with the current session --returns bool--
session_save_path ([ string path ])
   Get and/or set the current session save path --returns string--
session_set_cookie_params(int lifetime [, string path [, string domain [, bool secure [, bool httponly ]]]])
   Set the session cookie parameters --returns void--
session_set_save_handler(callback open, callback close, callback read, callback write, callback destroy, callback gc)
   Sets user-level session storage functions --returns bool--
session_start(void)
   Initialize session data --returns bool--
session_unregister(string name)
   Unregister a global variable from the current session --returns bool--
session_unset(void)
   Free all session variables --returns void--
session_write_close(void)
   Write session data and end session --returns void--
set_error_handler(callback error_handler [, int error_types ]) handler(int errno, string errstr [, string errfile [, int errline [, array errcontext ]]])
   Sets a user-defined error handler function --returns mixed--
set_exception_handler(callback exception_handler)
   Sets a user-defined exception handler function --returns string--
set_file_buffer
   Alias of stream_set_write_buffer() --returns ?--
set_include_path(string new_include_path)
   Sets the include_path configuration option --returns string--
set_magic_quotes_runtime(int new_setting)
   Sets the current active configuration setting of magic_quotes_runtime --returns bool--
set_time_limit(int seconds)
   Limits the maximum execution time --returns void--
setcookie(string name [, string value [, int expire [, string path [, string domain [, bool secure [, bool httponly ]]]]]])
   Send a cookie --returns bool--
setlocale(int category, string locale [, string ... ]) string setlocale(int category, array locale)
   Set locale information --returns string--
setrawcookie(string name [, string value [, int expire [, string path [, string domain [, bool secure [, bool httponly ]]]]]])
   Send a cookie without urlencoding the cookie value --returns bool--
settype(mixed &var, string type)
   Set the type of a variable --returns bool--
sha1_file(string filename [, bool raw_output ])
   Calculate the sha1 hash of a file --returns string--
sha1(string str [, bool raw_output ])
   Calculate the sha1 hash of a string --returns string--
shell_exec(string cmd)
   Execute command via shell and return the complete output as a string --returns string--
shm_attach(int key [, int memsize [, int perm ]])
   Creates or open a shared memory segment --returns int--
shm_detach(int shm_identifier)
   Disconnects from shared memory segment --returns bool--
shm_get_var(int shm_identifier, int variable_key)
   Returns a variable from shared memory --returns mixed--
shm_put_var(int shm_identifier, int variable_key, mixed variable)
   Inserts or updates a variable in shared memory --returns bool--
shm_remove_var(int shm_identifier, int variable_key)
   Removes a variable from shared memory --returns bool--
shm_remove(int shm_identifier)
   Removes shared memory from Unix systems --returns bool--
shmop_close(int shmid)
   Close shared memory block --returns void--
shmop_delete(int shmid)
   Delete shared memory block --returns bool--
shmop_open(int key, string flags, int mode, int size)
   Create or open shared memory block --returns int--
shmop_read(int shmid, int start, int count)
   Read data from shared memory block --returns string--
shmop_size(int shmid)
   Get size of shared memory block --returns int--
shmop_write(int shmid, string data, int offset)
   Write data into shared memory block --returns int--
show_source
   Alias of highlight_file() --returns ?--
shuffle(array &array)
   Shuffle an array --returns bool--
nthmac(string clent, string data)
   Obtain the payment url (needs 2 arguments) --returns string--
similar_text(string first, string second [, float &percent ])
   Calculate the similarity between two strings --returns int--
addAttribute(string name, string value [, string namespace ])
   Adds an attribute to the SimpleXML element --returns void--
addChild(string name [, string value [, string namespace ]])
   Adds a child element to the XML node --returns SimpleXMLElement--
asXML ([ string filename ])
   Return a well-formed XML string based on SimpleXML element --returns mixed--
attributes ([ string ns [, bool is_prefix ]])
   Identifies an element's attributes --returns SimpleXMLElement--
children ([ string ns [, bool is_prefix ]])
   Finds children of given node --returns SimpleXMLElement--
SimpleXMLElement-&gt;__construct
   Creates a new SimpleXMLElement object --returns ?--
getDocNamespaces ([ bool recursive ])
   Returns namespaces declared in document --returns array--
getName(void)
   Gets the name of the XML element --returns string--
getNamespaces ([ bool recursive ])
   Returns namespaces used in document --returns array--
registerXPathNamespace(string prefix, string ns)
   Creates a prefix/ns context for the next XPath query --returns bool--
xpath(string path)
   Runs XPath query on XML data --returns array--
simplexml_import_dom(DOMNode node [, string class_name ])
   Get a SimpleXMLElement object from a DOM node. --returns SimpleXMLElement--
simplexml_load_file(string filename [, string class_name [, int options [, string ns [, bool is_prefix ]]]])
   Interprets an XML file into an object --returns object--
simplexml_load_string(string data [, string class_name [, int options [, string ns [, bool is_prefix ]]]])
   Interprets a string of XML into an object --returns object--
sin(float arg)
   Sine --returns float--
sinh(float arg)
   Hyperbolic sine --returns float--
sizeof
   Alias of count() --returns ?--
sleep(int seconds)
   Delay execution --returns int--
snmp_get_quick_print(void)
   Fetches the current value of the UCD library's quick_print setting --returns bool--
snmp_get_valueretrieval(void)
   Return the method how the SNMP values will be returned --returns int--
snmp_read_mib(string filename)
   Reads and parses a MIB file into the active MIB tree --returns bool--
snmp_set_enum_print(int enum_print)
   Return all values that are enums with their enum value instead of the raw integer --returns void--
snmp_set_oid_numeric_print(int oid_numeric_print)
   Return all objects including their respective object id within the specified one --returns void--
snmp_set_oid_output_format(int oid_format)
   Set the OID output format --returns void--
snmp_set_quick_print(bool quick_print)
   Set the value of quick_print within the UCD SNMP library --returns void--
snmp_set_valueretrieval(int method)
   Specify the method how the SNMP values will be returned --returns void--
snmpget(string hostname, string community, string object_id [, int timeout [, int retries ]])
   Fetch an SNMP object --returns string--
snmpgetnext(string host, string community, string object_id [, int timeout [, int retries ]])
   Fetch a SNMP object --returns string--
snmprealwalk(string host, string community, string object_id [, int timeout [, int retries ]])
   Return all objects including their respective object ID within the specified one --returns array--
snmpset(string hostname, string community, string object_id, string type, mixed value [, int timeout [, int retries ]])
   Set an SNMP object --returns bool--
snmpwalk(string hostname, string community, string object_id [, int timeout [, int retries ]])
   Fetch all the SNMP objects from an agent --returns array--
snmpwalkoid(string hostname, string community, string object_id [, int timeout [, int retries ]])
   Query for a tree of information about a network entity --returns array--
__call(string function_name, array arguments [, array options [, array input_headers [, array output_headers ]]])
   Calls a SOAP function (deprecated) --returns mixed--
SoapClient-&gt;__construct
   SoapClient constructor --returns ?--
__doRequest(string request, string location, string action, int version [, int one_way ])
   Performs a SOAP request --returns string--
__getFunctions(void)
   Returns list of SOAP functions --returns array--
__getLastRequest(void)
   Returns last SOAP request --returns string--
__getLastRequestHeaders(void)
   Returns last SOAP request headers --returns string--
__getLastResponse(void)
   Returns last SOAP response. --returns string--
__getLastResponseHeaders(void)
   Returns last SOAP response headers. --returns string--
__getTypes(void)
   Returns list of SOAP types --returns array--
__setCookie(string name [, string value ])
   Sets the cookie that will be sent with the SOAP request --returns void--
__soapCall(string function_name, array arguments [, array options [, mixed input_headers [, array &output_headers ]]])
   Calls a SOAP function --returns mixed--
SoapFault-&gt;__construct
   SoapFault constructor --returns ?--
SoapHeader-&gt;__construct
   SoapHeader constructor --returns ?--
SoapParam-&gt;__construct
   SoapParam constructor --returns ?--
addFunction(mixed functions)
   Adds one or several functions those will handle SOAP requests --returns void--
SoapServer-&gt;__construct
   SoapServer constructor --returns ?--
fault(string code, string string [, string actor [, mixed details [, string name ]]])
   Issue SoapServer fault indicating an error --returns void--
getFunctions(void)
   Returns list of defined functions --returns array--
handle ([ string soap_request ])
   Handles a SOAP request --returns void--
setClass(string class_name [, mixed args [, mixed ... ]])
   Sets class which will handle SOAP requests --returns void--
setPersistence(int mode)
   Sets persistence mode of SoapServer --returns void--
SoapVar-&gt;__construct
   SoapVar constructor --returns ?--
socket_accept(resource socket)
   Accepts a connection on a socket --returns resource--
socket_bind(resource socket, string address [, int port ])
   Binds a name to a socket --returns bool--
socket_clear_error ([ resource socket ])
   Clears the error on the socket or the last error code --returns void--
socket_close(resource socket)
   Closes a socket resource --returns void--
socket_connect(resource socket, string address [, int port ])
   Initiates a connection on a socket --returns bool--
socket_create_listen(int port [, int backlog ])
   Opens a socket on port to accept connections --returns resource--
socket_create_pair(int domain, int type, int protocol, array &fd)
   Creates a pair of indistinguishable sockets and stores them in an array --returns bool--
socket_create(int domain, int type, int protocol)
   Create a socket (endpoint for communication) --returns resource--
socket_get_option(resource socket, int level, int optname)
   Gets socket options for the socket --returns mixed--
socket_get_status
   Alias of stream_get_meta_data() --returns ?--
socket_getpeername(resource socket, string &address [, int &port ])
   Queries the remote side of the given socket which may either result in host/port or in a Unix filesystem path, dependent on its type --returns bool--
socket_getsockname(resource socket, string &addr [, int &port ])
   Queries the local side of the given socket which may either result in host/port or in a Unix filesystem path, dependent on its type --returns bool--
socket_last_error ([ resource socket ])
   Returns the last error on the socket --returns int--
socket_listen(resource socket [, int backlog ])
   Listens for a connection on a socket --returns bool--
socket_read(resource socket, int length [, int type ])
   Reads a maximum of length bytes from a socket --returns string--
socket_recv(resource socket, string &buf, int len, int flags)
   Receives data from a connected socket --returns int--
socket_recvfrom(resource socket, string &buf, int len, int flags, string &name [, int &port ])
   Receives data from a socket whether or not it is connection-oriented --returns int--
socket_select(array &read, array &write, array &except, int tv_sec [, int tv_usec ])
   Runs the select() system call on the given arrays of sockets with a specified timeout --returns int--
socket_send(resource socket, string buf, int len, int flags)
   Sends data to a connected socket --returns int--
socket_sendto(resource socket, string buf, int len, int flags, string addr [, int port ])
   Sends a message to a socket, whether it is connected or not --returns int--
socket_set_block(resource socket)
   Sets blocking mode on a socket resource --returns bool--
socket_set_blocking
   Alias of stream_set_blocking() --returns ?--
socket_set_nonblock(resource socket)
   Sets nonblocking mode for file descriptor fd --returns bool--
socket_set_option(resource socket, int level, int optname, mixed optval)
   Sets socket options for the socket --returns bool--
socket_set_timeout
   Alias of stream_set_timeout() --returns ?--
socket_shutdown(resource socket [, int how ])
   Shuts down a socket for receiving, sending, or both --returns bool--
socket_strerror(int errno)
   Return a string describing a socket error --returns string--
socket_write(resource socket, string buffer [, int length ])
   Write to a socket --returns int--
sort(array &array [, int sort_flags ])
   Sort an array --returns bool--
soundex(string str)
   Calculate the soundex key of a string --returns string--
spl_autoload_call(string class_name)
   Try all registered __autoload() function to load the requested class --returns void--
spl_autoload_extensions ([ string file_extensions ])
   Register and return default file extensions for spl_autoload --returns string--
spl_autoload_functions(void)
   Return all registered __autoload() functions --returns array--
spl_autoload_register ([ callback autoload_function ])
   Register given function as __autoload() implementation --returns bool--
spl_autoload_unregister(mixed autoload_function)
   Unregister given function as __autoload() implementation --returns bool--
spl_autoload(string class_name [, string file_extensions ])
   Default implementation for __autoload() --returns void--
spl_classes(void)
   Return available SPL classes --returns array--
spl_object_hash(object obj)
   Return hash id for given object --returns string--
split(string pattern, string string [, int limit ])
   Split string into array by regular expression --returns array--
spliti(string pattern, string string [, int limit ])
   Split string into array by regular expression case insensitive --returns array--
sprintf(string format [, mixed args [, mixed ... ]])
   Return a formatted string --returns string--
sql_regcase(string string)
   Make regular expression for case insensitive match --returns string--
sqlite_array_query(resource dbhandle, string query [, int result_type [, bool decode_binary ]]) array sqlite_array_query(string query, resource dbhandle [, int result_type [, bool decode_binary ]]) array arrayQuery(string query [, int result_type [, bool decode_binary ]])
   Execute a query against a given database and returns an array --returns array--
sqlite_busy_timeout(resource dbhandle, int milliseconds) void busyTimeout(int milliseconds)
   Set busy timeout duration, or disable busy handlers --returns void--
sqlite_changes(resource dbhandle) int changes(void)
   Returns the number of rows that were changed by the most recent SQL statement --returns int--
sqlite_close(resource dbhandle)
   Closes an open SQLite database --returns void--
sqlite_column(resource result, mixed index_or_name [, bool decode_binary ]) mixed column(mixed index_or_name [, bool decode_binary ]) mixed column(mixed index_or_name [, bool decode_binary ])
   Fetches a column from the current row of a result set --returns mixed--
sqlite_create_aggregate(resource dbhandle, string function_name, callback step_func, callback finalize_func [, int num_args ]) void createAggregate(string function_name, callback step_func, callback finalize_func [, int num_args ])
   Register an aggregating UDF for use in SQL statements --returns void--
sqlite_create_function(resource dbhandle, string function_name, callback callback [, int num_args ]) void createFunction(string function_name, callback callback [, int num_args ])
   Registers a &quot;regular&quot; User Defined Function for use in SQL statements --returns void--
sqlite_current(resource result [, int result_type [, bool decode_binary ]]) array current ([ int result_type [, bool decode_binary ]]) array current ([ int result_type [, bool decode_binary ]])
   Fetches the current row from a result set as an array --returns array--
sqlite_error_string(int error_code)
   Returns the textual description of an error code --returns string--
sqlite_escape_string(string item)
   Escapes a string for use as a query parameter --returns string--
sqlite_exec(resource dbhandle, string query [, string &error_msg ]) bool sqlite_exec(string query, resource dbhandle) bool queryExec(string query [, string &error_msg ])
   Executes a result-less query against a given database --returns bool--
sqlite_factory(string filename [, int mode [, string &error_message ]])
   Opens a SQLite database and returns a SQLiteDatabase object --returns SQLiteDatabase--
sqlite_fetch_all(resource result [, int result_type [, bool decode_binary ]]) array fetchAll ([ int result_type [, bool decode_binary ]]) array fetchAll ([ int result_type [, bool decode_binary ]])
   Fetches all rows from a result set as an array of arrays --returns array--
sqlite_fetch_array(resource result [, int result_type [, bool decode_binary ]]) array fetch ([ int result_type [, bool decode_binary ]]) array fetch ([ int result_type [, bool decode_binary ]])
   Fetches the next row from a result set as an array --returns array--
sqlite_fetch_column_types(string table_name, resource dbhandle [, int result_type ]) array fetchColumnTypes(string table_name [, int result_type ])
   Return an array of column types from a particular table --returns array--
sqlite_fetch_object(resource result [, string class_name [, array ctor_params [, bool decode_binary ]]]) object fetchObject ([ string class_name [, array ctor_params [, bool decode_binary ]]]) object fetchObject ([ string class_name [, array ctor_params [, bool decode_binary ]]])
   Fetches the next row from a result set as an object --returns object--
sqlite_fetch_single(resource result [, bool decode_binary ]) string fetchSingle ([ bool decode_binary ]) string fetchSingle ([ bool decode_binary ])
   Fetches the first column of a result set as a string --returns string--
sqlite_fetch_string
   Alias of sqlite_fetch_single() --returns ?--
sqlite_field_name(resource result, int field_index) string fieldName(int field_index) string fieldName(int field_index)
   Returns the name of a particular field --returns string--
sqlite_has_more(resource result)
   Finds whether or not more rows are available --returns bool--
sqlite_has_prev(resource result) bool hasPrev(void)
   Returns whether or not a previous row is available --returns bool--
sqlite_key(resource result) int key(void)
   Returns the current row index --returns int--
sqlite_last_error(resource dbhandle) int lastError(void)
   Returns the error code of the last error for a database --returns int--
sqlite_last_insert_rowid(resource dbhandle) int lastInsertRowid(void)
   Returns the rowid of the most recently inserted row --returns int--
sqlite_libencoding(void)
   Returns the encoding of the linked SQLite library --returns string--
sqlite_libversion(void)
   Returns the version of the linked SQLite library --returns string--
sqlite_next(resource result) bool next(void) bool next(void)
   Seek to the next row number --returns bool--
sqlite_num_fields(resource result) int numFields(void) int numFields(void)
   Returns the number of fields in a result set --returns int--
sqlite_num_rows(resource result) int numRows(void)
   Returns the number of rows in a buffered result set --returns int--
sqlite_open(string filename [, int mode [, string &error_message ]])
   Opens a SQLite database and create the database if it does not exist --returns resource--
sqlite_popen(string filename [, int mode [, string &error_message ]])
   Opens a persistent handle to an SQLite database and create the database if it does not exist --returns resource--
sqlite_prev(resource result) bool prev(void)
   Seek to the previous row number of a result set --returns bool--
sqlite_query(resource dbhandle, string query [, int result_type [, string &error_msg ]]) resource sqlite_query(string query, resource dbhandle [, int result_type [, string &error_msg ]]) SQLiteResult query(string query [, int result_type [, string &error_msg ]])
   Executes a query against a given database and returns a result handle --returns resource--
sqlite_rewind(resource result) bool rewind(void)
   Seek to the first row number --returns bool--
sqlite_seek(resource result, int rownum) bool seek(int rownum)
   Seek to a particular row number of a buffered result set --returns bool--
sqlite_single_query(resource db, string query [, bool first_row_only [, bool decode_binary ]]) array singleQuery(string query [, bool first_row_only [, bool decode_binary ]])
   Executes a query and returns either an array for one single column or the value of the first row --returns array--
sqlite_udf_decode_binary(string data)
   Decode binary data passed as parameters to an UDF --returns string--
sqlite_udf_encode_binary(string data)
   Encode binary data before returning it from an UDF --returns string--
sqlite_unbuffered_query(resource dbhandle, string query [, int result_type [, string &error_msg ]]) resource sqlite_unbuffered_query(string query, resource dbhandle [, int result_type [, string &error_msg ]]) SQLiteUnbuffered unbufferedQuery(string query [, int result_type [, string &error_msg ]])
   Execute a query that does not prefetch and buffer all data --returns resource--
sqlite_valid(resource result) bool valid(void) bool valid(void)
   Returns whether more rows are available --returns bool--
sqrt(float arg)
   Square root --returns float--
srand ([ int seed ])
   Seed the random number generator --returns void--
sscanf(string str, string format [, mixed &... ])
   Parses input from a string according to a format --returns mixed--
ssh2_auth_hostbased_file(resource session, string username, string hostname, string pubkeyfile, string privkeyfile [, string passphrase [, string local_username ]])
   Authenticate using a public hostkey --returns bool--
ssh2_auth_none(resource session, string username)
   Authenticate as &quot;none&quot; --returns mixed--
ssh2_auth_password(resource session, string username, string password)
   Authenticate over SSH using a plain password --returns bool--
ssh2_auth_pubkey_file(resource session, string username, string pubkeyfile, string privkeyfile [, string passphrase ])
   Authenticate using a public key --returns bool--
ssh2_connect(string host [, int port [, array methods [, array callbacks ]]])
   Connect to an SSH server --returns resource--
ssh2_exec(resource session, string command [, string pty [, array env [, int width [, int height [, int width_height_type ]]]]])
   Execute a command on a remote server --returns resource--
ssh2_fetch_stream(resource channel, int streamid)
   Fetch an extended data stream --returns resource--
ssh2_fingerprint(resource session [, int flags ])
   Retrieve fingerprint of remote server --returns string--
ssh2_methods_negotiated(resource session)
   Return list of negotiated methods --returns array--
ssh2_publickey_add(resource pkey, string algoname, string blob [, bool overwrite [, array attributes ]])
   Add an authorized publickey --returns bool--
ssh2_publickey_init(resource session)
   Initialize Publickey subsystem --returns resource--
ssh2_publickey_list(resource pkey)
   List currently authorized publickeys --returns array--
ssh2_publickey_remove(resource pkey, string algoname, string blob)
   Remove an authorized publickey --returns bool--
ssh2_scp_recv(resource session, string remote_file, string local_file)
   Request a file via SCP --returns bool--
ssh2_scp_send(resource session, string local_file, string remote_file [, int create_mode ])
   Send a file via SCP --returns bool--
ssh2_sftp_lstat(resource sftp, string path)
   Stat a symbolic link --returns array--
ssh2_sftp_mkdir(resource sftp, string dirname [, int mode [, bool recursive ]])
   Create a directory --returns bool--
ssh2_sftp_readlink(resource sftp, string link)
   Return the target of a symbolic link --returns string--
ssh2_sftp_realpath(resource sftp, string filename)
   Resolve the realpath of a provided path string --returns string--
ssh2_sftp_rename(resource sftp, string from, string to)
   Rename a remote file --returns bool--
ssh2_sftp_rmdir(resource sftp, string dirname)
   Remove a directory --returns bool--
ssh2_sftp_stat(resource sftp, string path)
   Stat a file on a remote filesystem --returns array--
ssh2_sftp_symlink(resource sftp, string target, string link)
   Create a symlink --returns bool--
ssh2_sftp_unlink(resource sftp, string filename)
   Delete a file --returns bool--
ssh2_sftp(resource session)
   Initialize SFTP subsystem --returns resource--
ssh2_shell(resource session [, string term_type [, array env [, int width [, int height [, int width_height_type ]]]]])
   Request an interactive shell --returns resource--
ssh2_tunnel(resource session, string host, int port)
   Open a tunnel through a remote server --returns resource--
stat(string filename)
   Gives information about a file --returns array--
stats_absolute_deviation(array a)
   Returns the absolute deviation of an array of values --returns float--
stats_cdf_beta(float par1, float par2, float par3, int which)
   CDF function for BETA Distribution. Calculates any one parameter of the beta distribution given values for the others. --returns float--
stats_cdf_binomial(float par1, float par2, float par3, int which)
   Calculates any one parameter of the binomial distribution given values for the others. --returns float--
stats_cdf_cauchy(float par1, float par2, float par3, int which)
   Not documented --returns float--
stats_cdf_chisquare(float par1, float par2, int which)
   Calculates any one parameter of the chi-square distribution given values for the others. --returns float--
stats_cdf_exponential(float par1, float par2, int which)
   Not documented --returns float--
stats_cdf_f(float par1, float par2, float par3, int which)
   Calculates any one parameter of the F distribution given values for the others. --returns float--
stats_cdf_gamma(float par1, float par2, float par3, int which)
   Calculates any one parameter of the gamma distribution given values for the others. --returns float--
stats_cdf_laplace(float par1, float par2, float par3, int which)
   Not documented --returns float--
stats_cdf_logistic(float par1, float par2, float par3, int which)
   Not documented --returns float--
stats_cdf_negative_binomial(float par1, float par2, float par3, int which)
   Calculates any one parameter of the negative binomial distribution given values for the others. --returns float--
stats_cdf_noncentral_chisquare(float par1, float par2, float par3, int which)
   Calculates any one parameter of the non-central chi-square distribution given values for the others. --returns float--
stats_cdf_noncentral_f(float par1, float par2, float par3, float par4, int which)
   Calculates any one parameter of the Non-central F distribution given values for the others. --returns float--
stats_cdf_poisson(float par1, float par2, int which)
   Calculates any one parameter of the Poisson distribution given values for the others. --returns float--
stats_cdf_t(float par1, float par2, int which)
   Calculates any one parameter of the T distribution given values for the others. --returns float--
stats_cdf_uniform(float par1, float par2, float par3, int which)
   Not documented --returns float--
stats_cdf_weibull(float par1, float par2, float par3, int which)
   Not documented --returns float--
stats_covariance(array a, array b)
   Computes the covariance of two data sets --returns float--
stats_den_uniform(float x, float a, float b)
   Not documented --returns float--
stats_dens_beta(float x, float a, float b)
   Not documented --returns float--
stats_dens_cauchy(float x, float ave, float stdev)
   Not documented --returns float--
stats_dens_chisquare(float x, float dfr)
   Not documented --returns float--
stats_dens_exponential(float x, float scale)
   Not documented --returns float--
stats_dens_f(float x, float dfr1, float dfr2)
   Description float --returns float--
stats_dens_gamma(float x, float shape, float scale)
   Not documented --returns float--
stats_dens_laplace(float x, float ave, float stdev)
   Not documented --returns float--
stats_dens_logistic(float x, float ave, float stdev)
   Not documented --returns float--
stats_dens_negative_binomial(float x, float n, float pi)
   Not documented --returns float--
stats_dens_normal(float x, float ave, float stdev)
   Not documented --returns float--
stats_dens_pmf_binomial(float x, float n, float pi)
   Not documented --returns float--
stats_dens_pmf_hypergeometric(float n1, float n2, float N1, float N2)
   Description float --returns float--
stats_dens_pmf_poisson(float x, float lb)
   Not documented --returns float--
stats_dens_t(float x, float dfr)
   Not documented --returns float--
stats_dens_weibull(float x, float a, float b)
   Not documented --returns float--
stats_harmonic_mean(array a)
   Returns the harmonic mean of an array of values --returns number--
stats_kurtosis(array a)
   Computes the kurtosis of the data in the array --returns float--
stats_rand_gen_beta(float a, float b)
   Generates beta random deviate --returns float--
stats_rand_gen_chisquare(float df)
   Generates random deviate from the distribution of a chisquare with &quot;df&quot; degrees of freedom random variable. --returns float--
stats_rand_gen_exponential(float av)
   Generates a single random deviate from an exponential distribution with mean &quot;av&quot; --returns float--
stats_rand_gen_f(float dfn, float dfd)
   Generates a random deviate --returns float--
stats_rand_gen_funiform(float low, float high)
   Generates uniform float between low (exclusive) and high (exclusive) --returns float--
stats_rand_gen_gamma(float a, float r)
   Generates random deviates from a gamma distribution --returns float--
stats_rand_gen_ibinomial_negative(int n, float p)
   Generates a single random deviate from a negative binomial distribution. Arguments : n - the number of trials in the negative binomial distribution from which a random deviate is to be generated (n &gt; 0), p - the probability of an event (0 &lt; p &lt; 1)). --returns int--
stats_rand_gen_ibinomial(int n, float pp)
   Generates a single random deviate from a binomial distribution whose number of trials is &quot;n&quot; (n &gt;= 0) and whose probability of an event in each trial is &quot;pp&quot; ([0;1]). Method : algorithm BTPE --returns int--
stats_rand_gen_int(void)
   Generates random integer between 1 and 2147483562 --returns int--
stats_rand_gen_ipoisson(float mu)
   Generates a single random deviate from a Poisson distribution with mean &quot;mu&quot; (mu &gt;= 0.0). --returns int--
stats_rand_gen_iuniform(int low, int high)
   Generates integer uniformly distributed between LOW (inclusive) and HIGH (inclusive) --returns int--
stats_rand_gen_noncenral_chisquare(float df, float xnonc)
   Generates random deviate from the distribution of a noncentral chisquare with &quot;df&quot; degrees of freedom and noncentrality parameter &quot;xnonc&quot;. d must be &gt;= 1.0, xnonc must &gt;= 0.0 --returns float--
stats_rand_gen_noncentral_f(float dfn, float dfd, float xnonc)
   Generates a random deviate from the noncentral F (variance ratio) distribution with &quot;dfn&quot; degrees of freedom in the numerator, and &quot;dfd&quot; degrees of freedom in the denominator, and noncentrality parameter &quot;xnonc&quot;. Method : directly generates ratio of noncentral numerator chisquare variate to central denominator chisquare variate. --returns float--
stats_rand_gen_noncentral_t(float df, float xnonc)
   Generates a single random deviate from a noncentral T distribution --returns float--
stats_rand_gen_normal(float av, float sd)
   Generates a single random deviate from a normal distribution with mean, av, and standard deviation, sd (sd &gt;= 0). Method : Renames SNORM from TOMS as slightly modified by BWB to use RANF instead of SUNIF. --returns float--
stats_rand_gen_t(float df)
   Generates a single random deviate from a T distribution --returns float--
stats_rand_get_seeds(void)
   Not documented --returns array--
stats_rand_phrase_to_seeds(string phrase)
   generate two seeds for the RGN random number generator --returns array--
stats_rand_ranf(void)
   Returns a random floating point number from a uniform distribution over 0 - 1 (endpoints of this interval are not returned) using the current generator --returns float--
stats_rand_setall(int iseed1, int iseed2)
   Not documented --returns void--
stats_skew(array a)
   Computes the skewness of the data in the array --returns float--
stats_standard_deviation(array a [, bool sample ])
   Returns the standard deviation --returns float--
stats_stat_binomial_coef(int x, int n)
   Not documented --returns float--
stats_stat_correlation(array arr1, array arr2)
   Not documented --returns float--
stats_stat_gennch(int n)
   Not documented --returns float--
stats_stat_independent_t(array arr1, array arr2)
   Not documented --returns float--
stats_stat_innerproduct(array arr1, array arr2)
   Description float --returns float--
stats_stat_noncentral_t(float par1, float par2, float par3, int which)
   Calculates any one parameter of the noncentral t distribution give values for the others. --returns float--
stats_stat_paired_t(array arr1, array arr2)
   Not documented --returns float--
stats_stat_percentile(float df, float xnonc)
   Not documented --returns float--
stats_stat_powersum(array arr, float power)
   Not documented --returns float--
stats_variance(array a [, bool sample ])
   Returns the population variance --returns float--
str_getcsv(string input [, string delimiter [, string enclosure [, string escape ]]])
   Parse a CSV string into an array --returns array--
str_ireplace(mixed search, mixed replace, mixed subject [, int &count ])
   Case-insensitive version of str_replace(). --returns mixed--
str_pad(string input, int pad_length [, string pad_string [, int pad_type ]])
   Pad a string to a certain length with another string --returns string--
str_repeat(string input, int multiplier)
   Repeat a string --returns string--
str_replace(mixed search, mixed replace, mixed subject [, int &count ])
   Replace all occurrences of the search string with the replacement string --returns mixed--
str_rot13(string str)
   Perform the rot13 transform on a string --returns string--
str_shuffle(string str)
   Randomly shuffles a string --returns string--
str_split(string string [, int split_length ])
   Convert a string to an array --returns array--
str_word_count(string string [, int format [, string charlist ]])
   Return information about words used in a string --returns mixed--
strcasecmp(string str1, string str2)
   Binary safe case-insensitive string comparison --returns int--
strchr
   Alias of strstr() --returns ?--
strcmp(string str1, string str2)
   Binary safe string comparison --returns int--
strcoll(string str1, string str2)
   Locale based string comparison --returns int--
strcspn(string str1, string str2 [, int start [, int length ]])
   Find length of initial segment not matching mask --returns int--
stream_bucket_append(resource brigade, resource bucket)
   Append bucket to brigade --returns void--
stream_bucket_make_writeable(resource brigade)
   Return a bucket object from the brigade for operating on --returns object--
stream_bucket_new(resource stream, string buffer)
   Create a new bucket for use on the current stream --returns object--
stream_bucket_prepend(resource brigade, resource bucket)
   Prepend bucket to brigade --returns void--
stream_context_create ([ array options [, array params ]])
   Create a streams context --returns resource--
stream_context_get_default ([ array options ])
   Retreive the default streams context --returns resource--
stream_context_get_options(resource stream_or_context)
   Retrieve options for a stream/wrapper/context --returns array--
stream_context_set_default(array options)
   Set the default streams context --returns resource--
stream_context_set_option(resource stream_or_context, string wrapper, string option, mixed value) bool stream_context_set_option(resource stream_or_context, array options)
   Sets an option for a stream/wrapper/context --returns bool--
stream_context_set_params(resource stream_or_context, array params)
   Set parameters for a stream/wrapper/context --returns bool--
stream_copy_to_stream(resource source, resource dest [, int maxlength [, int offset ]])
   Copies data from one stream to another --returns int--
stream_encoding(resource stream [, string encoding ])
   Set character set for stream encoding --returns bool--
stream_filter_append(resource stream, string filtername [, int read_write [, mixed params ]])
   Attach a filter to a stream --returns resource--
stream_filter_prepend(resource stream, string filtername [, int read_write [, mixed params ]])
   Attach a filter to a stream --returns resource--
stream_filter_register(string filtername, string classname) int filter(resource in, resource out, int &consumed, bool closing) bool onCreate(void) void onClose(void)
   Register a stream filter implemented as a PHP class derived from php_user_filter --returns bool--
stream_filter_remove(resource stream_filter)
   Remove a filter from a stream --returns bool--
stream_get_contents(resource handle [, int maxlength [, int offset ]])
   Reads remainder of a stream into a string --returns string--
stream_get_filters(void)
   Retrieve list of registered filters --returns array--
stream_get_line(resource handle, int length [, string ending ])
   Gets line from stream resource up to a given delimiter --returns string--
stream_get_meta_data(resource stream)
   Retrieves header/meta data from streams/file pointers --returns array--
stream_get_transports(void)
   Retrieve list of registered socket transports --returns array--
stream_get_wrappers(void)
   Retrieve list of registered streams --returns array--
stream_notification_callback(int notification_code, int severity, string message, int message_code, int bytes_transferred, int bytes_max)
   A callback function for the notification context paramater --returns void--
stream_register_wrapper
   Alias of stream_wrapper_register() --returns ?--
stream_resolve_include_path(string filename [, resource context ])
   Determine what file will be opened by calls to fopen() with a relative path --returns string--
stream_select(array &read, array &write, array &except, int tv_sec [, int tv_usec ])
   Runs the equivalent of the select() system call on the given arrays of streams with a timeout specified by tv_sec and tv_usec --returns int--
stream_set_blocking(resource stream, int mode)
   Set blocking/non-blocking mode on a stream --returns bool--
stream_set_timeout(resource stream, int seconds [, int microseconds ])
   Set timeout period on a stream --returns bool--
stream_set_write_buffer(resource stream, int buffer)
   Sets file buffering on the given stream --returns int--
stream_socket_accept(resource server_socket [, float timeout [, string &peername ]])
   Accept a connection on a socket created by stream_socket_server() --returns resource--
stream_socket_client(string remote_socket [, int &errno [, string &errstr [, float timeout [, int flags [, resource context ]]]]])
   Open Internet or Unix domain socket connection --returns resource--
stream_socket_enable_crypto(resource stream, bool enable [, int crypto_type [, resource session_stream ]])
   Turns encryption on/off on an already connected socket --returns mixed--
stream_socket_get_name(resource handle, bool want_peer)
   Retrieve the name of the local or remote sockets --returns string--
stream_socket_pair(int domain, int type, int protocol)
   Creates a pair of connected, indistinguishable socket streams --returns array--
stream_socket_recvfrom(resource socket, int length [, int flags [, string &address ]])
   Receives data from a socket, connected or not --returns string--
stream_socket_sendto(resource socket, string data [, int flags [, string address ]])
   Sends a message to a socket, whether it is connected or not --returns int--
stream_socket_server(string local_socket [, int &errno [, string &errstr [, int flags [, resource context ]]]])
   Create an Internet or Unix domain server socket --returns resource--
stream_socket_shutdown(resource stream, int how)
   Shutdown a full-duplex connection --returns bool--
stream_wrapper_register(string protocol, string classname) bool stream_open(string path, string mode, int options, string opened_path) void stream_close(void) string stream_read(int count) int stream_write(string data) bool stream_eof(void) int stream_tell(void) bool stream_seek(int offset, int whence) bool stream_flush(void) array stream_stat(void) bool unlink(string path) bool rename(string path_from, string path_to) bool mkdir(string path, int mode, int options) bool rmdir(string path, int options) bool dir_opendir(string path, int options) array url_stat(string path, int flags) string dir_readdir(void) bool dir_rewinddir(void) bool dir_closedir(void)
   Register a URL wrapper implemented as a PHP class --returns bool--
stream_wrapper_restore(string protocol)
   Restores a previously unregistered built-in wrapper --returns bool--
stream_wrapper_unregister(string protocol)
   Unregister a URL wrapper --returns bool--
strftime(string format [, int timestamp ])
   Format a local time/date according to locale settings --returns string--
strip_tags(string str [, string allowable_tags ])
   Strip HTML and PHP tags from a string --returns string--
stripcslashes(string str)
   Un-quote string quoted with addcslashes() --returns string--
stripos(string haystack, string needle [, int offset ])
   Find position of first occurrence of a case-insensitive string --returns int--
stripslashes(string str)
   Un-quotes a quoted string --returns string--
stristr(string haystack, mixed needle [, bool before_needle ])
   Case-insensitive strstr() --returns string--
strlen(string string)
   Get string length --returns int--
strnatcasecmp(string str1, string str2)
   Case insensitive string comparisons using a &quot;natural order&quot; algorithm --returns int--
strnatcmp(string str1, string str2)
   String comparisons using a &quot;natural order&quot; algorithm --returns int--
strncasecmp(string str1, string str2, int len)
   Binary safe case-insensitive string comparison of the first n characters --returns int--
strncmp(string str1, string str2, int len)
   Binary safe string comparison of the first n characters --returns int--
strpbrk(string haystack, string char_list)
   Search a string for any of a set of characters --returns string--
strpos(string haystack, mixed needle [, int offset ])
   Find position of first occurrence of a string --returns int--
strptime(string date, string format)
   Parse a time/date generated with strftime() --returns array--
strrchr(string haystack, mixed needle)
   Find the last occurrence of a character in a string --returns string--
strrev(string string)
   Reverse a string --returns string--
strripos(string haystack, string needle [, int offset ])
   Find position of last occurrence of a case-insensitive string in a string --returns int--
strrpos(string haystack, string needle [, int offset ])
   Find position of last occurrence of a char in a string --returns int--
strspn(string str1, string str2 [, int start [, int length ]])
   Find length of initial segment matching mask --returns int--
strstr(string haystack, mixed needle [, bool before_needle ])
   Find first occurrence of a string --returns string--
strtok(string str, string token)
   Tokenize string --returns string--
strtolower(string str)
   Make a string lowercase --returns string--
strtotime(string time [, int now ])
   Parse about any English textual datetime description into a Unix timestamp --returns int--
strtoupper(string string)
   Make a string uppercase --returns string--
strtr(string str, string from, string to) string strtr(string str, array replace_pairs)
   Translate certain characters --returns string--
strval(mixed var)
   Get string value of a variable --returns string--
substr_compare(string main_str, string str, int offset [, int length [, bool case_insensitivity ]])
   Binary safe comparison of 2 strings from an offset, up to length characters --returns int--
substr_count(string haystack, string needle [, int offset [, int length ]])
   Count the number of substring occurrences --returns int--
substr_replace(mixed string, string replacement, int start [, int length ])
   Replace text within a portion of a string --returns mixed--
substr(string string, int start [, int length ])
   Return part of a string --returns string--
svn_add(string path [, bool recursive [, bool force ]])
   Schedules the addition of an item in a working directory --returns bool--
svn_auth_get_parameter(string key)
   Retrieves authentication parameter --returns string--
svn_auth_set_parameter(string key, string value)
   Sets an authentication parameter --returns void--
svn_cat(string repos_url [, int revision_no ])
   Returns the contents of a file in a repository --returns string--
svn_checkout(string repos, string targetpath [, int revision [, int flags ]])
   Checks out a working copy from the repository --returns bool--
svn_cleanup(string workingdir)
   Recursively cleanup a working copy directory, finishing incomplete operations and removing locks --returns bool--
svn_client_version(void)
   Returns the version of the SVN client libraries --returns string--
svn_commit(string log, array targets [, bool dontrecurse ])
   Sends changes from the local working copy to the repository --returns array--
svn_diff(string path1, int rev1, string path2, int rev2)
   Recursively diffs two paths --returns array--
svn_fs_abort_txn(resource txn)
   Abort a transaction, returns true if everything is ok, false othewise --returns bool--
svn_fs_apply_text(resource root, string path)
   Creates and returns a stream that will be used to replace --returns resource--
svn_fs_begin_txn2(resource repos, int rev)
   Create a new transaction --returns resource--
svn_fs_change_node_prop(resource root, string path, string name, string value)
   Return true if everything is ok, false otherwise --returns bool--
svn_fs_check_path(resource fsroot, string path)
   Determines what kind of item lives at path in a given repository fsroot --returns int--
svn_fs_contents_changed(resource root1, string path1, resource root2, string path2)
   Return true if content is different, false otherwise --returns bool--
svn_fs_copy(resource from_root, string from_path, resource to_root, string to_path)
   Copies a file or a directory, returns true if all is ok, false otherwise --returns bool--
svn_fs_delete(resource root, string path)
   Deletes a file or a directory, return true if all is ok, false otherwise --returns bool--
svn_fs_dir_entries(resource fsroot, string path)
   Enumerates the directory entries under path; returns a hash of dir names to file type --returns array--
svn_fs_file_contents(resource fsroot, string path)
   Returns a stream to access the contents of a file from a given version of the fs --returns resource--
svn_fs_file_length(resource fsroot, string path)
   Returns the length of a file from a given version of the fs --returns int--
svn_fs_is_dir(resource root, string path)
   Return true if the path points to a directory, false otherwise --returns bool--
svn_fs_is_file(resource root, string path)
   Return true if the path points to a file, false otherwise --returns bool--
svn_fs_make_dir(resource root, string path)
   Creates a new empty directory, returns true if all is ok, false otherwise --returns bool--
svn_fs_make_file(resource root, string path)
   Creates a new empty file, returns true if all is ok, false otherwise --returns bool--
svn_fs_node_created_rev(resource fsroot, string path)
   Returns the revision in which path under fsroot was created --returns int--
svn_fs_node_prop(resource fsroot, string path, string propname)
   Returns the value of a property for a node --returns string--
svn_fs_props_changed(resource root1, string path1, resource root2, string path2)
   Return true if props are different, false otherwise --returns bool--
svn_fs_revision_prop(resource fs, int revnum, string propname)
   Fetches the value of a named property --returns string--
svn_fs_revision_root(resource fs, int revnum)
   Get a handle on a specific version of the repository root --returns resource--
svn_fs_txn_root(resource txn)
   Creates and returns a transaction root --returns resource--
svn_fs_youngest_rev(resource fs)
   Returns the number of the youngest revision in the filesystem --returns int--
svn_import(string path, string url, bool nonrecursive)
   Imports an unversioned path into a repository --returns bool--
svn_log(string repos_url [, int start_revision [, int end_revision [, int limit [, int flags ]]]])
   Returns the commit log messages of a repository URL --returns array--
svn_ls(string repos_url [, int revision_no [, bool recurse ]])
   Returns list of directory contents in repository URL, optionally at revision number --returns array--
svn_repos_create(string path [, array config [, array fsconfig ]])
   Create a new subversion repository at path --returns resource--
svn_repos_fs_begin_txn_for_commit(resource repos, int rev, string author, string log_msg)
   Create a new transaction --returns resource--
svn_repos_fs_commit_txn(resource txn)
   Commits a transaction and returns the new revision --returns int--
svn_repos_fs(resource repos)
   Gets a handle on the filesystem for a repository --returns resource--
svn_repos_hotcopy(string repospath, string destpath, bool cleanlogs)
   Make a hot-copy of the repos at repospath; copy it to destpath --returns bool--
svn_repos_open(string path)
   Open a shared lock on a repository. --returns resource--
svn_repos_recover(string path)
   Run recovery procedures on the repository located at path. --returns bool--
svn_status(string path [, int flags ])
   Returns the status of working copy files and directories --returns array--
svn_update(string path [, int revno [, bool recurse ]])
   Update working copy --returns int--
swf_actiongeturl(string url, string target)
   Get a URL from a Shockwave Flash movie --returns void--
swf_actiongotoframe(int framenumber)
   Play a frame and then stop --returns void--
swf_actiongotolabel(string label)
   Display a frame with the specified label --returns void--
swf_actionnextframe(void)
   Go forward one frame --returns void--
swf_actionplay(void)
   Start playing the flash movie from the current frame --returns void--
swf_actionprevframe(void)
   Go backwards one frame --returns void--
swf_actionsettarget(string target)
   Set the context for actions --returns void--
swf_actionstop(void)
   Stop playing the flash movie at the current frame --returns void--
swf_actiontogglequality(void)
   Toggle between low and high quality --returns void--
swf_actionwaitforframe(int framenumber, int skipcount)
   Skip actions if a frame has not been loaded --returns void--
swf_addbuttonrecord(int states, int shapeid, int depth)
   Controls location, appearance and active area of the current button --returns void--
swf_addcolor(float r, float g, float b, float a)
   Set the global add color to the rgba value specified --returns void--
swf_closefile ([ int return_file ])
   Close the current Shockwave Flash file --returns void--
swf_definebitmap(int objid, string image_name)
   Define a bitmap --returns void--
swf_definefont(int fontid, string fontname)
   Defines a font --returns void--
swf_defineline(int objid, float x1, float y1, float x2, float y2, float width)
   Define a line --returns void--
swf_definepoly(int objid, array coords, int npoints, float width)
   Define a polygon --returns void--
swf_definerect(int objid, float x1, float y1, float x2, float y2, float width)
   Define a rectangle --returns void--
swf_definetext(int objid, string str, int docenter)
   Define a text string --returns void--
swf_endbutton(void)
   End the definition of the current button --returns void--
swf_enddoaction(void)
   End the current action --returns void--
swf_endshape(void)
   Completes the definition of the current shape --returns void--
swf_endsymbol(void)
   End the definition of a symbol --returns void--
swf_fontsize(float size)
   Change the font size --returns void--
swf_fontslant(float slant)
   Set the font slant --returns void--
swf_fonttracking(float tracking)
   Set the current font tracking --returns void--
swf_getbitmapinfo(int bitmapid)
   Get information about a bitmap --returns array--
swf_getfontinfo(void)
   Gets font information --returns array--
swf_getframe(void)
   Get the frame number of the current frame --returns int--
swf_labelframe(string name)
   Label the current frame --returns void--
swf_lookat(float view_x, float view_y, float view_z, float reference_x, float reference_y, float reference_z, float twist)
   Define a viewing transformation --returns void--
swf_modifyobject(int depth, int how)
   Modify an object --returns void--
swf_mulcolor(float r, float g, float b, float a)
   Sets the global multiply color to the rgba value specified --returns void--
swf_nextid(void)
   Returns the next free object id --returns int--
swf_oncondition(int transition)
   Describe a transition used to trigger an action list --returns void--
swf_openfile(string filename, float width, float height, float framerate, float r, float g, float b)
   Open a new Shockwave Flash file --returns void--
swf_ortho(float xmin, float xmax, float ymin, float ymax, float zmin, float zmax)
   Defines an orthographic mapping of user coordinates onto the current viewport --returns void--
swf_ortho2(float xmin, float xmax, float ymin, float ymax)
   Defines 2D orthographic mapping of user coordinates onto the current viewport --returns void--
swf_perspective(float fovy, float aspect, float near, float far)
   Define a perspective projection transformation --returns void--
swf_placeobject(int objid, int depth)
   Place an object onto the screen --returns void--
swf_polarview(float dist, float azimuth, float incidence, float twist)
   Define the viewer's position with polar coordinates --returns void--
swf_popmatrix(void)
   Restore a previous transformation matrix --returns void--
swf_posround(int round)
   Enables or Disables the rounding of the translation when objects are placed or moved --returns void--
swf_pushmatrix(void)
   Push the current transformation matrix back unto the stack --returns void--
swf_removeobject(int depth)
   Remove an object --returns void--
swf_rotate(float angle, string axis)
   Rotate the current transformation --returns void--
swf_scale(float x, float y, float z)
   Scale the current transformation --returns void--
swf_setfont(int fontid)
   Change the current font --returns void--
swf_setframe(int framenumber)
   Switch to a specified frame --returns void--
swf_shapearc(float x, float y, float r, float ang1, float ang2)
   Draw a circular arc --returns void--
swf_shapecurveto(float x1, float y1, float x2, float y2)
   Draw a quadratic bezier curve between two points --returns void--
swf_shapecurveto3(float x1, float y1, float x2, float y2, float x3, float y3)
   Draw a cubic bezier curve --returns void--
swf_shapefillbitmapclip(int bitmapid)
   Set current fill mode to clipped bitmap --returns void--
swf_shapefillbitmaptile(int bitmapid)
   Set current fill mode to tiled bitmap --returns void--
swf_shapefilloff(void)
   Turns off filling --returns void--
swf_shapefillsolid(float r, float g, float b, float a)
   Set the current fill style to the specified color --returns void--
swf_shapelinesolid(float r, float g, float b, float a, float width)
   Set the current line style --returns void--
swf_shapelineto(float x, float y)
   Draw a line --returns void--
swf_shapemoveto(float x, float y)
   Move the current position --returns void--
swf_showframe(void)
   Display the current frame --returns void--
swf_startbutton(int objid, int type)
   Start the definition of a button --returns void--
swf_startdoaction(void)
   Start a description of an action list for the current frame --returns void--
swf_startshape(int objid)
   Start a complex shape --returns void--
swf_startsymbol(int objid)
   Define a symbol --returns void--
swf_textwidth(string str)
   Get the width of a string --returns float--
swf_translate(float x, float y, float z)
   Translate the current transformations --returns void--
swf_viewport(float xmin, float xmax, float ymin, float ymax)
   Select an area for future drawing --returns void--
__construct(string script)
   Creates a new SWFAction --returns SWFAction--
__construct(mixed file [, mixed alphafile ])
   Loads Bitmap object --returns SWFBitmap--
getHeight(void)
   Returns the bitmap's height --returns float--
getWidth(void)
   Returns the bitmap's width --returns float--
addAction(SWFAction action, int flags)
   Adds an action --returns void--
addASound(SWFSound sound, int flags)
   Associates a sound with a button transition --returns SWFSoundInstance--
addShape(SWFShape shape, int flags)
   Adds a shape to a button --returns void--
__construct(void)
   Creates a new Button --returns SWFButton--
setAction(SWFAction action)
   Sets the action --returns void--
setDown(SWFShape shape)
   Alias for addShape(shape, SWFBUTTON_DOWN) --returns void--
setHit(SWFShape shape)
   Alias for addShape(shape, SWFBUTTON_HIT) --returns void--
setMenu(int flag)
   enable track as menu button behaviour --returns void--
setOver(SWFShape shape)
   Alias for addShape(shape, SWFBUTTON_OVER) --returns void--
setUp(SWFShape shape)
   Alias for addShape(shape, SWFBUTTON_UP) --returns void--
addAction(SWFAction action, int flags)
   Adds this SWFAction to the given SWFSprite instance --returns void--
addColor(int red, int green, int blue [, int a ])
   Adds the given color to this item's color transform --returns void--
endMask(void)
   Another way of defining a MASK layer --returns void--
getRot(void)
   Description SWFDisplayItem float --returns float--
getX(void)
   Description SWFDisplayItem float --returns float--
getXScale(void)
   Description SWFDisplayItem float --returns float--
getXSkew(void)
   Description SWFDisplayItem float --returns float--
getY(void)
   Description SWFDisplayItem float --returns float--
getYScale(void)
   Description SWFDisplayItem float --returns float--
getYSkew(void)
   Description SWFDisplayItem float --returns float--
move(int dx, int dy)
   Moves object in relative coordinates --returns void--
moveTo(int x, int y)
   Moves object in global coordinates --returns void--
multColor(int red, int green, int blue [, int a ])
   Multiplies the item's color transform --returns void--
remove(void)
   Removes the object from the movie --returns void--
rotate(float angle)
   Rotates in relative coordinates --returns void--
rotateTo(float angle)
   Rotates the object in global coordinates --returns void--
scale(int dx, int dy)
   Scales the object in relative coordinates --returns void--
scaleTo(int x [, int y ])
   Scales the object in global coordinates --returns void--
setDepth(float depth)
   Sets z-order --returns void--
setMaskLevel(int level)
   Defines a MASK layer at level --returns void--
setMatrix(float a, float b, float c, float d, float x, float y)
   Sets the item's transform matrix --returns void--
setName(string name)
   Sets the object's name --returns void--
setRatio(float ratio)
   Sets the object's ratio --returns void--
skewX(float ddegrees)
   Sets the X-skew --returns void--
skewXTo(float degrees)
   Sets the X-skew --returns void--
skewY(float ddegrees)
   Sets the Y-skew --returns void--
skewYTo(float degrees)
   Sets the Y-skew --returns void--
moveTo(int x, int y)
   Moves fill origin --returns void--
rotateTo(float angle)
   Sets fill's rotation --returns void--
scaleTo(int x [, int y ])
   Sets fill's scale --returns void--
skewXTo(float x)
   Sets fill x-skew --returns void--
skewYTo(float y)
   Sets fill y-skew --returns void--
__construct(string filename)
   Loads a font definition --returns SWFFont--
getAscent(void)
   Returns the ascent of the font, or 0 if not available --returns float--
getDescent(void)
   Returns the descent of the font, or 0 if not available --returns float--
getLeading(void)
   Returns the leading of the font, or 0 if not available --returns float--
getShape(int code)
   Returns the glyph shape of a char as a text string --returns string--
getUTF8Width(string string)
   Calculates the width of the given string in this font at full height --returns float--
getWidth(string string)
   Returns the string's width --returns float--
addChars(string char)
   Adds characters to a font for exporting font --returns void--
addUTF8Chars(string char)
   Adds characters to a font for exporting font --returns void--
addEntry(float ratio, int red, int green, int blue [, int a ])
   Adds an entry to the gradient list --returns void--
__construct(void)
   Creates a gradient object --returns SWFGradient--
__construct(void)
   Creates a new SWFMorph object --returns SWFMorph--
getShape1(void)
   Gets a handle to the starting shape --returns SWFShape--
getShape2(void)
   Gets a handle to the ending shape --returns SWFShape--
add(object instance)
   Adds any type of data to a movie --returns mixed--
addExport(SWFCharacter char, string name)
   Description SWFMovie void --returns void--
addFont(SWFFont font)
   Description SWFMovie mixed --returns mixed--
__construct(int version)
   Creates a new movie object, representing an SWF version 4 movie --returns SWFMovie--
importChar(string libswf, string name)
   Description SWFMovie SWFSprite --returns SWFSprite--
importFont(string libswf, string name)
   Description SWFMovie SWFFontChar --returns SWFFontChar--
labelFrame(string label)
   Labels a frame --returns void--
nextFrame(void)
   Moves to the next frame of the animation --returns void--
output ([ int compression ])
   Dumps your lovingly prepared movie out --returns int--
remove(object instance)
   Removes the object instance from the display list --returns void--
save(string filename [, int compression ])
   Saves the SWF movie in a file --returns int--
saveToFile(stream x [, int compression ])
   Description SWFMovie int --returns int--
setbackground(int red, int green, int blue)
   Sets the background color --returns void--
setDimension(int width, int height)
   Sets the movie's width and height --returns void--
setFrames(int number)
   Sets the total number of frames in the animation --returns void--
setRate(int rate)
   Sets the animation's frame rate --returns void--
startSound(SWFSound sound)
   Description SWFMovie SWFSoundInstance --returns SWFSoundInstance--
stopSound(SWFSound sound)
   Description SWFMovie void --returns void--
streamMP3(mixed mp3file [, float skip ])
   Streams a MP3 file --returns int--
writeExports(void)
   Description SWFMovie void --returns void--
__construct ([ string file ])
   Returns a SWFPrebuiltClip object --returns SWFPrebuiltClip--
addFill(int red, int green, int blue [, int a ]) SWFFill addFill(SWFBitmap bitmap [, int flags ]) SWFFill addFill(SWFGradient gradient [, int flags ])
   Adds a solid fill to the shape --returns SWFFill--
__construct(void)
   Creates a new shape object --returns SWFShape--
drawArc(float r, float startAngle, float endAngle)
   Draws an arc of radius r centered at the current location, from angle startAngle to angle endAngle measured clockwise from 12 o'clock --returns void--
drawCircle(float r)
   Draws a circle of radius r centered at the current location, in a counter-clockwise fashion --returns void--
drawCubic(float bx, float by, float cx, float cy, float dx, float dy)
   Draws a cubic bezier curve using the current position and the three given points as control points --returns int--
drawCubicTo(float bx, float by, float cx, float cy, float dx, float dy)
   Draws a cubic bezier curve using the current position and the three given points as control points --returns int--
drawCurve(int controldx, int controldy, int anchordx, int anchordy [, int targetdx ], int targetdy)
   Draws a curve (relative) --returns int--
drawCurveTo(int controlx, int controly, int anchorx, int anchory [, int targetx ], int targety)
   Draws a curve --returns int--
drawGlyph(SWFFont font, string character [, int size ])
   Draws the first character in the given string into the shape using the glyph definition from the given font --returns void--
drawLine(int dx, int dy)
   Draws a line (relative) --returns void--
drawLineTo(int x, int y)
   Draws a line --returns void--
movePen(int dx, int dy)
   Moves the shape's pen (relative) --returns void--
movePenTo(int x, int y)
   Moves the shape's pen --returns void--
setLeftFill(SWFGradient fill) void setLeftFill(int red, int green, int blue [, int a ])
   Sets left rasterizing color --returns void--
setLine(SWFShape shape) void setLine(int width, int red, int green, int blue [, int a ])
   Sets the shape's line style --returns void--
setRightFill(SWFGradient fill) void setRightFill(int red, int green, int blue [, int a ])
   Sets right rasterizing color --returns void--
__construct(string filename, int flags)
   Returns a new SWFSound object from given file --returns SWFSound--
loopCount(int point)
   Description SWFSoundInstance void --returns void--
loopInPoint(int point)
   Description SWFSoundInstance void --returns void--
loopOutPoint(int point)
   Description SWFSoundInstance void --returns void--
noMultiple(void)
   Description SWFSoundInstance void --returns void--
add(object object)
   Adds an object to a sprite --returns void--
__construct(void)
   Creates a movie clip (a sprite) --returns SWFSprite--
labelFrame(string label)
   Labels frame --returns void--
nextFrame(void)
   Moves to the next frame of the animation --returns void--
remove(object object)
   Removes an object to a sprite --returns void--
setFrames(int number)
   Sets the total number of frames in the animation --returns void--
startSound(SWFSound sount)
   Description SWFSprite SWFSoundInstance --returns SWFSoundInstance--
stopSound(SWFSound sount)
   Description SWFSprite void --returns void--
addString(string string)
   Draws a string --returns void--
addUTF8String(string text)
   Writes the given text into this SWFText object at the current pen position, using the current font, height, spacing, and color --returns void--
__construct(void)
   Creates a new SWFText object --returns void--
getAscent(void)
   Returns the ascent of the current font at its current size, or 0 if not available --returns float--
getDescent(void)
   Returns the descent of the current font at its current size, or 0 if not available --returns float--
getLeading(void)
   Returns the leading of the current font at its current size, or 0 if not available --returns float--
getUTF8Width(string string)
   calculates the width of the given string in this text objects current font and size --returns float--
getWidth(string string)
   Computes string's width --returns float--
moveTo(int x, int y)
   Moves the pen --returns void--
setColor(int red, int green, int blue [, int a ])
   Sets the current text color --returns void--
setFont(string font)
   Sets the current font --returns void--
setHeight(int height)
   Sets the current font height --returns void--
setSpacing(float spacing)
   Sets the current font spacing --returns void--
addChars(string chars)
   adds characters to a font that will be available within a textfield --returns void--
addString(string string)
   Concatenates the given string to the text field --returns void--
align(int alignement)
   Sets the text field alignment --returns void--
__construct ([ int flags ])
   Creates a text field object --returns SWFTextField--
setBounds(int width, int height)
   Sets the text field width and height --returns void--
setColor(int red, int green, int blue [, int a ])
   Sets the color of the text field --returns void--
setFont(string font)
   Sets the text field font --returns void--
setHeight(int height)
   Sets the font height of this text field font --returns void--
setIndentation(int width)
   Sets the indentation of the first line --returns void--
setLeftMargin(int width)
   Sets the left margin width of the text field --returns void--
setLineSpacing(int height)
   Sets the line spacing of the text field --returns void--
setMargins(int left, int right)
   Sets the margins width of the text field --returns void--
setName(string name)
   Sets the variable name --returns void--
setPadding(float padding)
   Sets the padding of this textfield --returns void--
setRightMargin(int width)
   Sets the right margin width of the text field --returns void--
__construct ([ string file ])
   Returns a SWFVideoStream object --returns SWFVideoStream--
getNumFrames(void)
   Returns the number of frames in the video --returns int--
setDimension(int x, int y)
   Sets video dimension --returns void--
Swish::__construct(string index_names)
   Construct a Swish object --returns void--
Swish->getMetaList(string index_name)
   Get the list of meta entries for the index --returns array--
Swish->getPropertyList(string index_name)
   Get the list of properties for the index --returns array--
Swish->prepare ([ string query ])
   Prepare a search query --returns object--
Swish->query(string query)
   Execute a query and return results object --returns object--
SwishResult->getMetaList(void)
   Get a list of meta entries --returns array--
SwishResult->stem(string word)
   Stems the given word --returns array--
SwishResults->getParsedWords(string index_name)
   Get an array of parsed words --returns array--
SwishResults->getRemovedStopwords(string index_name)
   Get an array of stopwords removed from the query --returns array--
SwishResults->nextResult(void)
   Get the next search result --returns object--
SwishResults->seekResult(int position)
   Set current seek pointer to the given position --returns int--
SwishSearch->execute ([ string query ])
   Execute the search and get the results --returns object--
SwishSearch->resetLimit(void)
   Reset the search limits --returns void--
SwishSearch->setLimit(string property, string low, string high)
   Set the search limits --returns void--
SwishSearch->setPhraseDelimiter(string delimiter)
   Set the phrase delimiter --returns void--
SwishSearch->setSort(string sort)
   Set the sort order --returns void--
SwishSearch->setStructure(int structure)
   Set the structure flag in the search object --returns void--
sybase_affected_rows ([ resource link_identifier ])
   Gets number of affected rows in last query --returns int--
sybase_close ([ resource link_identifier ])
   Closes a Sybase connection --returns bool--
sybase_connect ([ string servername [, string username [, string password [, string charset [, string appname ]]]]])
   Opens a Sybase server connection --returns resource--
sybase_data_seek(resource result_identifier, int row_number)
   Moves internal row pointer --returns bool--
sybase_deadlock_retry_count(int retry_count)
   Sets the deadlock retry count --returns void--
sybase_fetch_array(resource result)
   Fetch row as array --returns array--
sybase_fetch_assoc(resource result)
   Fetch a result row as an associative array --returns array--
sybase_fetch_field(resource result [, int field_offset ])
   Get field information from a result --returns object--
sybase_fetch_object(resource result [, mixed object ])
   Fetch a row as an object --returns object--
sybase_fetch_row(resource result)
   Get a result row as an enumerated array --returns array--
sybase_field_seek(resource result, int field_offset)
   Sets field offset --returns bool--
sybase_free_result(resource result)
   Frees result memory --returns bool--
sybase_get_last_message(void)
   Returns the last message from the server --returns string--
sybase_min_client_severity(int severity)
   Sets minimum client severity --returns void--
sybase_min_error_severity(int severity)
   Sets minimum error severity --returns void--
sybase_min_message_severity(int severity)
   Sets minimum message severity --returns void--
sybase_min_server_severity(int severity)
   Sets minimum server severity --returns void--
sybase_num_fields(resource result)
   Gets the number of fields in a result set --returns int--
sybase_num_rows(resource result)
   Get number of rows in a result set --returns int--
sybase_pconnect ([ string servername [, string username [, string password [, string charset [, string appname ]]]]])
   Open persistent Sybase connection --returns resource--
sybase_query(string query [, resource link_identifier ])
   Sends a Sybase query --returns mixed--
sybase_result(resource result, int row, mixed field)
   Get result data --returns string--
sybase_select_db(string database_name [, resource link_identifier ])
   Selects a Sybase database --returns bool--
sybase_set_message_handler(callback handler [, resource connection ])
   Sets the handler called when a server message is raised --returns bool--
sybase_unbuffered_query(string query, resource link_identifier [, bool store_result ])
   Send a Sybase query and do not block --returns resource--
symlink(string target, string link)
   Creates a symbolic link --returns bool--
sys_get_temp_dir(void)
   Returns directory path used for temporary files --returns string--
sys_getloadavg(void)
   Gets system load average --returns array--
syslog(int priority, string message)
   Generate a system log message --returns bool--
system(string command [, int &return_var ])
   Execute an external program and display the output --returns string--
tan(float arg)
   Tangent --returns float--
tanh(float arg)
   Hyperbolic tangent --returns float--
tcpwrap_check(string daemon, string address [, string user [, bool nodns ]])
   Performs a tcpwrap check --returns bool--
tempnam(string dir, string prefix)
   Create file with unique file name --returns string--
textdomain(string text_domain)
   Sets the default domain --returns string--
tidy_access_count(tidy object)
   Returns the Number of Tidy accessibility warnings encountered for specified document --returns int--
tidy_clean_repair(tidy object) bool tidy->cleanRepair(void)
   Execute configured cleanup and repair operations on parsed markup --returns bool--
tidy_config_count(tidy object)
   Returns the Number of Tidy configuration errors encountered for specified document --returns int--
tidy::__construct ([ string filename [, mixed config [, string encoding [, bool use_include_path ]]]])
   Constructs a new tidy object --returns tidy--
tidy_diagnose(tidy object) bool tidy->diagnose(void)
   Run configured diagnostics on parsed and repaired markup --returns bool--
tidy_error_count(tidy object)
   Returns the Number of Tidy errors encountered for specified document --returns int--
tidy_get_body(tidy object) tidyNode tidy->body(void)
   Returns a tidyNode Object starting from the &lt;body&gt; tag of the tidy parse tree --returns tidyNode--
tidy_get_config(tidy object) array tidy->getConfig(void)
   Get current Tidy configuration --returns array--
tidy_get_error_buffer(tidy object)
   Return warnings and errors which occurred parsing the specified document --returns string--
tidy_get_head(tidy object) tidyNode tidy->head(void)
   Returns a tidyNode Object starting from the &lt;head&gt; tag of the tidy parse tree --returns tidyNode--
tidy_get_html_ver(tidy object) int tidy->getHtmlVer(void)
   Get the Detected HTML version for the specified document --returns int--
tidy_get_html(tidy object) tidyNode tidy->html(void)
   Returns a tidyNode Object starting from the &lt;html&gt; tag of the tidy parse tree --returns tidyNode--
tidy_get_opt_doc(tidy object, string optname) string tidy->getOptDoc(string optname)
   Returns the documentation for the given option name --returns string--
tidy_get_output(tidy object)
   Return a string representing the parsed tidy markup --returns string--
tidy_get_release(void) string tidy->getRelease(void)
   Get release date (version) for Tidy library --returns string--
tidy_get_root(tidy object) tidyNode tidy->root(void)
   Returns a tidyNode object representing the root of the tidy parse tree --returns tidyNode--
tidy_get_status(tidy object) int tidy->getStatus(void)
   Get status of specified document --returns int--
tidy_getopt(tidy object, string option) mixed tidy->getOpt(string option)
   Returns the value of the specified configuration option for the tidy document --returns mixed--
tidy_is_xhtml(tidy object) bool tidy->isXhtml(void)
   Indicates if the document is a XHTML document --returns bool--
tidy_is_xml(tidy object) bool tidy->isXml(void)
   Indicates if the document is a generic (non HTML/XHTML) XML document --returns bool--
tidy_load_config(string filename, string encoding)
   Load an ASCII Tidy configuration file with the specified encoding --returns void--
tidy_node->get_attr(int attrib_id)
   Return the attribute with the provided attribute id --returns tidy_attr--
tidy_node->get_nodes(int node_id)
   Return an array of nodes under this node with the specified id --returns array--
tidy_node->next(void)
   Returns the next sibling to this node --returns tidy_node--
tidy_node->prev(void)
   Returns the previous sibling to this node --returns tidy_node--
tidy_parse_file(string filename [, mixed config [, string encoding [, bool use_include_path ]]]) bool tidy->parseFile(string filename [, mixed config [, string encoding [, bool use_include_path ]]])
   Parse markup in file or URI --returns tidy--
tidy_parse_string(string input [, mixed config [, string encoding ]]) bool tidy->parseString(string input [, mixed config [, string encoding ]])
   Parse a document stored in a string --returns tidy--
tidy_repair_file(string filename [, mixed config [, string encoding [, bool use_include_path ]]])
   Repair a file and return it as a string --returns string--
tidy_repair_string(string data [, mixed config [, string encoding ]])
   Repair a string using an optionally provided configuration file --returns string--
tidy_reset_config(void)
   Restore Tidy configuration to default values --returns bool--
tidy_save_config(string filename)
   Save current settings to named file --returns bool--
tidy_set_encoding(string encoding)
   Set the input/output character encoding for parsing markup --returns bool--
tidy_setopt(string option, mixed value)
   Updates the configuration settings for the specified tidy document --returns bool--
tidy_warning_count(tidy object)
   Returns the Number of Tidy warnings encountered for specified document --returns int--
tidyNode::getParent(void)
   returns the parent node of the current node --returns tidyNode--
tidyNode->hasChildren(void)
   Returns true if this node has children --returns bool--
tidyNode->hasSiblings(void)
   Returns true if this node has siblings --returns bool--
tidyNode->isAsp(void)
   Returns true if this node is ASP --returns bool--
tidyNode->isComment(void)
   Returns true if this node represents a comment --returns bool--
tidyNode->isHtml(void)
   Returns true if this node is part of a HTML document --returns bool--
tidyNode->isJste(void)
   Returns true if this node is JSTE --returns bool--
tidyNode->isPhp(void)
   Returns true if this node is PHP --returns bool--
tidyNode->isText(void)
   Returns true if this node represents text (no markup) --returns bool--
time_nanosleep(int seconds, int nanoseconds)
   Delay for a number of seconds and nanoseconds --returns mixed--
time_sleep_until(float timestamp)
   Make the script sleep until the specified time --returns bool--
time(void)
   Return current Unix timestamp --returns int--
timezone_abbreviations_list(void) array DateTimeZone::listAbbreviations(void)
   Returns associative array containing dst, offset and the timezone name --returns array--
timezone_identifiers_list(void) array DateTimeZone::listIdentifiers(void)
   Returns numerically index array with all timezone identifiers --returns array--
timezone_name_from_abbr(string abbr [, int gmtOffset [, int isdst ]])
   Returns the timezone name from abbrevation --returns string--
timezone_name_get(DateTimeZone object) string DateTimeZone::getName(void)
   Returns the name of the timezone --returns string--
timezone_offset_get(DateTimeZone object, DateTime datetime) int DateTimeZone::getOffset(DateTime datetime)
   Returns the timezone offset from GMT --returns int--
timezone_open(string timezone) DateTimeZone DateTimeZone::__construct(string timezone)
   Returns new DateTimeZone object --returns DateTimeZone--
timezone_transitions_get(DateTimeZone object) array DateTimeZone::getTransitions(void)
   Returns all transitions for the timezone --returns array--
tmpfile(void)
   Creates a temporary file --returns resource--
token_get_all(string source)
   Split given source into PHP tokens --returns array--
token_name(int token)
   Get the symbolic name of a given PHP token --returns string--
touch(string filename [, int time [, int atime ]])
   Sets access and modification time of file --returns bool--
trigger_error(string error_msg [, int error_type ])
   Generates a user-level error/warning/notice message --returns bool--
trim(string str [, string charlist ])
   Strip whitespace (or other characters) from the beginning and end of a string --returns string--
uasort(array &array, callback cmp_function)
   Sort an array with a user-defined comparison function and maintain index association --returns bool--
ucfirst(string str)
   Make a string's first character uppercase --returns string--
ucwords(string str)
   Uppercase the first character of each word in a string --returns string--
udm_add_search_limit(resource agent, int var, string val)
   Add various search limits --returns bool--
udm_alloc_agent_array(array databases)
   Allocate mnoGoSearch session --returns resource--
udm_alloc_agent(string dbaddr [, string dbmode ])
   Allocate mnoGoSearch session --returns resource--
udm_api_version(void)
   Get mnoGoSearch API version --returns int--
udm_cat_list(resource agent, string category)
   Get all the categories on the same level with the current one --returns array--
udm_cat_path(resource agent, string category)
   Get the path to the current category --returns array--
udm_check_charset(resource agent, string charset)
   Check if the given charset is known to mnogosearch --returns bool--
udm_check_stored(resource agent, int link, string doc_id)
   Check connection to stored --returns int--
udm_clear_search_limits(resource agent)
   Clear all mnoGoSearch search restrictions --returns bool--
udm_close_stored(resource agent, int link)
   Close connection to stored --returns int--
udm_crc32(resource agent, string str)
   Return CRC32 checksum of given string --returns int--
udm_errno(resource agent)
   Get mnoGoSearch error number --returns int--
udm_error(resource agent)
   Get mnoGoSearch error message --returns string--
udm_find(resource agent, string query)
   Perform search --returns resource--
udm_free_agent(resource agent)
   Free mnoGoSearch session --returns int--
udm_free_ispell_data(int agent)
   Free memory allocated for ispell data --returns bool--
udm_free_res(resource res)
   Free mnoGoSearch result --returns bool--
udm_get_doc_count(resource agent)
   Get total number of documents in database --returns int--
udm_get_res_field(resource res, int row, int field)
   Fetch a result field --returns string--
udm_get_res_param(resource res, int param)
   Get mnoGoSearch result parameters --returns string--
udm_hash32(resource agent, string str)
   Return Hash32 checksum of gived string --returns int--
udm_load_ispell_data(resource agent, int var, string val1, string val2, int flag)
   Load ispell data --returns bool--
udm_open_stored(resource agent, string storedaddr)
   Open connection to stored --returns int--
udm_set_agent_param(resource agent, int var, string val)
   Set mnoGoSearch agent session parameters --returns bool--
uksort(array &array, callback cmp_function)
   Sort an array by keys using a user-defined comparison function --returns bool--
umask ([ int mask ])
   Changes the current umask --returns int--
unicode_decode(string input, string encoding [, int errmode ])
   Convert a binary string into a Unicode string --returns unicode--
unicode_encode(unicode input, string encoding [, int errmode ])
   Convert a unicode string in any encoding --returns string--
unicode_get_error_mode(int direction)
   Get the error mode for strings conversions --returns int--
unicode_get_subst_char(void)
   Get the substitution character for string conversion errors --returns unicode--
unicode_set_error_mode(int direction, int mode)
   Set the error mode for strings conversions --returns bool--
unicode_set_subst_char(unicode character)
   Set the substitution character for string conversion errors --returns bool--
uniqid ([ string prefix [, bool more_entropy ]])
   Generate a unique ID --returns string--
unixtojd ([ int timestamp ])
   Convert Unix timestamp to Julian Day --returns int--
unlink(string filename [, resource context ])
   Deletes a file --returns bool--
unpack(string format, string data)
   Unpack data from binary string --returns array--
unregister_tick_function(string function_name)
   De-register a function for execution on each tick --returns void--
unserialize(string str)
   Creates a PHP value from a stored representation --returns mixed--
unset(mixed var [, mixed var [, mixed ... ]])
   Unset a given variable --returns void--
urldecode(string str)
   Decodes URL-encoded string --returns string--
urlencode(string str)
   URL-encodes string --returns string--
use_soap_error_handler ([ bool handler ])
   Set whether to use the SOAP error handler and return the former value --returns bool--
user_error
   Alias of trigger_error() --returns ?--
usleep(int micro_seconds)
   Delay execution in microseconds --returns void--
usort(array &array, callback cmp_function)
   Sort an array by values using a user-defined comparison function --returns bool--
utf8_decode(string data)
   Converts a string with ISO-8859-1 characters encoded with UTF-8 to single-byte ISO-8859-1 --returns string--
utf8_encode(string data)
   Encodes an ISO-8859-1 string to UTF-8 --returns string--
var_dump(mixed expression [, mixed expression [, ... ]])
   Dumps information about a variable --returns void--
var_export(mixed expression [, bool return ])
   Outputs or returns a parsable string representation of a variable --returns mixed--
variant_abs(mixed val)
   Returns the absolute value of a variant --returns mixed--
variant_add(mixed left, mixed right)
   &quot;Adds&quot; two variant values together and returns the result --returns mixed--
variant_and(mixed left, mixed right)
   Performs a bitwise AND operation between two variants --returns mixed--
variant_cast(variant variant, int type)
   Convert a variant into a new variant object of another type --returns variant--
variant_cat(mixed left, mixed right)
   concatenates two variant values together and returns the result --returns mixed--
variant_cmp(mixed left, mixed right [, int lcid [, int flags ]])
   Compares two variants --returns int--
variant_date_from_timestamp(int timestamp)
   Returns a variant date representation of a Unix timestamp --returns variant--
variant_date_to_timestamp(variant variant)
   Converts a variant date/time value to Unix timestamp --returns int--
variant_div(mixed left, mixed right)
   Returns the result from dividing two variants --returns mixed--
variant_eqv(mixed left, mixed right)
   Performs a bitwise equivalence on two variants --returns mixed--
variant_fix(mixed variant)
   Returns the integer portion of a variant --returns mixed--
variant_get_type(variant variant)
   Returns the type of a variant object --returns int--
variant_idiv(mixed left, mixed right)
   Converts variants to integers and then returns the result from dividing them --returns mixed--
variant_imp(mixed left, mixed right)
   Performs a bitwise implication on two variants --returns mixed--
variant_int(mixed variant)
   Returns the integer portion of a variant --returns mixed--
variant_mod(mixed left, mixed right)
   Divides two variants and returns only the remainder --returns mixed--
variant_mul(mixed left, mixed right)
   Multiplies the values of the two variants --returns mixed--
variant_neg(mixed variant)
   Performs logical negation on a variant --returns mixed--
variant_not(mixed variant)
   Performs bitwise not negation on a variant --returns mixed--
variant_or(mixed left, mixed right)
   Performs a logical disjunction on two variants --returns mixed--
variant_pow(mixed left, mixed right)
   Returns the result of performing the power function with two variants --returns mixed--
variant_round(mixed variant, int decimals)
   Rounds a variant to the specified number of decimal places --returns mixed--
variant_set_type(variant variant, int type)
   Convert a variant into another type &quot;in-place&quot; --returns void--
variant_set(variant variant, mixed value)
   Assigns a new value for a variant object --returns void--
variant_sub(mixed left, mixed right)
   Subtracts the value of the right variant from the left variant value --returns mixed--
variant_xor(mixed left, mixed right)
   Performs a logical exclusion on two variants --returns mixed--
version_compare(string version1, string version2 [, string operator ])
   Compares two &quot;PHP-standardized&quot; version number strings --returns mixed--
vfprintf(resource handle, string format, array args)
   Write a formatted string to a stream --returns int--
virtual(string filename)
   Perform an Apache sub-request --returns bool--
vpopmail_add_alias_domain_ex(string olddomain, string newdomain)
   Add alias to an existing virtual domain --returns bool--
vpopmail_add_alias_domain(string domain, string aliasdomain)
   Add an alias for a virtual domain --returns bool--
vpopmail_add_domain_ex(string domain, string passwd [, string quota [, string bounce [, bool apop ]]])
   Add a new virtual domain --returns bool--
vpopmail_add_domain(string domain, string dir, int uid, int gid)
   Add a new virtual domain --returns bool--
vpopmail_add_user(string user, string domain, string password [, string gecos [, bool apop ]])
   Add a new user to the specified virtual domain --returns bool--
vpopmail_alias_add(string user, string domain, string alias)
   Insert a virtual alias --returns bool--
vpopmail_alias_del_domain(string domain)
   Deletes all virtual aliases of a domain --returns bool--
vpopmail_alias_del(string user, string domain)
   Deletes all virtual aliases of a user --returns bool--
vpopmail_alias_get_all(string domain)
   Get all lines of an alias for a domain --returns array--
vpopmail_alias_get(string alias, string domain)
   Get all lines of an alias for a domain --returns array--
vpopmail_auth_user(string user, string domain, string password [, string apop ])
   Attempt to validate a username/domain/password --returns bool--
vpopmail_del_domain_ex(string domain)
   Delete a virtual domain --returns bool--
vpopmail_del_domain(string domain)
   Delete a virtual domain --returns bool--
vpopmail_del_user(string user, string domain)
   Delete a user from a virtual domain --returns bool--
vpopmail_error(void)
   Get text message for last vpopmail error --returns string--
vpopmail_passwd(string user, string domain, string password [, bool apop ])
   Change a virtual user's password --returns bool--
vpopmail_set_user_quota(string user, string domain, string quota)
   Sets a virtual user's quota --returns bool--
vprintf(string format, array args)
   Output a formatted string --returns int--
vsprintf(string format, array args)
   Return a formatted string --returns string--
w32api_deftype(string typename, string member1_type, string member1_name [, string ... [, string ... ]])
   Defines a type for use with other w32api_functions --returns bool--
w32api_init_dtype(string typename, mixed value [, mixed ... ])
   Creates an instance of the data type typename and fills it with the values passed --returns resource--
w32api_invoke_function(string funcname, mixed argument [, mixed ... ])
   Invokes function funcname with the arguments passed after the function name --returns mixed--
w32api_register_function(string library, string function_name, string return_type)
   Registers function function_name from library with PHP --returns bool--
w32api_set_call_method(int method)
   Sets the calling method used --returns void--
wddx_add_vars(resource packet_id, mixed var_name [, mixed ... ])
   Add variables to a WDDX packet with the specified ID --returns bool--
wddx_deserialize
   Alias of wddx_unserialize() --returns ?--
wddx_packet_end(resource packet_id)
   Ends a WDDX packet with the specified ID --returns string--
wddx_packet_start ([ string comment ])
   Starts a new WDDX packet with structure inside it --returns resource--
wddx_serialize_value(mixed var [, string comment ])
   Serialize a single value into a WDDX packet --returns string--
wddx_serialize_vars(mixed var_name [, mixed ... ])
   Serialize variables into a WDDX packet --returns string--
wddx_unserialize(string packet)
   Unserializes a WDDX packet --returns mixed--
win32_create_service(array details [, string machine ])
   Creates a new service entry in the SCM database --returns mixed--
win32_delete_service(string servicename [, string machine ])
   Deletes a service entry from the SCM database --returns int--
win32_get_last_control_message(void)
   Returns the last control message that was sent to this service --returns int--
win32_ps_list_procs(void)
   List running processes --returns array--
win32_ps_stat_mem(void)
   Stat memory utilization --returns array--
win32_ps_stat_proc ([ int pid ])
   Stat process --returns array--
win32_query_service_status(string servicename [, string machine ])
   Queries the status of a service --returns mixed--
win32_set_service_status(int status)
   Update the service status --returns bool--
win32_start_service_ctrl_dispatcher(string name)
   Registers the script with the SCM, so that it can act as the service with the given name --returns mixed--
win32_start_service(string servicename [, string machine ])
   Starts a service --returns int--
win32_stop_service(string servicename [, string machine ])
   Stops a service --returns int--
wordwrap(string str [, int width [, string break [, bool cut ]]])
   Wraps a string to a given number of characters --returns string--
xattr_get(string filename, string name [, int flags ])
   Get an extended attribute --returns string--
xattr_list(string filename [, int flags ])
   Get a list of extended attributes --returns array--
xattr_remove(string filename, string name [, int flags ])
   Remove an extended attribute --returns bool--
xattr_set(string filename, string name, string value [, int flags ])
   Set an extended attribute --returns bool--
xattr_supported(string filename [, int flags ])
   Check if filesystem supports extended attributes --returns bool--
xdiff_file_bdiff_size(string file)
   Read a size of file created by applying a binary diff --returns int--
xdiff_file_bdiff(string old_file, string new_file, string dest)
   Make binary diff of two files --returns bool--
xdiff_file_bpatch(string file, string patch, string dest)
   Patch a file with a binary diff --returns bool--
xdiff_file_diff_binary(string old_file, string new_file, string dest)
   Alias of xdiff_file_bdiff --returns bool--
xdiff_file_diff(string old_file, string new_file, string dest [, int context [, bool minimal ]])
   Make unified diff of two files --returns bool--
xdiff_file_merge3(string old_file, string new_file1, string new_file2, string dest)
   Merge 3 files into one --returns mixed--
xdiff_file_patch_binary(string file, string patch, string dest)
   Alias of xdiff_file_bpatch --returns bool--
xdiff_file_patch(string file, string patch, string dest [, int flags ])
   Patch a file with an unified diff --returns mixed--
xdiff_file_rabdiff(string old_file, string new_file, string dest)
   Make binary diff of two files using the Rabin's polynomial fingerprinting algorithm --returns bool--
xdiff_string_bdiff_size(string patch)
   Read a size of file created by applying a binary diff --returns int--
xdiff_string_bdiff(string old_data, string new_data)
   Make binary diff of two strings --returns string--
xdiff_string_bpatch(string str, string patch)
   Patch a string with a binary diff --returns string--
xdiff_string_bdiff(string old_data, string new_data)
   Alias of xdiff_string_bdiff --returns string--
xdiff_string_diff(string old_data, string new_data [, int context [, bool minimal ]])
   Make unified diff of two strings --returns string--
xdiff_string_merge3(string old_data, string new_data1, string new_data2 [, string &error ])
   Merge 3 strings into one --returns mixed--
xdiff_string_patch_binary(string str, string patch)
   Alias of xdiff_string_bpatch --returns string--
xdiff_string_patch(string str, string patch [, int flags [, string &error ]])
   Patch a string with an unified diff --returns string--
xdiff_string_bdiff(string old_data, string new_data)
   Make binary diff of two strings using the Rabin's polynomial fingerprinting algorithm --returns string--
xml_error_string(int code)
   Get XML parser error string --returns string--
xml_get_current_byte_index(resource parser)
   Get current byte index for an XML parser --returns int--
xml_get_current_column_number(resource parser)
   Get current column number for an XML parser --returns int--
xml_get_current_line_number(resource parser)
   Get current line number for an XML parser --returns int--
xml_get_error_code(resource parser)
   Get XML parser error code --returns int--
xml_parse_into_struct(resource parser, string data, array &values [, array &index ])
   Parse XML data into an array structure --returns int--
xml_parse(resource parser, string data [, bool is_final ])
   Start parsing an XML document --returns int--
xml_parser_create_ns ([ string encoding [, string separator ]])
   Create an XML parser with namespace support --returns resource--
xml_parser_create ([ string encoding ])
   Create an XML parser --returns resource--
xml_parser_free(resource parser)
   Free an XML parser --returns bool--
xml_parser_get_option(resource parser, int option)
   Get options from an XML parser --returns mixed--
xml_parser_set_option(resource parser, int option, mixed value)
   Set options in an XML parser --returns bool--
xml_set_character_data_handler(resource parser, callback handler) handler(resource parser, string data)
   Set up character data handler --returns bool--
xml_set_default_handler(resource parser, callback handler) handler(resource parser, string data)
   Set up default handler --returns bool--
xml_set_element_handler(resource parser, callback start_element_handler, callback end_element_handler) start_element_handler(resource parser, string name, array attribs) end_element_handler(resource parser, string name)
   Set up start and end element handlers --returns bool--
xml_set_end_namespace_decl_handler(resource parser, callback handler) handler(resource parser, string user_data, string prefix)
   Set up end namespace declaration handler --returns bool--
xml_set_external_entity_ref_handler(resource parser, callback handler) handler(resource parser, string open_entity_names, string base, string system_id, string public_id)
   Set up external entity reference handler --returns bool--
xml_set_notation_decl_handler(resource parser, callback handler) handler(resource parser, string notation_name, string base, string system_id, string public_id)
   Set up notation declaration handler --returns bool--
xml_set_object(resource parser, object &object)
   Use XML Parser within an object --returns bool--
xml_set_processing_instruction_handler(resource parser, callback handler) handler(resource parser, string target, string data)
   Set up processing instruction (PI) handler --returns bool--
xml_set_start_namespace_decl_handler(resource parser, callback handler) handler(resource parser, string user_data, string prefix, string uri)
   Set up start namespace declaration handler --returns bool--
xml_set_unparsed_entity_decl_handler(resource parser, callback handler) handler(resource parser, string entity_name, string base, string system_id, string public_id, string notation_name)
   Set up unparsed entity declaration handler --returns bool--
xmlrpc_decode_request(string xml, string &method [, string encoding ])
   Decodes XML into native PHP types --returns mixed--
xmlrpc_decode(string xml [, string encoding ])
   Decodes XML into native PHP types --returns mixed--
xmlrpc_encode_request(string method, mixed params [, array output_options ])
   Generates XML for a method request --returns string--
xmlrpc_encode(mixed value)
   Generates XML for a PHP value --returns string--
xmlrpc_get_type(mixed value)
   Gets xmlrpc type for a PHP value --returns string--
xmlrpc_is_fault(array arg)
   Determines if an array value represents an XMLRPC fault --returns bool--
xmlrpc_parse_method_descriptions(string xml)
   Decodes XML into a list of method descriptions --returns array--
xmlrpc_server_add_introspection_data(resource server, array desc)
   Adds introspection documentation --returns int--
xmlrpc_server_call_method(resource server, string xml, mixed user_data [, array output_options ])
   Parses XML requests and call methods --returns string--
xmlrpc_server_create(void)
   Creates an xmlrpc server --returns resource--
xmlrpc_server_destroy(resource server)
   Destroys server resources --returns int--
xmlrpc_server_register_introspection_callback(resource server, string function)
   Register a PHP function to generate documentation --returns bool--
xmlrpc_server_register_method(resource server, string method_name, string function)
   Register a PHP function to resource method matching method_name --returns bool--
xmlrpc_set_type(string &value, string type)
   Sets xmlrpc type, base64 or datetime, for a PHP string value --returns bool--
endAttribute(void) bool xmlwriter_end_attribute(resource xmlwriter)
   End attribute --returns bool--
endCData(void) bool xmlwriter_end_cdata(resource xmlwriter)
   End current CDATA --returns bool--
endComment(void) bool xmlwriter_end_comment(resource xmlwriter)
   Create end comment --returns bool--
endDocument(void) bool xmlwriter_end_document(resource xmlwriter)
   End current document --returns bool--
endDTDAttlist(void) bool xmlwriter_end_dtd_attlist(resource xmlwriter)
   End current DTD AttList --returns bool--
endDTDElement(void) bool xmlwriter_end_dtd_element(resource xmlwriter)
   End current DTD element --returns bool--
endDTDEntity(void) bool xmlwriter_end_dtd_entity(resource xmlwriter)
   End current DTD Entity --returns bool--
endDTD(void) bool xmlwriter_end_dtd(resource xmlwriter)
   End current DTD --returns bool--
endElement(void) bool xmlwriter_end_element(resource xmlwriter)
   End current element --returns bool--
endPI(void) bool xmlwriter_end_pi(resource xmlwriter)
   End current PI --returns bool--
flush ([ bool empty ]) mixed xmlwriter_flush(resource xmlwriter [, bool empty ])
   Flush current buffer --returns mixed--
fullEndElement(void) bool xmlwriter_full_end_element(resource xmlwriter)
   End current element --returns bool--
openMemory(void) resource xmlwriter_open_memory(void)
   Create new xmlwriter using memory for string output --returns bool--
openURI(string uri) resource xmlwriter_open_uri(string uri)
   Create new xmlwriter using source uri for output --returns bool--
outputMemory ([ bool flush ]) string xmlwriter_output_memory(resource xmlwriter [, bool flush ])
   Returns current buffer --returns string--
setIndentString(string indentString) bool xmlwriter_set_indent_string(resource xmlwriter, string indentString)
   Set string used for indenting --returns bool--
setIndent(bool indent) bool xmlwriter_set_indent(resource xmlwriter, bool indent)
   Toggle indentation on/off --returns bool--
startAttributeNS(string prefix, string name, string uri) bool xmlwriter_start_attribute_ns(resource xmlwriter, string prefix, string name, string uri)
   Create start namespaced attribute --returns bool--
startAttribute(string name) bool xmlwriter_start_attribute(resource xmlwriter, string name)
   Create start attribute --returns bool--
startCData(void) bool xmlwriter_start_cdata(resource xmlwriter)
   Create start CDATA tag --returns bool--
startComment(void) bool xmlwriter_start_comment(resource xmlwriter)
   Create start comment --returns bool--
startDocument ([ string version [, string encoding [, string standalone ]]]) bool xmlwriter_start_document(resource xmlwriter [, string version [, string encoding [, string standalone ]]])
   Create document tag --returns bool--
startDTDAttlist(string name) bool xmlwriter_start_dtd_attlist(resource xmlwriter, string name)
   Create start DTD AttList --returns bool--
startDTDElement(string qualifiedName) bool xmlwriter_start_dtd_element(resource xmlwriter, string qualifiedName)
   Create start DTD element --returns bool--
startDTDEntity(string name, bool isparam) bool xmlwriter_start_dtd_entity(resource xmlwriter, string name, bool isparam)
   Create start DTD Entity --returns bool--
startDTD(string qualifiedName [, string publicId [, string systemId ]]) bool xmlwriter_start_dtd(resource xmlwriter, string qualifiedName [, string publicId [, string systemId ]])
   Create start DTD tag --returns bool--
startElementNS(string prefix, string name, string uri) bool xmlwriter_start_element_ns(resource xmlwriter, string prefix, string name, string uri)
   Create start namespaced element tag --returns bool--
startElement(string name) bool xmlwriter_start_element(resource xmlwriter, string name)
   Create start element tag --returns bool--
startPI(string target) bool xmlwriter_start_pi(resource xmlwriter, string target)
   Create start PI tag --returns bool--
text(string content) bool xmlwriter_text(resource xmlwriter, string content)
   Write text --returns bool--
writeAttributeNS(string prefix, string name, string uri, string content) bool xmlwriter_write_attribute_ns(resource xmlwriter, string prefix, string name, string uri, string content)
   Write full namespaced attribute --returns bool--
writeAttribute(string name, string value) bool xmlwriter_write_attribute(resource xmlwriter, string name, string value)
   Write full attribute --returns bool--
writeCData(string content) bool xmlwriter_write_cdata(resource xmlwriter, string content)
   Write full CDATA tag --returns bool--
writeComment(string content) bool xmlwriter_write_comment(resource xmlwriter, string content)
   Write full comment tag --returns bool--
writeDTDAttlist(string name, string content) bool xmlwriter_write_dtd_attlist(resource xmlwriter, string name, string content)
   Write full DTD AttList tag --returns bool--
writeDTDElement(string name, string content) bool xmlwriter_write_dtd_element(resource xmlwriter, string name, string content)
   Write full DTD element tag --returns bool--
writeDTDEntity(string name, string content) bool xmlwriter_write_dtd_entity(resource xmlwriter, string name, string content)
   Write full DTD Entity tag --returns bool--
writeDTD(string name [, string publicId [, string systemId [, string subset ]]]) bool xmlwriter_write_dtd(resource xmlwriter, string name [, string publicId [, string systemId [, string subset ]]])
   Write full DTD tag --returns bool--
writeElementNS(string prefix, string name, string uri [, string content ]) bool xmlwriter_write_element_ns(resource xmlwriter, string prefix, string name, string uri [, string content ])
   Write full namesapced element tag --returns bool--
writeElement(string name [, string content ]) bool xmlwriter_write_element(resource xmlwriter, string name [, string content ])
   Write full element tag --returns bool--
writePI(string target, string content) bool xmlwriter_write_pi(resource xmlwriter, string target, string content)
   Writes a PI --returns bool--
writeRaw(string content) bool xmlwriter_write_raw(resource xmlwriter, string content)
   Write a raw XML text --returns bool--
xpath_eval_expression(string expression [, domnode contextnode ]) XPathObject xpath_eval_expression(XPathContext xpath_context, string expression [, domnode contextnode ])
   Evaluates the XPath Location Path in the given string --returns XPathObject--
xpath_eval(string xpath_expression [, domnode contextnode ]) XPathObject xpath_eval(XPathContext xpath_context, string xpath_expression [, domnode contextnode ])
   Evaluates the XPath Location Path in the given string --returns XPathObject--
xpath_new_context(domdocument dom_document)
   Creates new xpath context --returns XPathContext--
xpath_register_ns_auto(XPathContext xpath_context [, object context_node ])
   Register the given namespace in the passed XPath context --returns bool--
xpath_register_ns(XPathContext xpath_context, string prefix, string uri)
   Register the given namespace in the passed XPath context --returns bool--
xptr_eval(string eval_str [, domnode contextnode ]) int xptr_eval(XPathContext xpath_context, string eval_str [, domnode contextnode ])
   Evaluate the XPtr Location Path in the given string --returns int--
xptr_new_context(void)
   Create new XPath Context --returns XPathContext--
xslt_backend_info(void)
   Returns the information on the compilation settings of the backend --returns string--
xslt_backend_name(void)
   Returns the name of the backend --returns string--
xslt_backend_version(void)
   Returns the version number of Sablotron --returns string--
xslt_create(void)
   Create a new XSLT processor --returns resource--
xslt_errno(resource xh)
   Returns an error number --returns int--
xslt_error(resource xh)
   Returns an error string --returns string--
xslt_free(resource xh)
   Free XSLT processor --returns void--
xslt_getopt(resource processor)
   Get options on a given xsl processor --returns int--
xslt_process(resource xh, string xmlcontainer, string xslcontainer [, string resultcontainer [, array arguments [, array parameters ]]])
   Perform an XSLT transformation --returns mixed--
xslt_set_base(resource xh, string uri)
   Set the base URI for all XSLT transformations --returns void--
xslt_set_encoding(resource xh, string encoding)
   Set the encoding for the parsing of XML documents --returns void--
xslt_set_error_handler(resource xh, mixed handler) error_handler(resource xh, int error_level, int error_code, array messages)
   Set an error handler for a XSLT processor --returns void--
xslt_set_log(resource xh [, mixed log ])
   Set the log file to write log messages to --returns void--
xslt_set_object(resource processor, object &obj)
   Sets the object in which to resolve callback functions --returns bool--
xslt_set_sax_handler(resource xh, array handlers)
   Set SAX handlers for a XSLT processor --returns void--
xslt_set_sax_handlers(resource processor, array handlers) start_doc(resource processor) end_doc(resource processor) start_element(resource processor, string name, array attributes) end_element(resource processor, string name) start_namespace(resource processor, string prefix, string uri) end_namespace(resource processor, string prefix) comment(resource processor, string contents) pi(resource processor, string target, string contents) characters(resource processor, string contents)
   Set the SAX handlers to be called when the XML document gets processed --returns void--
xslt_set_scheme_handler(resource xh, array handlers)
   Set Scheme handlers for a XSLT processor --returns void--
xslt_set_scheme_handlers(resource xh, array handlers)
   Set the scheme handlers for the XSLT processor --returns void--
xslt_setopt(resource processor, int newmask)
   Set options on a given xsl processor --returns mixed--
yaz_addinfo(resource id)
   Returns additional error information --returns string--
yaz_ccl_conf(resource id, array config)
   Configure CCL parser --returns void--
yaz_ccl_parse(resource id, string query, array &result)
   Invoke CCL Parser --returns bool--
yaz_close(resource id)
   Close YAZ connection --returns bool--
yaz_connect(string zurl [, mixed options ])
   Prepares for a connection to a Z39.50 server --returns mixed--
yaz_database(resource id, string databases)
   Specifies the databases within a session --returns bool--
yaz_element(resource id, string elementset)
   Specifies Element-Set Name for retrieval --returns bool--
yaz_errno(resource id)
   Returns error number --returns int--
yaz_error(resource id)
   Returns error description --returns string--
yaz_es_result(resource id)
   Inspects Extended Services Result --returns array--
yaz_es(resource id, string type, array args)
   Prepares for an Extended Service Request --returns void--
yaz_get_option(resource id, string name)
   Returns value of option for connection --returns string--
yaz_hits(resource id [, array &searchresult ])
   Returns number of hits for last search --returns int--
yaz_itemorder(resource id, array args)
   Prepares for Z39.50 Item Order with an ILL-Request package --returns void--
yaz_present(resource id)
   Prepares for retrieval (Z39.50 present) --returns bool--
yaz_range(resource id, int start, int number)
   Specifies a range of records to retrieve --returns void--
yaz_record(resource id, int pos, string type)
   Returns a record --returns string--
yaz_scan_result(resource id [, array &result ])
   Returns Scan Response result --returns array--
yaz_scan(resource id, string type, string startterm [, array flags ])
   Prepares for a scan --returns void--
yaz_schema(resource id, string schema)
   Specifies schema for retrieval --returns void--
yaz_search(resource id, string type, string query)
   Prepares for a search --returns bool--
yaz_set_option(resource id, string name, string value) void yaz_set_option(resource id, array options)
   Sets one or more options for connection --returns void--
yaz_sort(resource id, string criteria)
   Sets sorting criteria --returns void--
yaz_syntax(resource id, string syntax)
   Specifies the preferred record syntax for retrieval --returns void--
yaz_wait ([ array &options ])
   Wait for Z39.50 requests to complete --returns mixed--
yp_all(string domain, string map, string callback)
   Traverse the map and call a function on each entry --returns void--
yp_cat(string domain, string map)
   Return an array containing the entire map --returns array--
yp_err_string(int errorcode)
   Returns the error string associated with the given error code --returns string--
yp_errno(void)
   Returns the error code of the previous operation --returns int--
yp_first(string domain, string map)
   Returns the first key-value pair from the named map --returns array--
yp_get_default_domain(void)
   Fetches the machine's default NIS domain --returns string--
yp_master(string domain, string map)
   Returns the machine name of the master NIS server for a map --returns string--
yp_match(string domain, string map, string key)
   Returns the matched line --returns string--
yp_next(string domain, string map, string key)
   Returns the next key-value pair in the named map --returns array--
yp_order(string domain, string map)
   Returns the order number for a map --returns int--
zend_logo_guid(void)
   Gets the Zend guid --returns string--
zend_thread_id(void)
   Returns a unique identifier for the current thread --returns int--
zend_version(void)
   Gets the version of the current Zend engine --returns string--
zip_close(resource zip)
   Close a ZIP file archive --returns void--
zip_entry_close(resource zip_entry)
   Close a directory entry --returns bool--
zip_entry_compressedsize(resource zip_entry)
   Retrieve the compressed size of a directory entry --returns int--
zip_entry_compressionmethod(resource zip_entry)
   Retrieve the compression method of a directory entry --returns string--
zip_entry_filesize(resource zip_entry)
   Retrieve the actual file size of a directory entry --returns int--
zip_entry_name(resource zip_entry)
   Retrieve the name of a directory entry --returns string--
zip_entry_open(resource zip, resource zip_entry [, string mode ])
   Open a directory entry for reading --returns bool--
zip_entry_read(resource zip_entry [, int length ])
   Read from an open directory entry --returns string--
zip_open(string filename)
   Open a ZIP file archive --returns mixed--
zip_read(resource zip)
   Read next entry in a ZIP file archive --returns mixed--
ZipArchive::addEmptyDir(string dirname)
   Add a new directory --returns bool--
ZipArchive::addFile(string filename [, string localname ])
   Adds a file to a ZIP archive from the given path --returns bool--
ZipArchive::addFromString(string localname, string contents)
   Add a file to a ZIP archive using its contents --returns bool--
ZipArchive::close(void)
   Close the active archive (opened or newly created) --returns bool--
ZipArchive::deleteIndex(int index)
   delete an entry in the archive using its index --returns bool--
ZipArchive::deleteName(string name)
   delete an entry in the archive using its name --returns bool--
ZipArchive::extractTo(string destination [, mixed entries ])
   Extract the archive contents --returns mixed--
ZipArchive::getArchiveComment(void)
   Returns the Zip archive comment --returns string--
ZipArchive::getCommentIndex(int index [, int flags ])
   Returns the comment of an entry using the entry index --returns string--
ZipArchive::getCommentName(string name [, int flags ])
   Returns the comment of an entry using the entry name --returns string--
ZipArchive::getFromIndex(int index [, int flags ])
   Returns the entry contents using its index. --returns mixed--
ZipArchive::getFromName(string name [, int flags ])
   Returns the entry contents using its name. --returns mixed--
ZipArchive::getNameIndex(int index)
   Returns the name of an entry using its index --returns string--
ZipArchive::getStream(string name)
   Get a file handler to the entry defined by its name (read only). --returns resource--
ZipArchive::locateName(string name [, int flags ])
   Returns the index of the entry in the archive --returns mixed--
ZipArchive::open(string filename [, int flags ])
   Open a ZIP file archive --returns mixed--
ZipArchive::renameIndex(int index, string newname)
   Renames an entry defined by its index --returns bool--
ZipArchive::renameName(string name, string newname)
   Renames an entry defined by its name --returns bool--
ZipArchive::setCommentName(string name, string comment)
   Set the comment of an entry defined by its name --returns mixed--
ZipArchive::setArchiveComment(string comment)
   Set the comment of a ZIP archive --returns mixed--
ZipArchive::setCommentIndex(int index, string comment)
   Set the comment of an entry defined by its index --returns mixed--
ZipArchive::statIndex(int index [, int flags ])
   Get the details of an entry defined by its index. --returns mixed--
ZipArchive::statName(name name [, int flags ])
   Get the details of an entry defined by its name. --returns mixed--
ZipArchive::unchangeAll(void)
   Undo all changes done in the archive. --returns mixed--
ZipArchive::unchangeArchive(void)
   Revert all global changes done in the archive. --returns mixed--
ZipArchive::unchangeIndex(int index)
   Revert all changes done to an entry at the given index. --returns mixed--
ZipArchive::unchangeName(string name)
   Revert all changes done to an entry with the given name. --returns mixed--
zlib_get_coding_type(void)
   Returns the coding type used for output compression --returns string--
